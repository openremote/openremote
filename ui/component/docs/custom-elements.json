{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "../or-app/src/app.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "{updatePage, updateDrawer, scrollToTop, updateRealm, setOffline, setVisibility}"
        },
        {
          "kind": "variable",
          "name": "appReducer"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "{updatePage, updateDrawer, scrollToTop, updateRealm, setOffline, setVisibility}",
          "declaration": {
            "name": "{updatePage, updateDrawer, scrollToTop, updateRealm, setOffline, setVisibility}",
            "module": "../or-app/src/app.ts"
          }
        },
        {
          "kind": "js",
          "name": "appReducer",
          "declaration": {
            "name": "appReducer",
            "module": "../or-app/src/app.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-app/src/index.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "DefaultLogo"
        },
        {
          "kind": "variable",
          "name": "DefaultMobileLogo"
        },
        {
          "kind": "variable",
          "name": "DefaultFavIcon"
        },
        {
          "kind": "function",
          "name": "getDefaultManagerConfig"
        },
        {
          "kind": "class",
          "description": "# App\r\n### `<or-app>` - `OrApp`\r\n\r\nWrapper for OpenRemote web apps, that includes initialization of the Manager API (HTTP and WS), <br />\r\nstore management using [Redux](https://redux.js.org), and processing the `manager_config.json` file.\r\n\r\n**Warning:** Should not be initialized using `<or-app>` HTML tag, but using the `OrApp` constructor.",
          "name": "OrApp",
          "members": [
            {
              "kind": "field",
              "name": "OFFLINE_PAGE_ID",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "default": "\"offline-page\""
            },
            {
              "kind": "field",
              "name": "appConfig",
              "type": {
                "text": "AppConfig<S> | undefined"
              },
              "privacy": "public",
              "description": "App configuration JSON object to set up the pages, header items, and languages.\r\nYou can use the RealmAppConfig field to adjust these options per realm.",
              "attribute": "appConfig"
            },
            {
              "kind": "field",
              "name": "appConfigProvider",
              "type": {
                "text": "(manager: Manager) => AppConfig<S> | undefined"
              },
              "privacy": "public",
              "description": "Callback function that overrides the appConfig attribute.\r\nThis is preferred sometimes to dynamically adjust the config."
            },
            {
              "kind": "field",
              "name": "managerConfig",
              "type": {
                "text": "ManagerConfig | undefined"
              },
              "privacy": "public",
              "description": "Manager config JSON object for adjusting deployment-targeted options such as managerUrl, realm, mapType, autoLogin etc.",
              "attribute": "managerConfig"
            },
            {
              "kind": "field",
              "name": "_mainElem",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_initialised",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_page",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_config",
              "type": {
                "text": "RealmAppConfig"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_realm",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_offline",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_showOfflineFallback",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_activeMenu",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_onEventBind",
              "type": {
                "text": "any | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_onVisibilityBind",
              "type": {
                "text": "any | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_realms",
              "type": {
                "text": "Realm[]"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_offlineFallbackDeferred",
              "type": {
                "text": "Util.Deferred<void> | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_store",
              "type": {
                "text": "Store<S, AnyAction>"
              },
              "privacy": "protected",
              "default": "store"
            },
            {
              "kind": "field",
              "name": "_storeUnsubscribe",
              "type": {
                "text": "Unsubscribe"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "getState",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "S"
                }
              }
            },
            {
              "kind": "method",
              "name": "onVisibilityChange",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "stateChanged",
              "privacy": "public",
              "parameters": [
                {
                  "name": "state",
                  "type": {
                    "text": "AppStateKeyed"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onEvent",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "OREvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_startOfflineFallbackTimer",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "force",
                  "default": "false"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_completeOfflineFallbackTimer",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "aborted",
                  "default": "false"
                }
              ]
            },
            {
              "kind": "method",
              "name": "logout",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "setLanguage",
              "privacy": "public",
              "parameters": [
                {
                  "name": "lang",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "showLanguageModal",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "doAppConfigInit",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "doBasicLogin",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "PromiseLike<BasicLoginResult>"
                }
              },
              "parameters": [
                {
                  "name": "username",
                  "type": {
                    "text": "string | undefined"
                  }
                },
                {
                  "name": "password",
                  "type": {
                    "text": "string | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_loadPage",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<Page<any>>"
                }
              },
              "parameters": [
                {
                  "name": "pageProvider",
                  "type": {
                    "text": "PageProvider<any>"
                  },
                  "description": "The PageProvider function to load as a new pager"
                },
                {
                  "name": "beforeLoad",
                  "optional": true,
                  "type": {
                    "text": "(page: Page<any>) => (Promise<void> | void)"
                  },
                  "description": "An async callback useful for adjusting the page before it is appended to the page"
                }
              ],
              "description": "Internal function used for initializing the page using a PageProvider function,\r\nAfter the web component is created, we will append it as a child to the HTML using the _mainElem container."
            },
            {
              "kind": "method",
              "name": "_unloadPage",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "page",
                  "optional": true,
                  "type": {
                    "text": "Page<any>"
                  },
                  "description": "The {@link Page}to unload\r\n     * "
                }
              ],
              "description": "Unloads the page from the `<amin>` element.\r\nBy default, it unloads the existing / current Page."
            },
            {
              "kind": "method",
              "name": "updateWindowTitle",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_getConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "RealmAppConfig"
                }
              }
            },
            {
              "kind": "field",
              "name": "DialogHostElement",
              "default": "this"
            }
          ],
          "attributes": [
            {
              "name": "appConfig",
              "type": {
                "text": "AppConfig<S> | undefined"
              },
              "description": "App configuration JSON object to set up the pages, header items, and languages.\r\nYou can use the RealmAppConfig field to adjust these options per realm.",
              "fieldName": "appConfig"
            },
            {
              "name": "managerConfig",
              "type": {
                "text": "ManagerConfig | undefined"
              },
              "description": "Manager config JSON object for adjusting deployment-targeted options such as managerUrl, realm, mapType, autoLogin etc.",
              "fieldName": "managerConfig"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-app",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DefaultLogo",
          "declaration": {
            "name": "DefaultLogo",
            "module": "../or-app/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "DefaultMobileLogo",
          "declaration": {
            "name": "DefaultMobileLogo",
            "module": "../or-app/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "DefaultFavIcon",
          "declaration": {
            "name": "DefaultFavIcon",
            "module": "../or-app/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "AnyAction",
          "declaration": {
            "name": "AnyAction",
            "module": "../or-app/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./app\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./or-header\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./types\""
          }
        },
        {
          "kind": "js",
          "name": "HeaderConfig",
          "declaration": {
            "name": "HeaderConfig",
            "module": "../or-app/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "DEFAULT_LANGUAGES",
          "declaration": {
            "name": "DEFAULT_LANGUAGES",
            "module": "../or-app/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "getDefaultManagerConfig",
          "declaration": {
            "name": "getDefaultManagerConfig",
            "module": "../or-app/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrApp",
          "declaration": {
            "name": "OrApp",
            "module": "../or-app/src/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-app",
          "declaration": {
            "name": "OrApp",
            "module": "../or-app/src/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-app/src/or-header.d.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrHeader",
          "members": [
            {
              "kind": "field",
              "name": "realms",
              "type": {
                "text": "Realm[]"
              }
            },
            {
              "kind": "field",
              "name": "realm",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "Store<AppStateKeyed, AnyAction>"
              }
            },
            {
              "kind": "field",
              "name": "logo",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "logoMobile",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "HeaderConfig | undefined"
              }
            },
            {
              "kind": "field",
              "name": "_mobileBottomDiv",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "activeMenu",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "_drawerOpened",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_onRealmSelect",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "realm",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getRealmMenu",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "parameters": [
                {
                  "name": "callback",
                  "type": {
                    "text": "(realm: string) => void"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onSecondaryMenuSelect",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onHeaderItemSelect",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "headerItem",
                  "type": {
                    "text": "HeaderItem"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_closeDrawer",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_toggleDrawer",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-header",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DEFAULT_LANGUAGES",
          "declaration": {
            "name": "DEFAULT_LANGUAGES",
            "module": "../or-app/src/or-header.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "Languages",
          "declaration": {
            "name": "Languages",
            "module": "../or-app/src/or-header.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrHeader",
          "declaration": {
            "name": "OrHeader",
            "module": "../or-app/src/or-header.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-app/src/or-header.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrHeader",
          "members": [
            {
              "kind": "field",
              "name": "realms",
              "type": {
                "text": "Realm[]"
              },
              "privacy": "public",
              "attribute": "realms"
            },
            {
              "kind": "field",
              "name": "realm",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "realm"
            },
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "Store<AppStateKeyed, AnyAction>"
              },
              "privacy": "public",
              "attribute": "store"
            },
            {
              "kind": "field",
              "name": "logo",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "logo"
            },
            {
              "kind": "field",
              "name": "logoMobile",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "logoMobile"
            },
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "HeaderConfig | undefined"
              },
              "privacy": "public",
              "attribute": "config"
            },
            {
              "kind": "field",
              "name": "_mobileBottomDiv",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "activeMenu",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "activeMenu"
            },
            {
              "kind": "field",
              "name": "_drawerOpened",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "method",
              "name": "_onRealmSelect",
              "privacy": "public",
              "parameters": [
                {
                  "name": "realm",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getRealmMenu",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "parameters": [
                {
                  "name": "callback",
                  "type": {
                    "text": "(realm: string) => void"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onSecondaryMenuSelect",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onHeaderItemSelect",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "headerItem",
                  "type": {
                    "text": "HeaderItem"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_closeDrawer",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_toggleDrawer",
              "privacy": "protected"
            }
          ],
          "attributes": [
            {
              "name": "realms",
              "type": {
                "text": "Realm[]"
              },
              "fieldName": "realms"
            },
            {
              "name": "realm",
              "type": {
                "text": "string"
              },
              "fieldName": "realm"
            },
            {
              "name": "store",
              "type": {
                "text": "Store<AppStateKeyed, AnyAction>"
              },
              "fieldName": "store"
            },
            {
              "name": "logo",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "logo"
            },
            {
              "name": "logoMobile",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "logoMobile"
            },
            {
              "name": "config",
              "type": {
                "text": "HeaderConfig | undefined"
              },
              "fieldName": "config"
            },
            {
              "name": "activeMenu",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "activeMenu"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-header",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DEFAULT_LANGUAGES",
          "declaration": {
            "name": "DEFAULT_LANGUAGES",
            "module": "../or-app/src/or-header.ts"
          }
        },
        {
          "kind": "js",
          "name": "Languages",
          "declaration": {
            "name": "Languages",
            "module": "../or-app/src/or-header.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrHeader",
          "declaration": {
            "name": "OrHeader",
            "module": "../or-app/src/or-header.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-header",
          "declaration": {
            "name": "OrHeader",
            "module": "../or-app/src/or-header.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-app/src/page-offline.d.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "pageOfflineProvider",
          "return": {
            "type": {
              "text": "PageProvider<AppStateKeyed>"
            }
          },
          "parameters": [
            {
              "name": "store",
              "type": {
                "text": "Store<AppStateKeyed>"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "PageOffline",
          "members": [
            {
              "kind": "method",
              "name": "stateChanged",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "state",
                  "type": {
                    "text": "AppStateKeyed"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            },
            {
              "kind": "field",
              "name": "_store",
              "type": {
                "text": "Store<S, AnyAction>"
              },
              "privacy": "protected",
              "default": "store",
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            },
            {
              "kind": "field",
              "name": "_storeUnsubscribe",
              "type": {
                "text": "Unsubscribe"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            },
            {
              "kind": "field",
              "name": "onRefresh",
              "type": {
                "text": "() => void | undefined"
              },
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            },
            {
              "kind": "method",
              "name": "getState",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "S"
                }
              },
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            }
          ],
          "superclass": {
            "name": "Page",
            "module": "/or-app/src/types"
          },
          "tagName": "page-offline",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "pageOfflineProvider",
          "declaration": {
            "name": "pageOfflineProvider",
            "module": "../or-app/src/page-offline.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "PageOffline",
          "declaration": {
            "name": "PageOffline",
            "module": "../or-app/src/page-offline.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-app/src/page-offline.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "pageOfflineProvider",
          "return": {
            "type": {
              "text": "PageProvider<AppStateKeyed>"
            }
          },
          "parameters": [
            {
              "name": "store",
              "type": {
                "text": "Store<AppStateKeyed>"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "PageOffline",
          "members": [
            {
              "kind": "method",
              "name": "stateChanged",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "state",
                  "type": {
                    "text": "AppStateKeyed"
                  }
                }
              ],
              "privacy": "public",
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            },
            {
              "kind": "field",
              "name": "_store",
              "type": {
                "text": "Store<S, AnyAction>"
              },
              "privacy": "protected",
              "default": "store",
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            },
            {
              "kind": "field",
              "name": "_storeUnsubscribe",
              "type": {
                "text": "Unsubscribe"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            },
            {
              "kind": "field",
              "name": "onRefresh",
              "type": {
                "text": "() => void | undefined"
              },
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            },
            {
              "kind": "method",
              "name": "getState",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "S"
                }
              },
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            }
          ],
          "superclass": {
            "name": "Page",
            "module": "/or-app/src/types"
          },
          "tagName": "page-offline",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "pageOfflineProvider",
          "declaration": {
            "name": "pageOfflineProvider",
            "module": "../or-app/src/page-offline.ts"
          }
        },
        {
          "kind": "js",
          "name": "PageOffline",
          "declaration": {
            "name": "PageOffline",
            "module": "../or-app/src/page-offline.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "page-offline",
          "declaration": {
            "name": "PageOffline",
            "module": "../or-app/src/page-offline.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-app/src/types.d.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "router",
          "type": {
            "text": "Navigo"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "Page",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_store",
              "type": {
                "text": "Store<S, AnyAction>"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_storeUnsubscribe",
              "type": {
                "text": "Unsubscribe"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "onRefresh",
              "type": {
                "text": "() => void | undefined"
              }
            },
            {
              "kind": "method",
              "name": "getState",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "S"
                }
              }
            },
            {
              "kind": "method",
              "name": "stateChanged",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "state",
                  "type": {
                    "text": "S"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "Page_base",
            "module": "../or-app/src/types.d.ts"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "router",
          "declaration": {
            "name": "router",
            "module": "../or-app/src/types.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "Page",
          "declaration": {
            "name": "Page",
            "module": "../or-app/src/types.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-app/src/types.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "router",
          "default": "new Navigo(\"/\", {hash: true})"
        },
        {
          "kind": "class",
          "description": "",
          "name": "Page",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_store",
              "type": {
                "text": "Store<S, AnyAction>"
              },
              "privacy": "protected",
              "default": "store"
            },
            {
              "kind": "field",
              "name": "_storeUnsubscribe",
              "type": {
                "text": "Unsubscribe"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "onRefresh",
              "type": {
                "text": "() => void | undefined"
              }
            },
            {
              "kind": "method",
              "name": "getState",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "S"
                }
              }
            },
            {
              "kind": "method",
              "name": "stateChanged",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "state",
                  "type": {
                    "text": "S"
                  }
                }
              ]
            }
          ],
          "mixins": [
            {
              "name": "translate(i18next)",
              "module": "../or-app/src/types.ts"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "router",
          "declaration": {
            "name": "router",
            "module": "../or-app/src/types.ts"
          }
        },
        {
          "kind": "js",
          "name": "Page",
          "declaration": {
            "name": "Page",
            "module": "../or-app/src/types.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-asset-tree/src/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrAssetTreeRequestSelectionEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-asset-tree-request-selection\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAssetTreeSelectionEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-asset-tree-selection\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAssetTreeChangeParentEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-asset-tree-change-parent\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAssetTreeToggleExpandEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-asset-tree-expand\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAssetTreeRequestAddEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-asset-tree-request-add\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAssetTreeAddEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-asset-tree-add\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAssetTreeRequestDeleteEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-asset-tree-request-delete\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAssetTreeAssetEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-asset-tree-asset-event\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAssetTreeFilter",
          "members": [
            {
              "kind": "field",
              "name": "asset",
              "type": {
                "text": "string | undefined"
              },
              "default": "undefined"
            },
            {
              "kind": "field",
              "name": "assetType",
              "type": {
                "text": "string[]"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "attribute",
              "type": {
                "text": "string[]"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "attributeValue",
              "type": {
                "text": "string[]"
              },
              "default": "[]"
            }
          ]
        },
        {
          "kind": "function",
          "name": "getAssetTypes"
        },
        {
          "kind": "class",
          "description": "# Asset Tree\r\n### `<or-asset-tree>` - `OrAssetTree`\r\n\r\nLists assets in a visual hierarchy tree, including search and filtering functionality.\r\n\r\n**Important:** Requires OpenRemote JS initialization.",
          "name": "OrAssetTree",
          "members": [
            {
              "kind": "field",
              "name": "assets",
              "type": {
                "text": "Asset[] | undefined"
              },
              "privacy": "public",
              "description": "Allows arbitrary assets to be displayed using a tree",
              "attribute": "assets"
            },
            {
              "kind": "field",
              "name": "assetInfos",
              "type": {
                "text": "AssetTypeInfo[] | undefined"
              },
              "privacy": "public",
              "attribute": "assetInfos"
            },
            {
              "kind": "field",
              "name": "_assetIdsOverride",
              "type": {
                "text": "string[] | undefined"
              },
              "privacy": "public",
              "attribute": "_assetIdsOverride"
            },
            {
              "kind": "field",
              "name": "rootAssets",
              "type": {
                "text": "Asset[] | undefined"
              },
              "privacy": "public",
              "attribute": "rootAssets"
            },
            {
              "kind": "field",
              "name": "rootAssetIds",
              "type": {
                "text": "string[] | undefined"
              },
              "privacy": "public",
              "attribute": "rootAssetIds"
            },
            {
              "kind": "field",
              "name": "dataProvider",
              "type": {
                "text": "() => Promise<Asset[]> | undefined"
              },
              "privacy": "public",
              "attribute": "dataProvider"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "readonly"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "disableSubscribe",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "disableSubscribe"
            },
            {
              "kind": "field",
              "name": "selectedIds",
              "type": {
                "text": "string[] | undefined"
              },
              "privacy": "public",
              "attribute": "selectedIds"
            },
            {
              "kind": "field",
              "name": "showDeselectBtn",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "default": "true",
              "attribute": "showDeselectBtn"
            },
            {
              "kind": "field",
              "name": "showSortBtn",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "default": "true",
              "attribute": "showSortBtn"
            },
            {
              "kind": "field",
              "name": "showFilter",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "attribute": "showFilter"
            },
            {
              "kind": "field",
              "name": "sortBy",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "default": "\"name\"",
              "attribute": "sortBy"
            },
            {
              "kind": "field",
              "name": "expandAllNodes",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "expandAllNodes"
            },
            {
              "kind": "field",
              "name": "expandedIds",
              "type": {
                "text": "string[] | undefined"
              },
              "privacy": "public",
              "default": "[]",
              "attribute": "expandedIds"
            },
            {
              "kind": "field",
              "name": "checkboxes",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "checkboxes"
            },
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "AssetTreeConfig | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_nodes",
              "type": {
                "text": "UiAssetTreeNode[] | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_loading",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_connected",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_selectedNodes",
              "type": {
                "text": "UiAssetTreeNode[]"
              },
              "privacy": "protected",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "_expandedNodes",
              "type": {
                "text": "UiAssetTreeNode[]"
              },
              "privacy": "protected",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "_initCallback",
              "type": {
                "text": "EventCallback | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_filter",
              "type": {
                "text": "OrAssetTreeFilter"
              },
              "privacy": "protected",
              "default": "new OrAssetTreeFilter()"
            },
            {
              "kind": "field",
              "name": "_searchInputTimer",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "protected",
              "default": "undefined"
            },
            {
              "kind": "field",
              "name": "_clearIconContainer",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_filterInput",
              "type": {
                "text": "OrMwcInput"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_filterSettingOpen",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_assetTypes",
              "type": {
                "text": "AssetDescriptor[]"
              },
              "privacy": "protected",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "_attributeNameFilter",
              "type": {
                "text": "OrMwcInput"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_attributeValueFilter",
              "type": {
                "text": "OrMwcInput"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_assetTypeFilter",
              "type": {
                "text": "string"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_uniqueAssetTypes",
              "type": {
                "text": "string[]"
              },
              "privacy": "protected",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "_dragDropParentId",
              "type": {
                "text": "string | null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "_expandTimer",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "protected",
              "default": "undefined"
            },
            {
              "kind": "field",
              "name": "_latestSelected",
              "type": {
                "text": "UiAssetTreeNode | undefined"
              },
              "privacy": "private",
              "default": "undefined"
            },
            {
              "kind": "field",
              "name": "assetsChildren",
              "type": {
                "text": "any"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "selectedNodes",
              "type": {
                "text": "UiAssetTreeNode[]"
              },
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "refresh",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "isAncestorSelected",
              "privacy": "public",
              "parameters": [
                {
                  "name": "node",
                  "type": {
                    "text": "UiAssetTreeNode"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "mapDescriptors",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "ListItem[]"
                }
              },
              "parameters": [
                {
                  "name": "descriptors",
                  "type": {
                    "text": "(AssetDescriptor)[]"
                  }
                },
                {
                  "name": "withNoneValue",
                  "optional": true,
                  "type": {
                    "text": "ListItem"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getSelectHeader",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "getSelectedHeader",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "parameters": [
                {
                  "name": "descriptor",
                  "type": {
                    "text": "AssetDescriptor"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "assetTypeSelect",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "atLeastOneNodeToBeShown",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "_isReadonly",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_updateSelectedNodes",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_updateSort",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "nodes",
                  "type": {
                    "text": "UiAssetTreeNode[]"
                  }
                },
                {
                  "name": "sortFunction",
                  "type": {
                    "text": "(a: UiAssetTreeNode, b: UiAssetTreeNode) => number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_toggleExpander",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "expander",
                  "type": {
                    "text": "HTMLElement"
                  }
                },
                {
                  "name": "node",
                  "type": {
                    "text": "UiAssetTreeNode | null"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_toggleExpanderWithoutEventDispatch",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "expander",
                  "type": {
                    "text": "HTMLElement"
                  }
                },
                {
                  "name": "node",
                  "type": {
                    "text": "UiAssetTreeNode | null"
                  }
                }
              ],
              "description": "This method is used to avoid to re-render and erase all the this.selectedIds attribute"
            },
            {
              "kind": "method",
              "name": "_buildPaths",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "node",
                  "type": {
                    "text": "UiAssetTreeNode"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_findNode",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "UiAssetTreeNode | undefined"
                }
              },
              "parameters": [
                {
                  "name": "n",
                  "type": {
                    "text": "UiAssetTreeNode"
                  }
                },
                {
                  "name": "assetId",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_findNodeFromAssetId",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "UiAssetTreeNode | undefined"
                }
              },
              "parameters": [
                {
                  "name": "assetId",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onNodeClicked",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "evt",
                  "type": {
                    "text": "MouseEvent | null"
                  }
                },
                {
                  "name": "node",
                  "type": {
                    "text": "UiAssetTreeNode | null"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onDeselectClicked",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "parseFromInputFilter",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OrAssetTreeFilter"
                }
              },
              "parameters": [
                {
                  "name": "inputValue",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "formatFilter",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "newFilter",
                  "type": {
                    "text": "OrAssetTreeFilter"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_shouldEnableAttrTypeEvent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_shouldEnableAttrType",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "applySettingFields",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OrAssetTreeFilter"
                }
              },
              "parameters": [
                {
                  "name": "filter",
                  "type": {
                    "text": "OrAssetTreeFilter"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_filterFromSettings",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_onFilterInputEvent",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onFilterInput",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "newValue",
                  "type": {
                    "text": "string | undefined"
                  }
                },
                {
                  "name": "force",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_doFiltering",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "getMatcher",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<((asset: Asset) => boolean)>"
                }
              },
              "parameters": [
                {
                  "name": "requireQuery",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getSimpleNameMatcher",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<((asset: Asset) => boolean)>"
                }
              }
            },
            {
              "kind": "method",
              "name": "getMatcherFromQuery",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<((asset: Asset) => boolean)>"
                }
              }
            },
            {
              "kind": "method",
              "name": "isAnyFilter",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "filterTreeNode",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "currentNode",
                  "type": {
                    "text": "UiAssetTreeNode"
                  }
                },
                {
                  "name": "matcher",
                  "type": {
                    "text": "(asset: Asset) => boolean"
                  }
                },
                {
                  "name": "parentMatching",
                  "default": "false",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onCopyClicked",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_onAddClicked",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_onDeleteClicked",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_onSortClicked",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "sortBy",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_doDelete",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_canAdd",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "_getAllowedChildTypes",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "AssetDescriptor[]"
                }
              },
              "parameters": [
                {
                  "name": "selectedNode",
                  "type": {
                    "text": "UiAssetTreeNode | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getSortFunction",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "(a: UiAssetTreeNode, b: UiAssetTreeNode) => number"
                }
              }
            },
            {
              "kind": "method",
              "name": "_loadAssets",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_addEventSubscriptions",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "method",
              "name": "onEventsConnect",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "onEventsDisconnect",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "getNodes",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "UiAssetTreeNode[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "_onEvent",
              "privacy": "public",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "SharedEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_buildTreeNodes",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "assets",
                  "type": {
                    "text": "Asset[]"
                  }
                },
                {
                  "name": "sortFunction",
                  "type": {
                    "text": "(a: UiAssetTreeNode, b: UiAssetTreeNode) => number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_buildChildTreeNodes",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "treeNode",
                  "type": {
                    "text": "UiAssetTreeNode"
                  }
                },
                {
                  "name": "assets",
                  "type": {
                    "text": "AssetWithReparentId[]"
                  }
                },
                {
                  "name": "sortFunction",
                  "type": {
                    "text": "(a: UiAssetTreeNode, b: UiAssetTreeNode) => number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onDragStart",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onDragEnd",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "isExpandable",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "assetId",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onDragOver",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "expandNode",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "assetId",
                  "type": {
                    "text": "string | null"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onDragEnter",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onDragLeave",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_treeNodeTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | string | undefined"
                }
              },
              "parameters": [
                {
                  "name": "treeNode",
                  "type": {
                    "text": "UiAssetTreeNode"
                  }
                },
                {
                  "name": "level",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_forEachNodeRecursive",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "nodes",
                  "type": {
                    "text": "UiAssetTreeNode[]"
                  }
                },
                {
                  "name": "fn",
                  "type": {
                    "text": "(node: UiAssetTreeNode) => void"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "type": {
                "text": "OrAssetTreeSelectionEvent"
              }
            },
            {
              "name": "assetEvent",
              "type": {
                "text": "OrAssetTreeAssetEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "assets",
              "type": {
                "text": "Asset[] | undefined"
              },
              "description": "Allows arbitrary assets to be displayed using a tree",
              "fieldName": "assets"
            },
            {
              "name": "assetInfos",
              "type": {
                "text": "AssetTypeInfo[] | undefined"
              },
              "fieldName": "assetInfos"
            },
            {
              "name": "_assetIdsOverride",
              "type": {
                "text": "string[] | undefined"
              },
              "fieldName": "_assetIdsOverride"
            },
            {
              "name": "rootAssets",
              "type": {
                "text": "Asset[] | undefined"
              },
              "fieldName": "rootAssets"
            },
            {
              "name": "rootAssetIds",
              "type": {
                "text": "string[] | undefined"
              },
              "fieldName": "rootAssetIds"
            },
            {
              "name": "dataProvider",
              "type": {
                "text": "() => Promise<Asset[]> | undefined"
              },
              "fieldName": "dataProvider"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "readonly"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "disableSubscribe",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disableSubscribe"
            },
            {
              "name": "selectedIds",
              "type": {
                "text": "string[] | undefined"
              },
              "fieldName": "selectedIds"
            },
            {
              "name": "showDeselectBtn",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "true",
              "fieldName": "showDeselectBtn"
            },
            {
              "name": "showSortBtn",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "true",
              "fieldName": "showSortBtn"
            },
            {
              "name": "showFilter",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "fieldName": "showFilter"
            },
            {
              "name": "sortBy",
              "type": {
                "text": "string | undefined"
              },
              "default": "\"name\"",
              "fieldName": "sortBy"
            },
            {
              "name": "expandAllNodes",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "fieldName": "expandAllNodes"
            },
            {
              "name": "expandedIds",
              "type": {
                "text": "string[] | undefined"
              },
              "default": "[]",
              "fieldName": "expandedIds"
            },
            {
              "name": "checkboxes",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "fieldName": "checkboxes"
            }
          ],
          "mixins": [
            {
              "name": "subscribe(manager)",
              "module": "../or-asset-tree/src/index.ts"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-asset-tree",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetTreeRequestSelectionEvent",
          "declaration": {
            "name": "OrAssetTreeRequestSelectionEvent",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetTreeSelectionEvent",
          "declaration": {
            "name": "OrAssetTreeSelectionEvent",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetTreeChangeParentEvent",
          "declaration": {
            "name": "OrAssetTreeChangeParentEvent",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetTreeToggleExpandEvent",
          "declaration": {
            "name": "OrAssetTreeToggleExpandEvent",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetTreeRequestAddEvent",
          "declaration": {
            "name": "OrAssetTreeRequestAddEvent",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetTreeAddEvent",
          "declaration": {
            "name": "OrAssetTreeAddEvent",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetTreeRequestDeleteEvent",
          "declaration": {
            "name": "OrAssetTreeRequestDeleteEvent",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetTreeAssetEvent",
          "declaration": {
            "name": "OrAssetTreeAssetEvent",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetTreeFilter",
          "declaration": {
            "name": "OrAssetTreeFilter",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "getAssetTypes",
          "declaration": {
            "name": "getAssetTypes",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetTree",
          "declaration": {
            "name": "OrAssetTree",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-asset-tree",
          "declaration": {
            "name": "OrAssetTree",
            "module": "../or-asset-tree/src/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-asset-tree/src/or-add-asset-dialog.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrAddChangedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-add-asset-changed\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-asset-tree/src/or-add-asset-dialog.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAddAssetDialog",
          "members": [
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "AssetTreeConfig"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "agentTypes",
              "type": {
                "text": "AgentDescriptor[]"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "assetTypes",
              "type": {
                "text": "AssetDescriptor[]"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "parent",
              "type": {
                "text": "Asset | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "selectedType",
              "type": {
                "text": "AgentDescriptor | AssetDescriptor | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "selectedAttributes",
              "type": {
                "text": "AttributeDescriptor[]"
              },
              "privacy": "public",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "showParentAssetSelector",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "selectedChildAssetType",
              "type": {
                "text": "string"
              },
              "default": "\"\""
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "\"New Asset\""
            },
            {
              "kind": "field",
              "name": "nameInput",
              "type": {
                "text": "OrMwcInput"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "agentList",
              "type": {
                "text": "OrMwcList | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "assetList",
              "type": {
                "text": "OrMwcList | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "parentAssetList",
              "type": {
                "text": "OrMwcList | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "getTypeTemplate",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "descriptor",
                  "type": {
                    "text": "AgentDescriptor | AssetDescriptor"
                  }
                },
                {
                  "name": "parentStr",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onNameChanged",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onTypeChanged",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "isAgent",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "listItem",
                  "type": {
                    "text": "ListItem"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onModified",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_onToggleParentAssetSelector",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_onDeselectClicked",
              "privacy": "protected"
            }
          ],
          "events": [
            {
              "type": {
                "text": "OrAddChangedEvent"
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-add-asset-dialog",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrAddChangedEvent",
          "declaration": {
            "name": "OrAddChangedEvent",
            "module": "../or-asset-tree/src/or-add-asset-dialog.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAddAssetDialog",
          "declaration": {
            "name": "OrAddAssetDialog",
            "module": "../or-asset-tree/src/or-add-asset-dialog.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-add-asset-dialog",
          "declaration": {
            "name": "OrAddAssetDialog",
            "module": "../or-asset-tree/src/or-add-asset-dialog.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-asset-tree/src/style.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css` :host { --internal-or-asset-tree-header-color: var(--or-asset-tree-header-color, var(--or-app-color4, ${unsafeCSS(DefaultColor4)})); --internal-or-asset-tree-header-text-color: var(--or-asset-tree-header-text-color, var(--or-app-color8, ${unsafeCSS(DefaultColor8)})); --internal-or-asset-tree-header-menu-background-color: var(--or-asset-tree-header-menu-background-color, var(--internal-or-asset-tree-header-text-color)); --internal-or-asset-tree-header-menu-text-color: var(--or-asset-tree-header-menu-text-color, inherit); --internal-or-asset-tree-header-height: var(--or-asset-tree-header-height, 48px); --internal-or-asset-tree-background-color: var(--or-asset-tree-background-color, var(--or-app-color1, ${unsafeCSS(DefaultColor1)})); --internal-or-asset-tree-text-color: var(--or-asset-tree-text-color, inherit); --internal-or-asset-tree-item-height: var(--or-asset-tree-item-height, 24px); --internal-or-asset-tree-item-padding: var(--or-asset-tree-item-padding, 10px); --internal-or-asset-tree-selected-background-color: var(--or-asset-tree-selected-background-color, var(--or-app-color2, ${unsafeCSS(DefaultColor2)})); --internal-or-asset-tree-selected-color: var(--or-asset-tree-selected-color, var(--or-app-color4, ${unsafeCSS(DefaultColor4)})); --internal-or-asset-tree-button-color: var(--or-asset-tree-button-color, var(--or-app-color4, ${unsafeCSS(DefaultColor4)})); --internal-or-asset-tree-line-color: var(--or-asset-tree-line-color, var(--or-app-color5, ${unsafeCSS(DefaultColor5)})); display: flex; flex-direction: column; height: 100%; width: 100%; background-color: var(--internal-or-asset-tree-background-color); } *[hidden] { display: none; } button { background-color: var(--internal-or-asset-tree-button-color); color: var(--internal-or-asset-tree-background-color); --or-icon-width: 20px; --or-icon-height: 20px; --or-icon-fill: var(--internal-or-asset-tree-background-color); border: none; padding: 0 6px; display: inline-block; cursor: pointer; opacity: 0.8; } button:focus, button:hover { outline: 0; opacity: 1; } #header { background-color: var(--internal-or-asset-tree-header-color); display: flex; align-items: center; width: 100%; height: var(--internal-or-asset-tree-header-height); border-bottom: 1px solid ${unsafeCSS(DefaultColor5)}; z-index: 1000; line-height: var(--internal-or-asset-tree-header-height); color: var(--internal-or-asset-tree-header-text-color); --or-icon-fill: var(--internal-or-asset-tree-header-text-color); } #title-container { flex: 1 0 auto; flex-direction: row; text-transform: capitalize; padding-left: 15px; } #title { font-weight: 500; font-size: 16px; } #realm-picker { outline: none; margin-left: 5px; text-transform: none; font-size: 14px; } #header-btns { display: flex; flex-direction: row; padding-right: 5px; } #list-container { flex: 1 1 auto; overflow: auto; font-size: 14px; } #list { margin: 0; color: var(--internal-or-asset-tree-text-color); padding: 0; } #list, ol { list-style-type: none; } li ol { padding: 0; } #list li:not([data-expanded]) > ol { display: none; } #list li[data-selected] > .node-container, #list li > .node-container:hover { background-color: var(--internal-or-asset-tree-selected-background-color); } #list li[data-selected] > .node-container { border-left-color: var(--internal-or-asset-tree-selected-color); } .asset-list-element .over { background-color: ${unsafeCSS(DefaultColor5)}; } .in-between-element { position: relative; height: 2px; } .in-between-element.over { padding: 5px 0; margin: -5px 0; } .end-element { height: 44px; } .node-container { display: flex; border-left: 4px solid transparent; user-select: none; cursor: pointer; height: var(--internal-or-asset-tree-item-height); line-height: var(--internal-or-asset-tree-item-height); padding-top: var(--internal-or-asset-tree-item-padding); padding-bottom: var(--internal-or-asset-tree-item-padding); } .node-container > * { flex: 0 0 auto; } .expander { width: 36px; height: 100%; display: inline-block; background-repeat: no-repeat; background-size: 18px; background-position: center; margin-left: -4px; border-left: 4px solid transparent; } .expander[data-expandable] { background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' fill='rgb(204, 204, 204)' viewBox='0 0 24 24'%3E%3Cpath d='${unsafeCSS(mdiChevronRight)}'/%3E%3C/svg%3E\"); } .expander[data-expandable]:hover { background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'%3E%3Cpath d='${unsafeCSS(mdiChevronRight)}'/%3E%3C/svg%3E\"); } li[data-expanded] > .node-container .expander { background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'%3E%3Cpath d='${unsafeCSS(mdiChevronDown)}'/%3E%3C/svg%3E\") !important; } .node-name { margin: -4px 0; flex: 1 0 auto; display: flex; align-items: center; } .node-name > span { vertical-align: middle; } .node-name > or-icon { --or-icon-width: 18px; --or-icon-height: 18px; margin-right: 8px; } #loading { flex: 1 0 auto; display: inline-flex; align-items: center; text-align: center; margin: 0 auto; font-size: 14px; } @media only screen and (min-width: 768px){ .expander { width: 26px; } } .mdc-list-item__graphic { margin-left: auto; display: flex; margin-right: 5px; } .mdc-checkbox { display: flex; height: 100%; align-items: center; } .mdc-checkbox or-icon { height: 15px; width: auto; color: var(--internal-or-asset-tree-line-color); } .mdc-checkbox or-icon.mdc-checkbox--parent { height: 17px; } .mdc-checkbox or-icon[icon=\"checkbox-marked\"], .mdc-checkbox or-icon[icon=\"checkbox-multiple-marked\"], .mdc-checkbox or-icon[icon=\"checkbox-multiple-marked-outline\"] { color: var(--internal-or-asset-tree-selected-color); } #asset-tree-filter { display: flex; align-items: center; position: relative; background-color: var(--internal-or-asset-tree-selected-background-color); } #filterInput { padding: 7px 12px 7px 7px; } #filterAssetTypeDownIcon { width: 16px; height: 16px; position: absolute; right: 20px; padding-right: 14px; cursor: pointer; } #filterSettingsIcon { cursor: pointer; margin-right: 12px; } #asset-tree-filter-setting { position: absolute; background-color: var(--internal-or-asset-tree-background-color); top: calc(var(--internal-or-asset-tree-header-height) + var(--internal-or-header-height, 50px) - 1px); display: none; width: 300px; z-index: 100; box-shadow: rgb(0 0 0 / 21%) 0px 1px 3px 0px; box-sizing: border-box; padding: 10px; } #asset-tree-filter-setting .advanced-filter { display: flex; flex-direction: column; } #asset-tree-filter-setting.visible { display: block; } .filterAssetType { display: flex; align-items: center; } #clearIconContainer.visible { display: block; } #noAssetsFound { flex: 1 0 auto; display: inline-flex; align-items: center; text-align: center; margin: 0 auto; font-size: 14px; } .filterMatching { color: #808080; } .draggable { cursor: pointer; } .draggable:active { cursor: grabbing; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "../or-asset-tree/src/style.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-asset-viewer/src/index.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "getIncludedProperties",
          "return": {
            "type": {
              "text": "string[]"
            }
          },
          "parameters": [
            {
              "name": "config",
              "optional": true,
              "type": {
                "text": "InfoPanelConfig"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getIncludedAttributes",
          "return": {
            "type": {
              "text": "Attribute<any>[]"
            }
          },
          "parameters": [
            {
              "name": "attributes",
              "type": {
                "text": "{ [index: string]: Attribute<any> }"
              }
            },
            {
              "name": "config",
              "optional": true,
              "type": {
                "text": "InfoPanelConfig"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAssetViewerComputeGridEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-asset-viewer-compute-grid-event\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAssetViewerRequestSaveEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-asset-viewer-request-save\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAssetViewerSaveEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-asset-viewer-save\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAssetViewerChangeParentEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-asset-viewer-change-parent\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAssetViewerRequestEditToggleEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-asset-viewer-request-edit-toggle\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAssetViewerEditToggleEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-asset-viewer-edit-toggle\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAssetViewerLoadUserEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-asset-viewer-load-user-event\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "function",
          "name": "getPanel",
          "parameters": [
            {
              "name": "id",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "panelConfig",
              "type": {
                "text": "PanelConfig"
              }
            },
            {
              "name": "content",
              "type": {
                "text": "TemplateResult | undefined"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getAttributeTemplate",
          "return": {
            "type": {
              "text": "TemplateResult"
            }
          },
          "parameters": [
            {
              "name": "asset",
              "type": {
                "text": "Asset"
              }
            },
            {
              "name": "attribute",
              "type": {
                "text": "Attribute<any>"
              }
            },
            {
              "name": "hostElement",
              "type": {
                "text": "LitElement"
              }
            },
            {
              "name": "viewerConfig",
              "type": {
                "text": "AssetViewerConfig"
              }
            },
            {
              "name": "panelConfig",
              "type": {
                "text": "PanelConfig"
              }
            },
            {
              "name": "itemConfig",
              "type": {
                "text": "InfoPanelItemConfig"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getPropertyTemplate",
          "parameters": [
            {
              "name": "asset",
              "type": {
                "text": "Asset"
              }
            },
            {
              "name": "property",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "hostElement",
              "type": {
                "text": "LitElement"
              }
            },
            {
              "name": "viewerConfig",
              "type": {
                "text": "AssetViewerConfig | undefined"
              }
            },
            {
              "name": "panelConfig",
              "type": {
                "text": "PanelConfig | undefined"
              }
            },
            {
              "name": "itemConfig",
              "type": {
                "text": "InfoPanelItemConfig"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getField",
          "return": {
            "type": {
              "text": "TemplateResult"
            }
          },
          "parameters": [
            {
              "name": "name",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "itemConfig",
              "optional": true,
              "type": {
                "text": "InfoPanelItemConfig"
              }
            },
            {
              "name": "content",
              "optional": true,
              "type": {
                "text": "TemplateResult"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "saveAsset",
          "return": {
            "type": {
              "text": "Promise<SaveResult>"
            }
          },
          "parameters": [
            {
              "name": "asset",
              "type": {
                "text": "Asset"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "DEFAULT_ASSET_PROPERTIES",
          "type": {
            "text": "array"
          },
          "default": "[ \"name\", \"createdOn\", \"type\", \"parentId\", \"accessPublicRead\" ]"
        },
        {
          "kind": "variable",
          "name": "DEFAULT_VIEWER_CONFIG",
          "type": {
            "text": "AssetViewerConfig"
          },
          "default": "{ viewerStyles: {}, panels: [ { type: \"group\", title: \"underlyingAssets\" }, { type: \"info\", hideOnMobile: true, properties: { include:[] }, attributes: { include: [\"notes\", \"manufacturer\", \"model\"] } }, { title: \"attributes\", type: \"info\", properties: { include:[] }, attributes: { exclude: [\"location\", \"notes\", \"manufacturer\", \"model\"] } }, { type: \"setup\", hideOnMobile: false }, { title: \"location\", type: \"info\", column: 1, properties: { include:[] }, attributes: { include: [\"location\"], itemConfig: { location: { label: \"\", readonly: true } } } }, { type: \"history\", column: 1 }, { type: \"linkedUsers\", column: 1 } ] }"
        },
        {
          "kind": "class",
          "description": "# Asset Viewer\r\n### `<or-asset-viewer>` - `OrAssetViewer`\r\n\r\nView details of an asset\r\n\r\n**Important:** Requires OpenRemote JS initialization.",
          "name": "OrAssetViewer",
          "members": [
            {
              "kind": "field",
              "name": "asset",
              "type": {
                "text": "Asset | undefined"
              },
              "privacy": "public",
              "attribute": "asset"
            },
            {
              "kind": "field",
              "name": "ids",
              "type": {
                "text": "Array"
              },
              "privacy": "public",
              "attribute": "ids"
            },
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "ViewerConfig | undefined"
              },
              "privacy": "public",
              "attribute": "config"
            },
            {
              "kind": "field",
              "name": "editMode",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "attribute": "editMode"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "attribute": "readonly"
            },
            {
              "kind": "field",
              "name": "_assetInfo",
              "type": {
                "text": "AssetInfo | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_validationResults",
              "type": {
                "text": "ValidatorResult[]"
              },
              "privacy": "protected",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "wrapperElem",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "saveBtnElem",
              "type": {
                "text": "OrMwcInput"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "editBtnElem",
              "type": {
                "text": "OrMwcInput"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "editor",
              "type": {
                "text": "OrEditAssetPanel"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "headerElem",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "containerElem",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_saveResult",
              "type": {
                "text": "SaveResult | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "isModified",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "langChangedCallback",
              "description": "When language is changed, we clear the cached templates,\r\nso can be rendered differently according to the selected language."
            },
            {
              "kind": "method",
              "name": "loadAssetInfo",
              "return": {
                "type": {
                  "text": "Promise<AssetInfo>"
                }
              },
              "parameters": [
                {
                  "name": "asset",
                  "type": {
                    "text": "Asset"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_doValidation",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_onParentChangeClick",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_toggleHeaderShadow",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_isReadonly",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_onEditToggleClicked",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "edit",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_doEditToggle",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "edit",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onSaveClicked",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_doSave",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_onAssetModified",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "validationResults",
                  "type": {
                    "text": "ValidatorResult[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onEvent",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "SharedEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getPanelConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "AssetViewerConfig"
                }
              },
              "parameters": [
                {
                  "name": "asset",
                  "type": {
                    "text": "Asset"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "idd",
              "type": {
                "text": "OrAssetViewerChangeParentEvent"
              }
            },
            {
              "name": "undefined",
              "type": {
                "text": "OrAssetViewerChangeParentEvent"
              }
            },
            {
              "name": "edit",
              "type": {
                "text": "OrAssetViewerEditToggleEvent"
              }
            },
            {
              "type": {
                "text": "OrAssetViewerSaveEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "asset",
              "type": {
                "text": "Asset | undefined"
              },
              "fieldName": "asset"
            },
            {
              "name": "ids",
              "type": {
                "text": "Array"
              },
              "fieldName": "ids"
            },
            {
              "name": "config",
              "type": {
                "text": "ViewerConfig | undefined"
              },
              "fieldName": "config"
            },
            {
              "name": "editMode",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "editMode"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "readonly"
            }
          ],
          "mixins": [
            {
              "name": "subscribe(manager)",
              "module": "../or-asset-viewer/src/index.ts"
            },
            {
              "name": "translate(i18next)",
              "module": "../or-asset-viewer/src/index.ts"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-asset-viewer",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getIncludedProperties",
          "declaration": {
            "name": "getIncludedProperties",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "getIncludedAttributes",
          "declaration": {
            "name": "getIncludedAttributes",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetViewerComputeGridEvent",
          "declaration": {
            "name": "OrAssetViewerComputeGridEvent",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetViewerRequestSaveEvent",
          "declaration": {
            "name": "OrAssetViewerRequestSaveEvent",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetViewerSaveEvent",
          "declaration": {
            "name": "OrAssetViewerSaveEvent",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetViewerChangeParentEvent",
          "declaration": {
            "name": "OrAssetViewerChangeParentEvent",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetViewerRequestEditToggleEvent",
          "declaration": {
            "name": "OrAssetViewerRequestEditToggleEvent",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetViewerEditToggleEvent",
          "declaration": {
            "name": "OrAssetViewerEditToggleEvent",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetViewerLoadUserEvent",
          "declaration": {
            "name": "OrAssetViewerLoadUserEvent",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "getPanel",
          "declaration": {
            "name": "getPanel",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "getAttributeTemplate",
          "declaration": {
            "name": "getAttributeTemplate",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "getPropertyTemplate",
          "declaration": {
            "name": "getPropertyTemplate",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "getField",
          "declaration": {
            "name": "getField",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "saveAsset",
          "declaration": {
            "name": "saveAsset",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "DEFAULT_ASSET_PROPERTIES",
          "declaration": {
            "name": "DEFAULT_ASSET_PROPERTIES",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "DEFAULT_VIEWER_CONFIG",
          "declaration": {
            "name": "DEFAULT_VIEWER_CONFIG",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetViewer",
          "declaration": {
            "name": "OrAssetViewer",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-asset-viewer",
          "declaration": {
            "name": "OrAssetViewer",
            "module": "../or-asset-viewer/src/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-asset-viewer/src/or-add-attribute-panel.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrAddAttributePanelAttributeChangedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-add-attribute-panel-attribute-changed\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-asset-viewer/src/or-add-attribute-panel.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAddAttributePanel",
          "members": [
            {
              "kind": "field",
              "name": "asset",
              "type": {
                "text": "Asset"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "attribute",
              "type": {
                "text": "Attribute<any>"
              },
              "privacy": "protected",
              "default": "{}"
            },
            {
              "kind": "field",
              "name": "isCustom",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "attribute": "isCustom"
            },
            {
              "kind": "field",
              "name": "isArray",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "isArray"
            },
            {
              "kind": "field",
              "name": "arrayDimensions",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "1",
              "attribute": "arrayDimensions"
            },
            {
              "kind": "field",
              "name": "arrayInput",
              "type": {
                "text": "OrMwcInput"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "customAttribute",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "true"
            },
            {
              "kind": "field",
              "name": "attributeTypes",
              "type": {
                "text": "[string, string][] | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "attributeValueTypes",
              "type": {
                "text": "[string, string][] | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "arrayRegex",
              "type": {
                "text": "RegExp"
              },
              "privacy": "protected",
              "default": "/\\[\\]/g"
            },
            {
              "kind": "method",
              "name": "onTypeChanged",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onNameChanged",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onValueTypeChanged",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "valueType",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onArrayChanged",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "array",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "dimensions",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "updateAttributeType",
              "privacy": "protected"
            }
          ],
          "events": [
            {
              "type": {
                "text": "OrAddAttributePanelAttributeChangedEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "isCustom",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "isCustom"
            },
            {
              "name": "isArray",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "isArray"
            },
            {
              "name": "arrayDimensions",
              "type": {
                "text": "number"
              },
              "default": "1",
              "fieldName": "arrayDimensions"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-add-attribute-panel",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrAddAttributePanelAttributeChangedEvent",
          "declaration": {
            "name": "OrAddAttributePanelAttributeChangedEvent",
            "module": "../or-asset-viewer/src/or-add-attribute-panel.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAddAttributePanel",
          "declaration": {
            "name": "OrAddAttributePanel",
            "module": "../or-asset-viewer/src/or-add-attribute-panel.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-add-attribute-panel",
          "declaration": {
            "name": "OrAddAttributePanel",
            "module": "../or-asset-viewer/src/or-add-attribute-panel.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-asset-viewer/src/or-edit-asset-panel.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrEditAssetModifiedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-edit-asset-modified\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-asset-viewer/src/or-edit-asset-panel.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrEditAssetPanel",
          "members": [
            {
              "kind": "field",
              "name": "asset",
              "type": {
                "text": "Asset"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "attributeTemplatesAndValidators",
              "type": {
                "text": "TemplateAndValidator[]"
              },
              "privacy": "protected",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "changedAttributes",
              "type": {
                "text": "string[]"
              },
              "privacy": "protected",
              "default": "[]"
            },
            {
              "kind": "method",
              "name": "attributeUpdated",
              "privacy": "public",
              "parameters": [
                {
                  "name": "attributeName",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getAttributeTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateAndValidator"
                }
              },
              "parameters": [
                {
                  "name": "assetType",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "attribute",
                  "type": {
                    "text": "Attribute<any>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onModified",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "ValidatorResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "_onAttributeModified",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "attribute",
                  "type": {
                    "text": "Attribute<any>"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onMetaItemModified",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "attribute",
                  "type": {
                    "text": "Attribute<any>"
                  }
                },
                {
                  "name": "metaItem",
                  "type": {
                    "text": "NameValueHolder<any>"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "OrInputChangedEventDetail | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getMetaItemTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateAndValidator"
                }
              },
              "parameters": [
                {
                  "name": "attribute",
                  "type": {
                    "text": "Attribute<any>"
                  }
                },
                {
                  "name": "metaItem",
                  "type": {
                    "text": "NameValueHolder<any>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_addAttribute",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_addMetaItems",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "attribute",
                  "type": {
                    "text": "Attribute<any>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getParentTemplate",
              "privacy": "protected"
            }
          ],
          "events": [
            {
              "type": {
                "text": "OrEditAssetModifiedEvent"
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-edit-asset-panel",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrEditAssetModifiedEvent",
          "declaration": {
            "name": "OrEditAssetModifiedEvent",
            "module": "../or-asset-viewer/src/or-edit-asset-panel.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrEditAssetPanel",
          "declaration": {
            "name": "OrEditAssetPanel",
            "module": "../or-asset-viewer/src/or-edit-asset-panel.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-edit-asset-panel",
          "declaration": {
            "name": "OrEditAssetPanel",
            "module": "../or-asset-viewer/src/or-edit-asset-panel.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-asset-viewer/src/style.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "panelStyles",
          "default": "css` .panelContainer { flex: 1 1 50%; box-sizing: border-box; min-width: 400px; padding: 0 5px; } .panel { background-color: var(--internal-or-asset-viewer-panel-color); border: 1px solid #e5e5e5; border-radius: 5px; position: relative; margin: 0 0 10px 0; } .panel-content-wrapper { padding: var(--internal-or-asset-viewer-panel-padding); } .panel-content > :first-child { margin-top: 0; } .panel-content > :last-child { margin-bottom: 0; } .panel-content { display: flex; flex-wrap: wrap; } .panel-title { text-transform: uppercase; font-weight: bolder; line-height: 1em; color: var(--internal-or-asset-viewer-title-text-color); margin-bottom: 20px; flex: 0 0 auto; letter-spacing: 0.025em; } .field { margin: 10px 0; width: 100%; flex: 0 0 auto; } .field > * { width: 100%; box-sizing: border-box; } @media screen and (max-width: 767px) { .panel { border-radius: 0; border-right: none; border-left: none; flex-basis: 100%; min-width: 360px; } } #linkedUsers-panel { min-height: 200px; } `"
        },
        {
          "kind": "variable",
          "name": "style",
          "default": "css` :host { --internal-or-asset-viewer-background-color: var(--or-asset-viewer-background-color, var(--or-app-color2, ${unsafeCSS(DefaultColor2)})); --internal-or-asset-viewer-panel-margin: var(--or-asset-viewer-panel-margin, 20px); --internal-or-asset-viewer-panel-padding: var(--or-asset-viewer-panel-padding, 24px); --internal-or-asset-viewer-text-color: var(--or-asset-viewer-text-color, var(--or-app-color3, ${unsafeCSS(DefaultColor3)})); --internal-or-asset-viewer-title-text-color: var(--or-asset-viewer-title-text-color, var(--or-app-color3, ${unsafeCSS(DefaultColor3)})); --internal-or-asset-viewer-panel-color: var(--or-asset-viewer-panel-color, var(--or-app-color1, ${unsafeCSS(DefaultColor1)})); --internal-or-asset-viewer-line-color: var(--or-asset-viewer-line-color, var(--or-app-color5, ${unsafeCSS(DefaultColor5)})); --internal-or-asset-viewer-button-color: var(--or-asset-viewer-button-color, var(--or-app-color4, ${unsafeCSS(DefaultColor4)})); --internal-or-asset-viewer-error-color: var(--or-asset-viewer-error-color, var(--or-app-color6, ${unsafeCSS(DefaultColor6)})); --internal-or-header-height: var(--or-header-height, ${unsafeCSS(DefaultHeaderHeight)}); height: 100%; width: 100%; background-color: var(--internal-or-asset-viewer-background-color); } *[hidden] { display: none; } #wrapper { height: 100%; width: 100%; display: flex; flex-direction: column; } #wrapper.saving { opacity: 0.5; pointer-events: none; } #view-container, #edit-container { flex: 0 1 auto; overflow: auto; } #view-container { flex: 1; margin-top: 0; box-sizing: border-box; display: flex; flex-direction: row; flex-wrap: wrap; width: 100%; padding: 0 15px 15px; -webkit-animation: fadein 0.3s; /* Safari, Chrome and Opera > 12.1 */ -moz-animation: fadein 0.3s; /* Firefox < 16 */ -ms-animation: fadein 0.3s; /* Internet Explorer */ -o-animation: fadein 0.3s; /* Opera < 12.1 */ animation: fadein 0.3s; } #edit-container { padding: 10px 20px 0; } #name-input { width: 300px; } @keyframes fadein { from { opacity: 0; } to { opacity: 1; } } /* Firefox < 16 */ @-moz-keyframes fadein { from { opacity: 0; } to { opacity: 1; } } /* Safari, Chrome and Opera > 12.1 */ @-webkit-keyframes fadein { from { opacity: 0; } to { opacity: 1; } } /* Internet Explorer */ @-ms-keyframes fadein { from { opacity: 0; } to { opacity: 1; } } /* Opera < 12.1 */ @-o-keyframes fadein { from { opacity: 0; } to { opacity: 1; } } #asset-header { padding: 20px 30px 15px; display: flex; flex: 0 0 auto; align-items: center; justify-content: space-between; z-index: 1; transition: box-shadow 0.2s; box-shadow: none; } #asset-header.editmode { padding: 14px 30px; background-color: var(--internal-or-asset-viewer-panel-color); border-bottom: solid 1px #e5e5e5; } #asset-header.scrolled { box-shadow: rgb(0 0 0 / 15%) 0 0 5px 0; } #title { flex: 1 1 auto; font-size: 18px; font-weight: bold; display: flex; flex-direction: row; align-items: center; color: var(--internal-or-asset-viewer-title-text-color); } #title > or-icon { margin-right: 10px; } #error-wrapper { color: var(--internal-or-asset-viewer-error-color); } #error-wrapper > * { vertical-align: middle; } #error-wrapper or-translate { margin-left: 5px; } #created-time { font-size: 12px; } #right-wrapper { flex: 1 1 auto; text-align: right; } #edit-wrapper { flex: 0 0 auto; } #edit-wrapper > or-translate { margin-right: 10px; } #save-btn { margin-left: 20px; } #edit-btn { margin-left: 15px; } #location-panel .panel-content { height: 100%; } #history-panel .panel-content { position: relative; } .msg { display: flex; justify-content: center; align-items: center; text-align: center; height: 100%; } .back-navigation { display: none; cursor: pointer; } #fileupload { display: flex; align-items: center; width: 100%; } .hidden { display: none; } .multipleAssetsView { display: flex; flex-direction: column; } .multipleAssetsView > *:first-child { margin: 30px; } @media screen and (max-width: 767px) { #wrapper { position: absolute; left: 0; right: 0; } .back-navigation { display: block; } .mobileHidden { display: none; } #asset-header { padding: 15px 15px 15px; } #name-input { width: auto; } #view-container { padding: 0; } #edit-container { padding: 10px 0; } .panelContainer { min-width: 360px; padding: 0; } } @media screen and (max-width: 1130px) { #name-input { width: 150px; } .tabletHidden { display: none; } #view-container { flex-direction: column; flex-wrap: nowrap; } .panelContainer { flex: 0 1 auto; } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "panelStyles",
          "declaration": {
            "name": "panelStyles",
            "module": "../or-asset-viewer/src/style.ts"
          }
        },
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "../or-asset-viewer/src/style.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-chart/src/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrChartEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-chart-event\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-chart/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "# Chart\r\n### `<or-chart>` - `OrChart`\r\n\r\nChart component using the [ChartJS](https://www.chartjs.org) library.",
          "name": "OrChart",
          "members": [
            {
              "kind": "field",
              "name": "DEFAULT_TIMESTAMP_FORMAT",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "default": "\"L HH:mm:ss\""
            },
            {
              "kind": "field",
              "name": "assets",
              "type": {
                "text": "Asset[]"
              },
              "privacy": "public",
              "default": "[]",
              "attribute": "assets"
            },
            {
              "kind": "field",
              "name": "activeAsset",
              "type": {
                "text": "Asset | undefined"
              },
              "privacy": "private",
              "attribute": "activeAsset"
            },
            {
              "kind": "field",
              "name": "assetAttributes",
              "type": {
                "text": "[number, Attribute<any>][]"
              },
              "privacy": "public",
              "default": "[]",
              "attribute": "assetAttributes"
            },
            {
              "kind": "field",
              "name": "rightAxisAttributes",
              "type": {
                "text": "AttributeRef[]"
              },
              "privacy": "public",
              "default": "[]",
              "attribute": "rightAxisAttributes"
            },
            {
              "kind": "field",
              "name": "dataProvider",
              "type": {
                "text": "(startOfPeriod: number, endOfPeriod: number, timeUnits: TimeUnit, stepSize: number) => Promise<ChartDataset<\"line\", ScatterDataPoint[]>[]> | undefined"
              },
              "privacy": "public",
              "attribute": "dataProvider"
            },
            {
              "kind": "field",
              "name": "colors",
              "type": {
                "text": "string[]"
              },
              "privacy": "public",
              "default": "[\"#3869B1\", \"#DA7E30\", \"#3F9852\", \"#CC2428\", \"#6B4C9A\", \"#922427\", \"#958C3D\", \"#535055\"]",
              "attribute": "colors"
            },
            {
              "kind": "field",
              "name": "datapointQuery",
              "type": {
                "text": "AssetDatapointQueryUnion"
              },
              "privacy": "public",
              "readonly": true,
              "attribute": "datapointQuery"
            },
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "OrChartConfig | undefined"
              },
              "privacy": "public",
              "attribute": "config"
            },
            {
              "kind": "field",
              "name": "chartOptions",
              "type": {
                "text": "any | undefined"
              },
              "privacy": "public",
              "attribute": "chartOptions"
            },
            {
              "kind": "field",
              "name": "realm",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "realm"
            },
            {
              "kind": "field",
              "name": "panelName",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "panelName"
            },
            {
              "kind": "field",
              "name": "attributeControls",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "attribute": "attributeControls"
            },
            {
              "kind": "field",
              "name": "timeframe",
              "type": {
                "text": "[Date, Date] | undefined"
              },
              "privacy": "public",
              "attribute": "timeframe"
            },
            {
              "kind": "field",
              "name": "timestampControls",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "attribute": "timestampControls"
            },
            {
              "kind": "field",
              "name": "timePresetOptions",
              "type": {
                "text": "Map<string, TimePresetCallback> | undefined"
              },
              "privacy": "public",
              "attribute": "timePresetOptions"
            },
            {
              "kind": "field",
              "name": "timePresetKey",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "timePresetKey"
            },
            {
              "kind": "field",
              "name": "showLegend",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "attribute": "showLegend"
            },
            {
              "kind": "field",
              "name": "denseLegend",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "denseLegend"
            },
            {
              "kind": "field",
              "name": "_loading",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "attribute": "_loading"
            },
            {
              "kind": "field",
              "name": "_data",
              "type": {
                "text": "ChartDataset<\"line\", ScatterDataPoint[]>[] | undefined"
              },
              "privacy": "protected",
              "default": "undefined",
              "attribute": "_data"
            },
            {
              "kind": "field",
              "name": "_tableTemplate",
              "type": {
                "text": "TemplateResult | undefined"
              },
              "privacy": "protected",
              "attribute": "_tableTemplate"
            },
            {
              "kind": "field",
              "name": "_chartElem",
              "type": {
                "text": "HTMLCanvasElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_dialogElem",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_chart",
              "type": {
                "text": "Chart | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_style",
              "type": {
                "text": "CSSStyleDeclaration"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_startOfPeriod",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_endOfPeriod",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_timeUnits",
              "type": {
                "text": "TimeUnit | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_stepSize",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_updateTimestampTimer",
              "type": {
                "text": "number | null"
              },
              "privacy": "protected",
              "default": "null"
            },
            {
              "kind": "method",
              "name": "applyChartResponsiveness",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_onTreeSelectionChanged",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "OrAssetTreeSelectionEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "removeDatasetHighlight",
              "parameters": [
                {
                  "name": "bgColor",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "addDatasetHighlight",
              "parameters": [
                {
                  "name": "assetId",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "attrName",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "loadSettings",
              "parameters": [
                {
                  "name": "reset",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "saveSettings"
            },
            {
              "kind": "method",
              "name": "_openDialog",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_openTimeDialog",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "startTimestamp",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "endTimestamp",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_addAttribute",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selectedAttrs",
                  "optional": true,
                  "type": {
                    "text": "AttributeRef[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getSelectedAttributes",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "onCompleted"
            },
            {
              "kind": "method",
              "name": "_cleanup",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_deleteAttribute",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "index",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getAttributeOptionsOld",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "[string, string][] | undefined"
                }
              }
            },
            {
              "kind": "method",
              "name": "_getAttributeOptions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "[string, string][] | undefined"
                }
              }
            },
            {
              "kind": "method",
              "name": "_getDefaultTimestampOptions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Map<string, TimePresetCallback>"
                }
              }
            },
            {
              "kind": "method",
              "name": "_getInterval",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "[number, DatapointInterval]"
                }
              },
              "parameters": [
                {
                  "name": "diffInHours",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_loadData",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_loadAttributeData",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<ChartDataset<\"line\", ScatterDataPoint[]>>"
                }
              },
              "parameters": [
                {
                  "name": "asset",
                  "type": {
                    "text": "Asset"
                  }
                },
                {
                  "name": "attribute",
                  "type": {
                    "text": "Attribute<any>"
                  }
                },
                {
                  "name": "color",
                  "type": {
                    "text": "string | undefined"
                  }
                },
                {
                  "name": "from",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "to",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "predicted",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "label",
                  "type": {
                    "text": "string | undefined"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "resize",
              "type": {
                "text": "OrChartEvent"
              }
            },
            {
              "name": "rendered",
              "type": {
                "text": "OrChartEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "assets",
              "type": {
                "text": "Asset[]"
              },
              "default": "[]",
              "fieldName": "assets"
            },
            {
              "name": "activeAsset",
              "type": {
                "text": "Asset | undefined"
              },
              "fieldName": "activeAsset"
            },
            {
              "name": "assetAttributes",
              "type": {
                "text": "[number, Attribute<any>][]"
              },
              "default": "[]",
              "fieldName": "assetAttributes"
            },
            {
              "name": "rightAxisAttributes",
              "type": {
                "text": "AttributeRef[]"
              },
              "default": "[]",
              "fieldName": "rightAxisAttributes"
            },
            {
              "name": "dataProvider",
              "type": {
                "text": "(startOfPeriod: number, endOfPeriod: number, timeUnits: TimeUnit, stepSize: number) => Promise<ChartDataset<\"line\", ScatterDataPoint[]>[]> | undefined"
              },
              "fieldName": "dataProvider"
            },
            {
              "name": "colors",
              "type": {
                "text": "string[]"
              },
              "default": "[\"#3869B1\", \"#DA7E30\", \"#3F9852\", \"#CC2428\", \"#6B4C9A\", \"#922427\", \"#958C3D\", \"#535055\"]",
              "fieldName": "colors"
            },
            {
              "name": "datapointQuery",
              "type": {
                "text": "AssetDatapointQueryUnion"
              },
              "readonly": true,
              "fieldName": "datapointQuery"
            },
            {
              "name": "config",
              "type": {
                "text": "OrChartConfig | undefined"
              },
              "fieldName": "config"
            },
            {
              "name": "chartOptions",
              "type": {
                "text": "any | undefined"
              },
              "fieldName": "chartOptions"
            },
            {
              "name": "realm",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "realm"
            },
            {
              "name": "panelName",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "panelName"
            },
            {
              "name": "attributeControls",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "fieldName": "attributeControls"
            },
            {
              "name": "timeframe",
              "type": {
                "text": "[Date, Date] | undefined"
              },
              "fieldName": "timeframe"
            },
            {
              "name": "timestampControls",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "fieldName": "timestampControls"
            },
            {
              "name": "timePresetOptions",
              "type": {
                "text": "Map<string, TimePresetCallback> | undefined"
              },
              "fieldName": "timePresetOptions"
            },
            {
              "name": "timePresetKey",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "timePresetKey"
            },
            {
              "name": "showLegend",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "fieldName": "showLegend"
            },
            {
              "name": "denseLegend",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "denseLegend"
            },
            {
              "name": "_loading",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "_loading"
            },
            {
              "name": "_data",
              "type": {
                "text": "ChartDataset<\"line\", ScatterDataPoint[]>[] | undefined"
              },
              "default": "undefined",
              "fieldName": "_data"
            },
            {
              "name": "_tableTemplate",
              "type": {
                "text": "TemplateResult | undefined"
              },
              "fieldName": "_tableTemplate"
            }
          ],
          "mixins": [
            {
              "name": "translate(i18next)",
              "module": "../or-chart/src/index.ts"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-chart",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrChartEvent",
          "declaration": {
            "name": "OrChartEvent",
            "module": "../or-chart/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrChart",
          "declaration": {
            "name": "OrChart",
            "module": "../or-chart/src/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-chart",
          "declaration": {
            "name": "OrChart",
            "module": "../or-chart/src/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-icon/src/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "IconSetAddedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-iconset-added\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-icon/src/index.ts"
          }
        },
        {
          "kind": "function",
          "name": "createSvgIconSet",
          "return": {
            "type": {
              "text": "IconSet"
            }
          },
          "parameters": [
            {
              "name": "size",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "icons",
              "type": {
                "text": "{[name: string]: string}"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "createMdiIconSet",
          "return": {
            "type": {
              "text": "IconSet"
            }
          },
          "parameters": [
            {
              "name": "managerUrl",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "IconSets",
          "default": "new ORIconSets()"
        },
        {
          "kind": "function",
          "name": "getAssetDescriptorIconTemplate",
          "return": {
            "type": {
              "text": "TemplateResult"
            }
          },
          "parameters": [
            {
              "name": "descriptor",
              "type": {
                "text": "AssetDescriptor | undefined"
              }
            },
            {
              "name": "fallbackColor",
              "optional": true,
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "name": "fallbackIcon",
              "optional": true,
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "name": "overrideColor",
              "optional": true,
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "name": "overrideIcon",
              "optional": true,
              "type": {
                "text": "string | undefined"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "# Icon\n### `<or-icon>` - `OrIcon`\n\nWeb Component for displaying an icon from a loaded iconset, like the [Material Design Icons](https://materialdesignicons.com) library.",
          "name": "OrIcon",
          "members": [
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "description": "Icon name as given by the Material Design Icons library",
              "attribute": "icon",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "_iconTemplate",
              "type": {
                "text": "TemplateResult | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_handler",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_updateIcon",
              "privacy": "protected"
            }
          ],
          "attributes": [
            {
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "description": "Icon name as given by the Material Design Icons library",
              "fieldName": "icon"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-icon",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrIconSet",
          "declaration": {
            "name": "OrIconSet",
            "module": "../or-icon/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "IconSetAddedEvent",
          "declaration": {
            "name": "IconSetAddedEvent",
            "module": "../or-icon/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "createSvgIconSet",
          "declaration": {
            "name": "createSvgIconSet",
            "module": "../or-icon/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "createMdiIconSet",
          "declaration": {
            "name": "createMdiIconSet",
            "module": "../or-icon/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "IconSets",
          "declaration": {
            "name": "IconSets",
            "module": "../or-icon/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "getAssetDescriptorIconTemplate",
          "declaration": {
            "name": "getAssetDescriptorIconTemplate",
            "module": "../or-icon/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrIcon",
          "declaration": {
            "name": "OrIcon",
            "module": "../or-icon/src/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-icon",
          "declaration": {
            "name": "OrIcon",
            "module": "../or-icon/src/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-icon/src/or-icon-set.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "orIconSet",
          "type": {
            "text": "object"
          },
          "default": "{ size: 24, icons: { \"logo\": \"<path style='pointer-events: var(--or-icon-pointer-events, none);' fill=\\\"#C4D600\\\" d=\\\"m11.96125,23.85096c-6.56773,0 -11.90971,-5.34202 -11.90971,-11.90862l2.49411,0c0,5.19176 4.22389,9.41568 9.41561,9.41568c5.19053,0 9.41561,-4.22392 9.41561,-9.41568c0,-5.19176 -4.22389,-9.41568 -9.41561,-9.41568l0,-2.49413c6.56655,0 11.90971,5.34439 11.90971,11.9098c0,6.5666 -5.34316,11.90862 -11.90971,11.90862l0,0z\\\" /><path fill=\\\"#4E9D2D\\\" d=\\\"m10.25094,20.38647c-2.26848,-0.47231 -4.21822,-1.80199 -5.48741,-3.74009s-1.70892,-4.25777 -1.23545,-6.52625c0.47347,-2.26965 1.80315,-4.21822 3.74242,-5.48857c1.93926,-1.27035 4.25661,-1.70892 6.52625,-1.23545c4.68471,0.97719 7.70121,5.5828 6.72286,10.26635l-2.39994,-0.49907c0.70149,-3.36085 -1.4623,-6.66585 -4.82431,-7.36734c-1.62866,-0.33969 -3.29105,-0.02559 -4.68238,0.88645c-1.39134,0.91088 -2.34526,2.3092 -2.68495,3.93786c-0.33853,1.62633 -0.02443,3.28988 0.88645,4.68122c0.91088,1.39134 2.3092,2.34526 3.93786,2.68379l-0.50139,2.4011l0,0z\\\"/><path fill=\\\"#1D5632\\\"d=\\\"m12.03064,17.49616c-0.09524,0 -0.19048,-0.00116 -0.28457,-0.00465c-1.49833,-0.0755 -2.87818,-0.72942 -3.88636,-1.84097c-1.00818,-1.11271 -1.52156,-2.54948 -1.44722,-4.05013l2.44378,0.12196c-0.04181,0.84557 0.24856,1.65745 0.81769,2.28466c0.56681,0.62721 1.34733,0.99656 2.1929,1.03838c0.84208,0.03833 1.65629,-0.2474 2.2835,-0.81653c0.62837,-0.56797 0.99656,-1.34617 1.03954,-2.19174c0.08711,-1.74573 -1.26371,-3.23708 -3.00943,-3.3242l0.12196,-2.44378c3.09422,0.15332 5.4869,2.79455 5.33358,5.88877c-0.07434,1.49949 -0.72942,2.87818 -1.84097,3.8852c-1.04186,0.94313 -2.36945,1.45303 -3.7644,1.45303l0,0z\\\"/>\", \"logo-plain\": \"m11.9925,23.91349c-6.58498,0 -11.94099,-5.35605 -11.94099,-11.9399l2.50066,0c0,5.20539 4.23498,9.44041 9.44033,9.44041c5.20416,0 9.44033,-4.23502 9.44033,-9.44041c0,-5.20539 -4.23498,-9.44041 -9.44033,-9.44041l0,-2.50068c6.5838,0 11.94099,5.35842 11.94099,11.94108c0,6.58385 -5.35719,11.9399 -11.94099,11.9399l0,0zm-1.80787,-3.27769c-2.31323,-0.48163 -4.30141,-1.83755 -5.59563,-3.81389s-1.74263,-4.34178 -1.25982,-6.65502c0.48281,-2.31443 1.83872,-4.30145 3.81623,-5.59686c1.97751,-1.29542 4.34056,-1.74264 6.65497,-1.25983c4.77711,0.99647 7.8531,5.69295 6.85545,10.46891l-2.44727,-0.50891c0.71532,-3.42716 -1.49114,-6.79738 -4.91946,-7.5127c-1.66078,-0.34639 -3.35596,-0.0261 -4.77474,0.90394c-1.41878,0.92886 -2.39152,2.35476 -2.73791,4.01555c-0.3452,1.65842 -0.02491,3.3548 0.90394,4.77359c0.92885,1.41879 2.35475,2.39154 4.01552,2.73675l-0.51128,2.44848l0,0zm1.81499,-2.92536c-0.09727,0 -0.19455,-0.00119 -0.29064,-0.00475c-1.53029,-0.07711 -2.93958,-0.74498 -3.96926,-1.88025c-1.02968,-1.13646 -1.55401,-2.60388 -1.47809,-4.13655l2.49591,0.12456c-0.04271,0.86361 0.25386,1.69282 0.83513,2.33341c0.5789,0.64059 1.37607,1.01783 2.23968,1.06053c0.86005,0.03915 1.69162,-0.25268 2.33221,-0.83395c0.64177,-0.58009 1.01782,-1.3749 1.06171,-2.23851c0.08897,-1.78298 -1.29066,-3.30616 -3.07362,-3.39513l0.12456,-2.49593c3.16022,0.15659 5.60394,2.85419 5.44735,6.01443c-0.07592,1.53149 -0.74498,2.9396 -1.88024,3.9681c-1.06408,0.96326 -2.41999,1.48403 -3.8447,1.48403l0,0z\", \"marker\": \"<ellipse fill=\\\"#000\\\" opacity=\\\"0.2\\\" ry=\\\"1.5\\\" rx=\\\"4\\\" cy=\\\"22.5\\\" cx=\\\"12\\\" /><path style='pointer-events: var(--or-icon-pointer-events, none);' d=\\\"m11.999999,0a8.437501,8.344057 0 0 1 8.437501,8.344057c0,6.500779 -5.798864,6.280799 -8.437501,14.412461c-2.638637,-8.131662 -8.437501,-7.911683 -8.437501,-14.412461a8.437501,8.344057 0 0 1 8.437501,-8.344057z\\\" />\" } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "orIconSet",
            "module": "../or-icon/src/or-icon-set.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-gauge/src/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "# Gauge\r\n### `<or-gauge>` - `OrGauge`\r\n\r\nGauge statistic component using the [GaugeJS](https://www.npmjs.com/package/gaugeJS) library.",
          "name": "OrGauge",
          "members": [
            {
              "kind": "field",
              "name": "attrRef",
              "type": {
                "text": "AttributeRef | undefined"
              },
              "privacy": "public",
              "attribute": "attrRef"
            },
            {
              "kind": "field",
              "name": "asset",
              "type": {
                "text": "Asset | undefined"
              },
              "privacy": "public",
              "attribute": "asset"
            },
            {
              "kind": "field",
              "name": "assetAttribute",
              "type": {
                "text": "[number, Attribute<any>] | undefined"
              },
              "privacy": "public",
              "attribute": "assetAttribute"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "decimals",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "0",
              "attribute": "decimals"
            },
            {
              "kind": "field",
              "name": "unit",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "unit"
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "attribute": "min"
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "attribute": "max"
            },
            {
              "kind": "field",
              "name": "thresholds",
              "type": {
                "text": "[number, string][] | undefined"
              },
              "privacy": "public",
              "attribute": "thresholds"
            },
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "OrGaugeConfig | undefined"
              },
              "privacy": "public",
              "readonly": true,
              "attribute": "config"
            },
            {
              "kind": "field",
              "name": "realm",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "realm"
            },
            {
              "kind": "field",
              "name": "loading",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_gaugeElem",
              "type": {
                "text": "HTMLCanvasElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_wrapperElem",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_detailsElem",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "gauge",
              "type": {
                "text": "Gauge | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "gaugeSize",
              "type": {
                "text": "{ width: number, height: number } | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "resizeObserver",
              "type": {
                "text": "ResizeObserver | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "setupGauge"
            },
            {
              "kind": "method",
              "name": "getGaugeWidth",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "gaugeSize",
                  "optional": true,
                  "type": {
                    "text": "{ width: number, height: number }"
                  }
                },
                {
                  "name": "includeLabelHeight",
                  "default": "true",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "shouldShowLabel",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "gaugeSize",
                  "type": {
                    "text": "{ width: number, height: number }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getLabelSize",
              "return": {
                "type": {
                  "text": "\"s\" | \"m\" | \"l\" | \"xl\""
                }
              },
              "parameters": [
                {
                  "name": "width",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "loadData",
              "parameters": [
                {
                  "name": "attrRef",
                  "type": {
                    "text": "AttributeRef"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getDefaultConfig",
              "return": {
                "type": {
                  "text": "OrGaugeConfig"
                }
              }
            }
          ],
          "attributes": [
            {
              "name": "attrRef",
              "type": {
                "text": "AttributeRef | undefined"
              },
              "fieldName": "attrRef"
            },
            {
              "name": "asset",
              "type": {
                "text": "Asset | undefined"
              },
              "fieldName": "asset"
            },
            {
              "name": "assetAttribute",
              "type": {
                "text": "[number, Attribute<any>] | undefined"
              },
              "fieldName": "assetAttribute"
            },
            {
              "name": "value",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "value"
            },
            {
              "name": "decimals",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "decimals"
            },
            {
              "name": "unit",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "unit"
            },
            {
              "name": "min",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "min"
            },
            {
              "name": "max",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "max"
            },
            {
              "name": "thresholds",
              "type": {
                "text": "[number, string][] | undefined"
              },
              "fieldName": "thresholds"
            },
            {
              "name": "config",
              "type": {
                "text": "OrGaugeConfig | undefined"
              },
              "readonly": true,
              "fieldName": "config"
            },
            {
              "name": "realm",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "realm"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-gauge",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrGauge",
          "declaration": {
            "name": "OrGauge",
            "module": "../or-gauge/src/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-gauge",
          "declaration": {
            "name": "OrGauge",
            "module": "../or-gauge/src/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-mobile-app/src/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "# Mobile App\r\n### `<or-mobile-app>` - `OrMobileApp`\r\n\r\nExtended class of OrApp that includes features useful for building smooth mobile apps. <br />\r\nThink of transitions or loaders between pages, additional caching functions, and additional states to obtain data from.",
          "name": "OrMobileApp",
          "members": [
            {
              "kind": "field",
              "name": "loadingPageProvider",
              "type": {
                "text": "PageProvider<any> | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_loadPage",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<Page<any>>"
                }
              },
              "parameters": [
                {
                  "name": "pageProvider",
                  "type": {
                    "text": "PageProvider<any>"
                  }
                },
                {
                  "name": "beforeLoad",
                  "optional": true,
                  "type": {
                    "text": "(page: Page<any>) => (Promise<void> | void)"
                  }
                },
                {
                  "name": "animate",
                  "default": "true"
                }
              ],
              "description": "Internal function used for initializing the page using a PageProvider function,\r\nAfter the web component is created, we will append it as a child to the HTML using the _mainElem container.",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "_unloadPage",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "page",
                  "optional": true,
                  "type": {
                    "text": "MobilePage<any>"
                  },
                  "description": "The {@link MobilePage}to unload\r\n     * "
                },
                {
                  "name": "animate",
                  "default": "true",
                  "description": "Whether to animate a fade out"
                }
              ],
              "description": "Unloads the page from the `<amin>` element.\r\nBy default, it unloads the existing / current MobilePage, and animates a fade out.",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "_applyLoadingPage",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "page",
                  "type": {
                    "text": "MobilePage<any>"
                  }
                },
                {
                  "name": "animate",
                  "default": "true"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_unloadLoadingPage",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "page",
                  "default": "this._mainElem.querySelector('#loading-page')",
                  "type": {
                    "text": "MobilePage<any> | undefined"
                  }
                },
                {
                  "name": "animate",
                  "default": "true"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_doEnterAnimation",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "page",
                  "type": {
                    "text": "MobilePage<any>"
                  }
                },
                {
                  "name": "animation",
                  "optional": true,
                  "type": {
                    "text": "MobilePageAnimation"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_doExitAnimation",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "page",
                  "type": {
                    "text": "MobilePage<any>"
                  }
                },
                {
                  "name": "animation",
                  "optional": true,
                  "type": {
                    "text": "MobilePageAnimation"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "OFFLINE_PAGE_ID",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "default": "\"offline-page\"",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "appConfig",
              "type": {
                "text": "AppConfig<S> | undefined"
              },
              "privacy": "public",
              "description": "App configuration JSON object to set up the pages, header items, and languages.\r\nYou can use the RealmAppConfig field to adjust these options per realm.",
              "attribute": "appConfig",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "appConfigProvider",
              "type": {
                "text": "(manager: Manager) => AppConfig<S> | undefined"
              },
              "privacy": "public",
              "description": "Callback function that overrides the appConfig attribute.\r\nThis is preferred sometimes to dynamically adjust the config.",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "managerConfig",
              "type": {
                "text": "ManagerConfig | undefined"
              },
              "privacy": "public",
              "description": "Manager config JSON object for adjusting deployment-targeted options such as managerUrl, realm, mapType, autoLogin etc.",
              "attribute": "managerConfig",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mainElem",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "_initialised",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "_page",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "_config",
              "type": {
                "text": "RealmAppConfig"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "_realm",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "_offline",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showOfflineFallback",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "_activeMenu",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "_onEventBind",
              "type": {
                "text": "any | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "_onVisibilityBind",
              "type": {
                "text": "any | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "_realms",
              "type": {
                "text": "Realm[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "_offlineFallbackDeferred",
              "type": {
                "text": "Util.Deferred<void> | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "_store",
              "type": {
                "text": "Store<S, AnyAction>"
              },
              "privacy": "protected",
              "default": "store",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "_storeUnsubscribe",
              "type": {
                "text": "Unsubscribe"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "getState",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "S"
                }
              },
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "onVisibilityChange",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "stateChanged",
              "privacy": "public",
              "parameters": [
                {
                  "name": "state",
                  "type": {
                    "text": "AppStateKeyed"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "_onEvent",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "OREvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "_startOfflineFallbackTimer",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "force",
                  "default": "false"
                }
              ],
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "_completeOfflineFallbackTimer",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "aborted",
                  "default": "false"
                }
              ],
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "logout",
              "privacy": "public",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "setLanguage",
              "privacy": "public",
              "parameters": [
                {
                  "name": "lang",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "showLanguageModal",
              "privacy": "public",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "doAppConfigInit",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "doBasicLogin",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "PromiseLike<BasicLoginResult>"
                }
              },
              "parameters": [
                {
                  "name": "username",
                  "type": {
                    "text": "string | undefined"
                  }
                },
                {
                  "name": "password",
                  "type": {
                    "text": "string | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "updateWindowTitle",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "_getConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "RealmAppConfig"
                }
              },
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "DialogHostElement",
              "default": "this",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            }
          ],
          "superclass": {
            "name": "OrApp",
            "package": "@openremote/or-app"
          },
          "tagName": "or-mobile-app",
          "customElement": true,
          "attributes": [
            {
              "name": "appConfig",
              "type": {
                "text": "AppConfig<S> | undefined"
              },
              "description": "App configuration JSON object to set up the pages, header items, and languages.\r\nYou can use the RealmAppConfig field to adjust these options per realm.",
              "fieldName": "appConfig",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "name": "managerConfig",
              "type": {
                "text": "ManagerConfig | undefined"
              },
              "description": "Manager config JSON object for adjusting deployment-targeted options such as managerUrl, realm, mapType, autoLogin etc.",
              "fieldName": "managerConfig",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "doAnimation",
          "return": {
            "type": {
              "text": "Promise<void>"
            }
          },
          "parameters": [
            {
              "name": "elem",
              "type": {
                "text": "Element"
              }
            },
            {
              "name": "cssClass",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "timeout",
              "type": {
                "text": "number"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./loading-page\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./style\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./types\""
          }
        },
        {
          "kind": "js",
          "name": "OrMobileApp",
          "declaration": {
            "name": "OrMobileApp",
            "module": "../or-mobile-app/src/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-mobile-app",
          "declaration": {
            "name": "OrMobileApp",
            "module": "../or-mobile-app/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "doAnimation",
          "declaration": {
            "name": "doAnimation",
            "module": "../or-mobile-app/src/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-mobile-app/src/loading-page.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "loadingPageProvider",
          "parameters": [
            {
              "name": "store",
              "type": {
                "text": "Store<AppStateKeyed>"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "LoadingPage",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            },
            {
              "kind": "method",
              "name": "stateChanged",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "state",
                  "type": {
                    "text": "AppStateKeyed"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            },
            {
              "kind": "field",
              "name": "_store",
              "type": {
                "text": "Store<S, AnyAction>"
              },
              "privacy": "protected",
              "default": "store",
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            },
            {
              "kind": "field",
              "name": "_storeUnsubscribe",
              "type": {
                "text": "Unsubscribe"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            },
            {
              "kind": "field",
              "name": "onRefresh",
              "type": {
                "text": "() => void | undefined"
              },
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            },
            {
              "kind": "method",
              "name": "getState",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "S"
                }
              },
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            }
          ],
          "superclass": {
            "name": "Page",
            "package": "@openremote/or-app"
          },
          "tagName": "page-loading",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "loadingPageProvider",
          "declaration": {
            "name": "loadingPageProvider",
            "module": "../or-mobile-app/src/loading-page.ts"
          }
        },
        {
          "kind": "js",
          "name": "LoadingPage",
          "declaration": {
            "name": "LoadingPage",
            "module": "../or-mobile-app/src/loading-page.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "page-loading",
          "declaration": {
            "name": "LoadingPage",
            "module": "../or-mobile-app/src/loading-page.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-mobile-app/src/style.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "getAnimationStyles",
          "return": {
            "type": {
              "text": "CSSResult"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getAnimationStyles",
          "declaration": {
            "name": "getAnimationStyles",
            "module": "../or-mobile-app/src/style.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-mobile-app/src/types.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MobilePage",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            },
            {
              "kind": "method",
              "name": "getUpdateComplete",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<boolean>"
                }
              }
            },
            {
              "kind": "field",
              "name": "enterAnimation",
              "type": {
                "text": "MobilePageAnimation"
              },
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "exitAnimation",
              "type": {
                "text": "MobilePageAnimation"
              },
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_store",
              "type": {
                "text": "Store<S, AnyAction>"
              },
              "privacy": "protected",
              "default": "store",
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            },
            {
              "kind": "field",
              "name": "_storeUnsubscribe",
              "type": {
                "text": "Unsubscribe"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            },
            {
              "kind": "field",
              "name": "onRefresh",
              "type": {
                "text": "() => void | undefined"
              },
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            },
            {
              "kind": "method",
              "name": "getState",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "S"
                }
              },
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            },
            {
              "kind": "method",
              "name": "stateChanged",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "state",
                  "type": {
                    "text": "S"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            }
          ],
          "superclass": {
            "name": "Page",
            "package": "@openremote/or-app"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MobilePage",
          "declaration": {
            "name": "MobilePage",
            "module": "../or-mobile-app/src/types.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-mwc-components/src/or-mwc-dialog.d.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcDialogOpenedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "static": true,
              "readonly": true,
              "default": "\"or-mwc-dialog-opened\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-mwc-components/src/or-mwc-dialog.d.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcDialogClosedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "static": true,
              "readonly": true,
              "default": "\"or-mwc-dialog-closed\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-mwc-components/src/or-mwc-dialog.d.ts"
          }
        },
        {
          "kind": "function",
          "name": "showErrorDialog",
          "return": {
            "type": {
              "text": "Promise<boolean>"
            }
          },
          "parameters": [
            {
              "name": "errorMessage",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "hostElement",
              "optional": true,
              "type": {
                "text": "HTMLElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "showOkCancelDialog",
          "return": {
            "type": {
              "text": "Promise<boolean>"
            }
          },
          "parameters": [
            {
              "name": "title",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "content",
              "type": {
                "text": "string | TemplateResult"
              }
            },
            {
              "name": "okText",
              "optional": true,
              "type": {
                "text": "string"
              }
            },
            {
              "name": "hostElement",
              "optional": true,
              "type": {
                "text": "HTMLElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "showOkDialog",
          "return": {
            "type": {
              "text": "Promise<boolean>"
            }
          },
          "parameters": [
            {
              "name": "title",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "content",
              "type": {
                "text": "string | TemplateResult"
              }
            },
            {
              "name": "okText",
              "optional": true,
              "type": {
                "text": "string"
              }
            },
            {
              "name": "hostElement",
              "optional": true,
              "type": {
                "text": "HTMLElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "showDialog",
          "return": {
            "type": {
              "text": "T"
            }
          },
          "parameters": [
            {
              "name": "dialog",
              "type": {
                "text": "T"
              }
            },
            {
              "name": "hostElement",
              "optional": true,
              "type": {
                "text": "HTMLElement"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcDialog",
          "members": [
            {
              "kind": "field",
              "name": "DialogHostElement",
              "type": {
                "text": "HTMLElement"
              },
              "static": true,
              "description": "Can be set by apps to control where in the DOM dialogs are added"
            },
            {
              "kind": "field",
              "name": "heading",
              "type": {
                "text": "string | TemplateResult | undefined"
              }
            },
            {
              "kind": "field",
              "name": "content",
              "type": {
                "text": "TemplateResult | (() => TemplateResult) | undefined"
              }
            },
            {
              "kind": "field",
              "name": "actions",
              "type": {
                "text": "DialogAction[] | undefined"
              }
            },
            {
              "kind": "field",
              "name": "dismissAction",
              "type": {
                "text": "DialogActionBase | null | undefined"
              }
            },
            {
              "kind": "field",
              "name": "avatar",
              "type": {
                "text": "boolean | undefined"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_mdcElem",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_mdcComponent",
              "type": {
                "text": "MDCDialog | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "isOpen",
              "type": {
                "text": "boolean"
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "setOpen",
              "return": {
                "type": {
                  "text": "OrMwcDialog"
                }
              },
              "parameters": [
                {
                  "name": "isOpen",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setHeading",
              "return": {
                "type": {
                  "text": "OrMwcDialog"
                }
              },
              "parameters": [
                {
                  "name": "heading",
                  "type": {
                    "text": "TemplateResult | string | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setContent",
              "return": {
                "type": {
                  "text": "OrMwcDialog"
                }
              },
              "parameters": [
                {
                  "name": "content",
                  "type": {
                    "text": "TemplateResult | (() => TemplateResult) | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setActions",
              "return": {
                "type": {
                  "text": "OrMwcDialog"
                }
              },
              "parameters": [
                {
                  "name": "actions",
                  "type": {
                    "text": "DialogAction[] | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setDismissAction",
              "return": {
                "type": {
                  "text": "OrMwcDialog"
                }
              },
              "parameters": [
                {
                  "name": "action",
                  "type": {
                    "text": "DialogActionBase | null | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setStyles",
              "return": {
                "type": {
                  "text": "OrMwcDialog"
                }
              },
              "parameters": [
                {
                  "name": "styles",
                  "type": {
                    "text": "string | TemplateResult | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setAvatar",
              "return": {
                "type": {
                  "text": "OrMwcDialog"
                }
              },
              "parameters": [
                {
                  "name": "avatar",
                  "type": {
                    "text": "boolean | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "open",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "close",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "action",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onDialogOpened",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_onDialogClosed",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "action",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-mwc-dialog",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrMwcDialogOpenedEvent",
          "declaration": {
            "name": "OrMwcDialogOpenedEvent",
            "module": "../or-mwc-components/src/or-mwc-dialog.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrMwcDialogClosedEvent",
          "declaration": {
            "name": "OrMwcDialogClosedEvent",
            "module": "../or-mwc-components/src/or-mwc-dialog.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "showErrorDialog",
          "declaration": {
            "name": "showErrorDialog",
            "module": "../or-mwc-components/src/or-mwc-dialog.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "showOkCancelDialog",
          "declaration": {
            "name": "showOkCancelDialog",
            "module": "../or-mwc-components/src/or-mwc-dialog.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "showOkDialog",
          "declaration": {
            "name": "showOkDialog",
            "module": "../or-mwc-components/src/or-mwc-dialog.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "showDialog",
          "declaration": {
            "name": "showDialog",
            "module": "../or-mwc-components/src/or-mwc-dialog.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrMwcDialog",
          "declaration": {
            "name": "OrMwcDialog",
            "module": "../or-mwc-components/src/or-mwc-dialog.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-mwc-components/src/or-mwc-dialog.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcDialogOpenedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-mwc-dialog-opened\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-mwc-components/src/or-mwc-dialog.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcDialogClosedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-mwc-dialog-closed\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-mwc-components/src/or-mwc-dialog.ts"
          }
        },
        {
          "kind": "function",
          "name": "showErrorDialog",
          "parameters": [
            {
              "name": "errorMessage",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "hostElement",
              "optional": true,
              "type": {
                "text": "HTMLElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "showOkCancelDialog",
          "parameters": [
            {
              "name": "title",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "content",
              "type": {
                "text": "string | TemplateResult"
              }
            },
            {
              "name": "okText",
              "optional": true,
              "type": {
                "text": "string"
              }
            },
            {
              "name": "hostElement",
              "optional": true,
              "type": {
                "text": "HTMLElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "showOkDialog",
          "parameters": [
            {
              "name": "title",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "content",
              "type": {
                "text": "string | TemplateResult"
              }
            },
            {
              "name": "okText",
              "optional": true,
              "type": {
                "text": "string"
              }
            },
            {
              "name": "hostElement",
              "optional": true,
              "type": {
                "text": "HTMLElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "showDialog",
          "return": {
            "type": {
              "text": "T"
            }
          },
          "parameters": [
            {
              "name": "dialog",
              "type": {
                "text": "T"
              }
            },
            {
              "name": "hostElement",
              "optional": true,
              "type": {
                "text": "HTMLElement"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcDialog",
          "members": [
            {
              "kind": "field",
              "name": "DialogHostElement",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "public",
              "static": true,
              "description": "Can be set by apps to control where in the DOM dialogs are added"
            },
            {
              "kind": "field",
              "name": "heading",
              "type": {
                "text": "string | TemplateResult | undefined"
              },
              "privacy": "public",
              "attribute": "heading"
            },
            {
              "kind": "field",
              "name": "content",
              "type": {
                "text": "TemplateResult | (() => TemplateResult) | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "actions",
              "type": {
                "text": "DialogAction[] | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "dismissAction",
              "type": {
                "text": "DialogActionBase | null | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "avatar",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "attribute": "avatar"
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_mdcElem",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_mdcComponent",
              "type": {
                "text": "MDCDialog | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "isOpen",
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "setOpen",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "OrMwcDialog"
                }
              },
              "parameters": [
                {
                  "name": "isOpen",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setHeading",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "OrMwcDialog"
                }
              },
              "parameters": [
                {
                  "name": "heading",
                  "type": {
                    "text": "TemplateResult | string | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setContent",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "OrMwcDialog"
                }
              },
              "parameters": [
                {
                  "name": "content",
                  "type": {
                    "text": "TemplateResult | (() => TemplateResult) | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setActions",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "OrMwcDialog"
                }
              },
              "parameters": [
                {
                  "name": "actions",
                  "type": {
                    "text": "DialogAction[] | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setDismissAction",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "OrMwcDialog"
                }
              },
              "parameters": [
                {
                  "name": "action",
                  "type": {
                    "text": "DialogActionBase | null | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setStyles",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "OrMwcDialog"
                }
              },
              "parameters": [
                {
                  "name": "styles",
                  "type": {
                    "text": "string | TemplateResult | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setAvatar",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "OrMwcDialog"
                }
              },
              "parameters": [
                {
                  "name": "avatar",
                  "type": {
                    "text": "boolean | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "open",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "close",
              "privacy": "public",
              "parameters": [
                {
                  "name": "action",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onDialogOpened",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_onDialogClosed",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "action",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "type": {
                "text": "OrMwcDialogOpenedEvent"
              }
            },
            {
              "name": "action",
              "type": {
                "text": "OrMwcDialogClosedEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "heading",
              "type": {
                "text": "string | TemplateResult | undefined"
              },
              "fieldName": "heading"
            },
            {
              "name": "avatar",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "avatar"
            },
            {
              "name": "styles",
              "readonly": true,
              "fieldName": "styles"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-mwc-dialog",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrMwcDialogOpenedEvent",
          "declaration": {
            "name": "OrMwcDialogOpenedEvent",
            "module": "../or-mwc-components/src/or-mwc-dialog.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrMwcDialogClosedEvent",
          "declaration": {
            "name": "OrMwcDialogClosedEvent",
            "module": "../or-mwc-components/src/or-mwc-dialog.ts"
          }
        },
        {
          "kind": "js",
          "name": "showErrorDialog",
          "declaration": {
            "name": "showErrorDialog",
            "module": "../or-mwc-components/src/or-mwc-dialog.ts"
          }
        },
        {
          "kind": "js",
          "name": "showOkCancelDialog",
          "declaration": {
            "name": "showOkCancelDialog",
            "module": "../or-mwc-components/src/or-mwc-dialog.ts"
          }
        },
        {
          "kind": "js",
          "name": "showOkDialog",
          "declaration": {
            "name": "showOkDialog",
            "module": "../or-mwc-components/src/or-mwc-dialog.ts"
          }
        },
        {
          "kind": "js",
          "name": "showDialog",
          "declaration": {
            "name": "showDialog",
            "module": "../or-mwc-components/src/or-mwc-dialog.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrMwcDialog",
          "declaration": {
            "name": "OrMwcDialog",
            "module": "../or-mwc-components/src/or-mwc-dialog.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-mwc-dialog",
          "declaration": {
            "name": "OrMwcDialog",
            "module": "../or-mwc-components/src/or-mwc-dialog.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-mwc-components/src/or-mwc-drawer.d.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcDrawerChangedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "static": true,
              "readonly": true,
              "default": "\"or-mwc-drawer-changed\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-mwc-components/src/or-mwc-drawer.d.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcDrawer",
          "members": [
            {
              "kind": "field",
              "name": "header",
              "type": {
                "text": "TemplateResult"
              }
            },
            {
              "kind": "field",
              "name": "dismissible",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "rightSided",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "transparent",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "appContent",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "topBar",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "drawerElement",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "drawer",
              "type": {
                "text": "MDCDrawer | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "toggle",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "dispatchChangedEvent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-mwc-drawer",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrMwcDrawerChangedEvent",
          "declaration": {
            "name": "OrMwcDrawerChangedEvent",
            "module": "../or-mwc-components/src/or-mwc-drawer.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrMwcDrawer",
          "declaration": {
            "name": "OrMwcDrawer",
            "module": "../or-mwc-components/src/or-mwc-drawer.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-mwc-components/src/or-mwc-drawer.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcDrawerChangedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-mwc-drawer-changed\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-mwc-components/src/or-mwc-drawer.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcDrawer",
          "members": [
            {
              "kind": "field",
              "name": "header",
              "type": {
                "text": "TemplateResult"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "dismissible",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "dismissible"
            },
            {
              "kind": "field",
              "name": "rightSided",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "rightSided"
            },
            {
              "kind": "field",
              "name": "transparent",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "transparent"
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "open"
            },
            {
              "kind": "field",
              "name": "appContent",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "topBar",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "drawerElement",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "drawer",
              "type": {
                "text": "MDCDrawer | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "toggle",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "dispatchChangedEvent",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "value",
              "type": {
                "text": "OrMwcDrawerChangedEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "dismissible",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "dismissible"
            },
            {
              "name": "rightSided",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "rightSided"
            },
            {
              "name": "transparent",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "transparent"
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "open"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-mwc-drawer",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrMwcDrawerChangedEvent",
          "declaration": {
            "name": "OrMwcDrawerChangedEvent",
            "module": "../or-mwc-components/src/or-mwc-drawer.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrMwcDrawer",
          "declaration": {
            "name": "OrMwcDrawer",
            "module": "../or-mwc-components/src/or-mwc-drawer.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-mwc-drawer",
          "declaration": {
            "name": "OrMwcDrawer",
            "module": "../or-mwc-components/src/or-mwc-drawer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-mwc-components/src/or-mwc-input.d.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrInputChangedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "static": true,
              "readonly": true,
              "default": "\"or-mwc-input-changed\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-mwc-components/src/or-mwc-input.d.ts"
          }
        },
        {
          "kind": "variable",
          "name": "getValueHolderInputTemplateProvider",
          "type": {
            "text": "ValueInputProviderGenerator"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcInput",
          "members": [
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean | undefined"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "any | undefined"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "InputType | undefined"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "String | undefined"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "any | undefined"
              }
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "any | undefined"
              }
            },
            {
              "kind": "field",
              "name": "step",
              "type": {
                "text": "number | undefined"
              }
            },
            {
              "kind": "field",
              "name": "checked",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "maxLength",
              "type": {
                "text": "number | undefined"
              }
            },
            {
              "kind": "field",
              "name": "minLength",
              "type": {
                "text": "number | undefined"
              }
            },
            {
              "kind": "field",
              "name": "rows",
              "type": {
                "text": "number | undefined"
              }
            },
            {
              "kind": "field",
              "name": "cols",
              "type": {
                "text": "number | undefined"
              }
            },
            {
              "kind": "field",
              "name": "multiple",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "pattern",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "placeHolder",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "options",
              "type": {
                "text": "any[] | any | undefined"
              }
            },
            {
              "kind": "field",
              "name": "autoSelect",
              "type": {
                "text": "boolean | undefined"
              }
            },
            {
              "kind": "field",
              "name": "searchProvider",
              "type": {
                "text": "(search?: string) => Promise<[any, string][]> | undefined"
              }
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "iconColor",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "iconOn",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "iconTrailing",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "compact",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "comfortable",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "raised",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "action",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "unElevated",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "outlined",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "rounded",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "format",
              "type": {
                "text": "ValueFormat | undefined"
              }
            },
            {
              "kind": "field",
              "name": "disableSliderNumberInput",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "fullWidth",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "helperText",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "helperPersistent",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "validationMessage",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "autoValidate",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "charCounter",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "continuous",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "resizeVertical",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "nativeValue",
              "type": {
                "text": "any"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_mdcComponent",
              "type": {
                "text": "MDCComponent<any> | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_mdcComponent2",
              "type": {
                "text": "MDCComponent<any> | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_selectedIndex",
              "type": {
                "text": "number"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_menuObserver",
              "type": {
                "text": "IntersectionObserver | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_tempValue",
              "type": {
                "text": "any"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "isUiValid",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "searchableValue",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "errorMessage",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "focus",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_getFormat",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "ValueFormat | undefined"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderOutlined",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult<1>"
                }
              },
              "parameters": [
                {
                  "name": "labelTemplate",
                  "type": {
                    "text": "TemplateResult | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setCustomValidity",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "checkValidity",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "reportValidity",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "onValueChange",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elem",
                  "type": {
                    "text": "HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement | undefined"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "any | undefined"
                  }
                },
                {
                  "name": "enterPressed",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "valid",
              "type": {
                "text": "boolean"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "currentValue",
              "type": {
                "text": "any"
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "resolveOptions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "[any, string][] | undefined"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "type": {
                    "text": "any[] | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getSelectedTextValue",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "[string, string][] | undefined"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-mwc-input",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrInputChangedEvent",
          "declaration": {
            "name": "OrInputChangedEvent",
            "module": "../or-mwc-components/src/or-mwc-input.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "getValueHolderInputTemplateProvider",
          "declaration": {
            "name": "getValueHolderInputTemplateProvider",
            "module": "../or-mwc-components/src/or-mwc-input.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrMwcInput",
          "declaration": {
            "name": "OrMwcInput",
            "module": "../or-mwc-components/src/or-mwc-input.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-mwc-components/src/or-mwc-input.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrInputChangedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-mwc-input-changed\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-mwc-components/src/or-mwc-input.ts"
          }
        },
        {
          "kind": "function",
          "name": "getValueHolderInputTemplateProvider",
          "parameters": [
            {
              "name": "assetDescriptor"
            },
            {
              "name": "valueHolder"
            },
            {
              "name": "valueHolderDescriptor"
            },
            {
              "name": "valueDescriptor"
            },
            {
              "name": "valueChangeNotifier"
            },
            {
              "name": "options"
            }
          ]
        },
        {
          "kind": "class",
          "description": "# Material Input\r\n### `<or-mwc-input>` - `OrMwcInput`\r\n\r\nWeb Component for control elements using the Material Design specification. <br />\r\nIncludes input fields, buttons, switches, and more.",
          "name": "OrMwcInput",
          "cssProperties": [
            {
              "description": "Controls the color",
              "name": "--internal-or-mwc-input-color"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "attribute": "focused"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "any | undefined"
              },
              "privacy": "public",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "InputType | undefined"
              },
              "privacy": "public",
              "attribute": "type"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "String | undefined"
              },
              "privacy": "public",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "readonly"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "any | undefined"
              },
              "privacy": "public",
              "attribute": "max"
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "any | undefined"
              },
              "privacy": "public",
              "attribute": "min"
            },
            {
              "kind": "field",
              "name": "step",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "attribute": "step"
            },
            {
              "kind": "field",
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "checked"
            },
            {
              "kind": "field",
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "indeterminate"
            },
            {
              "kind": "field",
              "name": "maxLength",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "attribute": "maxLength"
            },
            {
              "kind": "field",
              "name": "minLength",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "attribute": "minLength"
            },
            {
              "kind": "field",
              "name": "rows",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "attribute": "rows"
            },
            {
              "kind": "field",
              "name": "cols",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "attribute": "cols"
            },
            {
              "kind": "field",
              "name": "multiple",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "multiple"
            },
            {
              "kind": "field",
              "name": "pattern",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "pattern"
            },
            {
              "kind": "field",
              "name": "placeHolder",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "placeHolder"
            },
            {
              "kind": "field",
              "name": "options",
              "type": {
                "text": "any[] | any | undefined"
              },
              "privacy": "public",
              "attribute": "options"
            },
            {
              "kind": "field",
              "name": "autoSelect",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "attribute": "autoSelect"
            },
            {
              "kind": "field",
              "name": "searchProvider",
              "type": {
                "text": "(search?: string) => Promise<[any, string][]> | undefined"
              },
              "privacy": "public",
              "attribute": "searchProvider"
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "icon"
            },
            {
              "kind": "field",
              "name": "iconColor",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "iconColor"
            },
            {
              "kind": "field",
              "name": "iconOn",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "iconOn"
            },
            {
              "kind": "field",
              "name": "iconTrailing",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "iconTrailing"
            },
            {
              "kind": "field",
              "name": "compact",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "compact"
            },
            {
              "kind": "field",
              "name": "comfortable",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "comfortable"
            },
            {
              "kind": "field",
              "name": "raised",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "raised"
            },
            {
              "kind": "field",
              "name": "action",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "action"
            },
            {
              "kind": "field",
              "name": "unElevated",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "unElevated"
            },
            {
              "kind": "field",
              "name": "outlined",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "outlined"
            },
            {
              "kind": "field",
              "name": "rounded",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "rounded"
            },
            {
              "kind": "field",
              "name": "format",
              "type": {
                "text": "ValueFormat | undefined"
              },
              "privacy": "public",
              "attribute": "format"
            },
            {
              "kind": "field",
              "name": "disableSliderNumberInput",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "disableSliderNumberInput"
            },
            {
              "kind": "field",
              "name": "fullWidth",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "fullWidth"
            },
            {
              "kind": "field",
              "name": "helperText",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "helperText"
            },
            {
              "kind": "field",
              "name": "helperPersistent",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "helperPersistent"
            },
            {
              "kind": "field",
              "name": "validationMessage",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "validationMessage"
            },
            {
              "kind": "field",
              "name": "autoValidate",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "autoValidate"
            },
            {
              "kind": "field",
              "name": "charCounter",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "charCounter"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "continuous",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "continuous"
            },
            {
              "kind": "field",
              "name": "resizeVertical",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "resizeVertical"
            },
            {
              "kind": "field",
              "name": "nativeValue",
              "type": {
                "text": "any"
              },
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_mdcComponent",
              "type": {
                "text": "MDCComponent<any> | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_mdcComponent2",
              "type": {
                "text": "MDCComponent<any> | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_selectedIndex",
              "type": {
                "text": "number"
              },
              "privacy": "protected",
              "default": "-1"
            },
            {
              "kind": "field",
              "name": "_menuObserver",
              "type": {
                "text": "IntersectionObserver | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_tempValue",
              "type": {
                "text": "any"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "isUiValid",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "true"
            },
            {
              "kind": "field",
              "name": "searchableValue",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "errorMessage",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "focus",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "_getFormat",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "ValueFormat | undefined"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderOutlined",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "labelTemplate",
                  "type": {
                    "text": "TemplateResult | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setCustomValidity",
              "privacy": "public",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "checkValidity",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "reportValidity",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "onValueChange",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "elem",
                  "type": {
                    "text": "HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement | undefined"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "any | undefined"
                  }
                },
                {
                  "name": "enterPressed",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "valid",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "currentValue",
              "type": {
                "text": "any"
              },
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "resolveOptions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "[any, string][] | undefined"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "type": {
                    "text": "any[] | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getSelectedTextValue",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "[string, string][] | undefined"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "type": {
                "text": "OrInputChangedEvent"
              }
            },
            {
              "name": "newValue",
              "type": {
                "text": "OrInputChangedEvent"
              }
            },
            {
              "type": {
                "text": "OrInputChangedEvent"
              },
              "description": "Upon value change",
              "name": "or-mwc-input-changed"
            }
          ],
          "attributes": [
            {
              "name": "focused",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "focused"
            },
            {
              "name": "value",
              "type": {
                "text": "any | undefined"
              },
              "fieldName": "value"
            },
            {
              "name": "type",
              "type": {
                "text": "InputType | undefined"
              },
              "fieldName": "type"
            },
            {
              "name": "name",
              "type": {
                "text": "String | undefined"
              },
              "fieldName": "name"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "readonly"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required"
            },
            {
              "name": "max",
              "type": {
                "text": "any | undefined"
              },
              "fieldName": "max"
            },
            {
              "name": "min",
              "type": {
                "text": "any | undefined"
              },
              "fieldName": "min"
            },
            {
              "name": "step",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "step"
            },
            {
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "checked"
            },
            {
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "indeterminate"
            },
            {
              "name": "maxLength",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "maxLength"
            },
            {
              "name": "minLength",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "minLength"
            },
            {
              "name": "rows",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "rows"
            },
            {
              "name": "cols",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "cols"
            },
            {
              "name": "multiple",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "multiple"
            },
            {
              "name": "pattern",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "pattern"
            },
            {
              "name": "placeHolder",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "placeHolder"
            },
            {
              "name": "options",
              "type": {
                "text": "any[] | any | undefined"
              },
              "fieldName": "options"
            },
            {
              "name": "autoSelect",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "autoSelect"
            },
            {
              "name": "searchProvider",
              "type": {
                "text": "(search?: string) => Promise<[any, string][]> | undefined"
              },
              "fieldName": "searchProvider"
            },
            {
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "icon"
            },
            {
              "name": "iconColor",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "iconColor"
            },
            {
              "name": "iconOn",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "iconOn"
            },
            {
              "name": "iconTrailing",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "iconTrailing"
            },
            {
              "name": "compact",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "compact"
            },
            {
              "name": "comfortable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "comfortable"
            },
            {
              "name": "raised",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "raised"
            },
            {
              "name": "action",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "action"
            },
            {
              "name": "unElevated",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "unElevated"
            },
            {
              "name": "outlined",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "outlined"
            },
            {
              "name": "rounded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "rounded"
            },
            {
              "name": "format",
              "type": {
                "text": "ValueFormat | undefined"
              },
              "fieldName": "format"
            },
            {
              "name": "disableSliderNumberInput",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disableSliderNumberInput"
            },
            {
              "name": "fullWidth",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "fullWidth"
            },
            {
              "name": "helperText",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "helperText"
            },
            {
              "name": "helperPersistent",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "helperPersistent"
            },
            {
              "name": "validationMessage",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "validationMessage"
            },
            {
              "name": "autoValidate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "autoValidate"
            },
            {
              "name": "charCounter",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "charCounter"
            },
            {
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "label"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "continuous",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "continuous"
            },
            {
              "name": "resizeVertical",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "resizeVertical"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-mwc-input",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrInputChangedEvent",
          "declaration": {
            "name": "OrInputChangedEvent",
            "module": "../or-mwc-components/src/or-mwc-input.ts"
          }
        },
        {
          "kind": "js",
          "name": "getValueHolderInputTemplateProvider",
          "declaration": {
            "name": "getValueHolderInputTemplateProvider",
            "module": "../or-mwc-components/src/or-mwc-input.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrMwcInput",
          "declaration": {
            "name": "OrMwcInput",
            "module": "../or-mwc-components/src/or-mwc-input.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-mwc-input",
          "declaration": {
            "name": "OrMwcInput",
            "module": "../or-mwc-components/src/or-mwc-input.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-mwc-components/src/or-mwc-list.d.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcListChangedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "static": true,
              "readonly": true,
              "default": "\"or-mwc-list-changed\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-mwc-components/src/or-mwc-list.d.ts"
          }
        },
        {
          "kind": "function",
          "name": "createListGroup",
          "return": {
            "type": {
              "text": "TemplateResult<1>"
            }
          },
          "parameters": [
            {
              "name": "lists",
              "type": {
                "text": "ListGroupItem[]"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getListTemplate",
          "return": {
            "type": {
              "text": "TemplateResult"
            }
          },
          "parameters": [
            {
              "name": "type",
              "type": {
                "text": "ListType"
              }
            },
            {
              "name": "content",
              "type": {
                "text": "TemplateResult"
              }
            },
            {
              "name": "isTwoLine",
              "optional": true,
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "role",
              "optional": true,
              "type": {
                "text": "string"
              }
            },
            {
              "name": "actionHandler",
              "optional": true,
              "type": {
                "text": "(ev: MDCListActionEvent) => void"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getItemTemplate",
          "return": {
            "type": {
              "text": "TemplateResult"
            }
          },
          "parameters": [
            {
              "name": "item",
              "type": {
                "text": "ListItem | null"
              }
            },
            {
              "name": "index",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "selectedValues",
              "type": {
                "text": "any[]"
              }
            },
            {
              "name": "type",
              "type": {
                "text": "ListType"
              }
            },
            {
              "name": "translate",
              "optional": true,
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "itemClickCallback",
              "optional": true,
              "type": {
                "text": "(e: MouseEvent, item: ListItem) => void"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcList",
          "members": [
            {
              "kind": "field",
              "name": "listItems",
              "type": {
                "text": "(ListItem | null)[] | undefined"
              }
            },
            {
              "kind": "field",
              "name": "values",
              "type": {
                "text": "string[] | string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "ListType"
              }
            },
            {
              "kind": "field",
              "name": "_wrapperElem",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_mdcElem",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_mdcComponent",
              "type": {
                "text": "MDCList | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "selectedItems",
              "type": {
                "text": "ListItem[]"
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "setSelectedItems",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "items",
                  "type": {
                    "text": "ListItem | ListItem[] | string | string[] | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onSelected",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "MDCListActionEvent"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-mwc-list",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MDCListActionEvent",
          "declaration": {
            "name": "MDCListActionEvent",
            "module": "../or-mwc-components/src/or-mwc-list.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrMwcListChangedEvent",
          "declaration": {
            "name": "OrMwcListChangedEvent",
            "module": "../or-mwc-components/src/or-mwc-list.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "createListGroup",
          "declaration": {
            "name": "createListGroup",
            "module": "../or-mwc-components/src/or-mwc-list.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "getListTemplate",
          "declaration": {
            "name": "getListTemplate",
            "module": "../or-mwc-components/src/or-mwc-list.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "getItemTemplate",
          "declaration": {
            "name": "getItemTemplate",
            "module": "../or-mwc-components/src/or-mwc-list.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrMwcList",
          "declaration": {
            "name": "OrMwcList",
            "module": "../or-mwc-components/src/or-mwc-list.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-mwc-components/src/or-mwc-list.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcListChangedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-mwc-list-changed\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-mwc-components/src/or-mwc-list.ts"
          }
        },
        {
          "kind": "function",
          "name": "createListGroup",
          "parameters": [
            {
              "name": "lists",
              "type": {
                "text": "ListGroupItem[]"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getListTemplate",
          "return": {
            "type": {
              "text": "TemplateResult"
            }
          },
          "parameters": [
            {
              "name": "type",
              "type": {
                "text": "ListType"
              }
            },
            {
              "name": "content",
              "type": {
                "text": "TemplateResult"
              }
            },
            {
              "name": "isTwoLine",
              "optional": true,
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "role",
              "optional": true,
              "type": {
                "text": "string"
              }
            },
            {
              "name": "actionHandler",
              "optional": true,
              "type": {
                "text": "(ev: MDCListActionEvent) => void"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getItemTemplate",
          "return": {
            "type": {
              "text": "TemplateResult"
            }
          },
          "parameters": [
            {
              "name": "item",
              "type": {
                "text": "ListItem | null"
              }
            },
            {
              "name": "index",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "selectedValues",
              "type": {
                "text": "any[]"
              }
            },
            {
              "name": "type",
              "type": {
                "text": "ListType"
              }
            },
            {
              "name": "translate",
              "optional": true,
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "itemClickCallback",
              "optional": true,
              "type": {
                "text": "(e: MouseEvent, item: ListItem) => void"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcList",
          "members": [
            {
              "kind": "field",
              "name": "listItems",
              "type": {
                "text": "(ListItem | null)[] | undefined"
              },
              "privacy": "public",
              "attribute": "listItems"
            },
            {
              "kind": "field",
              "name": "values",
              "type": {
                "text": "string[] | string | undefined"
              },
              "privacy": "public",
              "attribute": "values"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "ListType"
              },
              "privacy": "public",
              "attribute": "type"
            },
            {
              "kind": "field",
              "name": "_wrapperElem",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_mdcElem",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_mdcComponent",
              "type": {
                "text": "MDCList | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "selectedItems",
              "type": {
                "text": "ListItem[]"
              },
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "setSelectedItems",
              "privacy": "public",
              "parameters": [
                {
                  "name": "items",
                  "type": {
                    "text": "ListItem | ListItem[] | string | string[] | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onSelected",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "MDCListActionEvent"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "type": {
                "text": "OrMwcListChangedEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "listItems",
              "type": {
                "text": "(ListItem | null)[] | undefined"
              },
              "fieldName": "listItems"
            },
            {
              "name": "values",
              "type": {
                "text": "string[] | string | undefined"
              },
              "fieldName": "values"
            },
            {
              "name": "type",
              "type": {
                "text": "ListType"
              },
              "fieldName": "type"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-mwc-list",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MDCListActionEvent",
          "declaration": {
            "name": "MDCListActionEvent",
            "module": "../or-mwc-components/src/or-mwc-list.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrMwcListChangedEvent",
          "declaration": {
            "name": "OrMwcListChangedEvent",
            "module": "../or-mwc-components/src/or-mwc-list.ts"
          }
        },
        {
          "kind": "js",
          "name": "createListGroup",
          "declaration": {
            "name": "createListGroup",
            "module": "../or-mwc-components/src/or-mwc-list.ts"
          }
        },
        {
          "kind": "js",
          "name": "getListTemplate",
          "declaration": {
            "name": "getListTemplate",
            "module": "../or-mwc-components/src/or-mwc-list.ts"
          }
        },
        {
          "kind": "js",
          "name": "getItemTemplate",
          "declaration": {
            "name": "getItemTemplate",
            "module": "../or-mwc-components/src/or-mwc-list.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrMwcList",
          "declaration": {
            "name": "OrMwcList",
            "module": "../or-mwc-components/src/or-mwc-list.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-mwc-list",
          "declaration": {
            "name": "OrMwcList",
            "module": "../or-mwc-components/src/or-mwc-list.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-mwc-components/src/or-mwc-menu.d.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcMenuChangedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "static": true,
              "readonly": true,
              "default": "\"or-mwc-menu-changed\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-mwc-components/src/or-mwc-menu.d.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcMenuClosedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "static": true,
              "readonly": true,
              "default": "\"or-mwc-menu-closed\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-mwc-components/src/or-mwc-menu.d.ts"
          }
        },
        {
          "kind": "function",
          "name": "getContentWithMenuTemplate",
          "return": {
            "type": {
              "text": "TemplateResult"
            }
          },
          "parameters": [
            {
              "name": "content",
              "type": {
                "text": "TemplateResult"
              }
            },
            {
              "name": "menuItems",
              "type": {
                "text": "(ListItem | ListItem[] | null)[]"
              }
            },
            {
              "name": "selectedValues",
              "type": {
                "text": "string[] | string | undefined"
              }
            },
            {
              "name": "valueChangedCallback",
              "type": {
                "text": "(values: string[] | string) => void"
              }
            },
            {
              "name": "closedCallback",
              "optional": true,
              "type": {
                "text": "() => void"
              }
            },
            {
              "name": "multiSelect",
              "optional": true,
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "translateValues",
              "optional": true,
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "midHeight",
              "optional": true,
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "fullWidth",
              "optional": true,
              "type": {
                "text": "boolean"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcMenu",
          "members": [
            {
              "kind": "field",
              "name": "menuItems",
              "type": {
                "text": "(ListItem | ListItem[] | null)[] | undefined"
              }
            },
            {
              "kind": "field",
              "name": "values",
              "type": {
                "text": "any[] | any | undefined"
              }
            },
            {
              "kind": "field",
              "name": "multiSelect",
              "type": {
                "text": "boolean | undefined"
              }
            },
            {
              "kind": "field",
              "name": "visible",
              "type": {
                "text": "boolean | undefined"
              }
            },
            {
              "kind": "field",
              "name": "translateValues",
              "type": {
                "text": "boolean | undefined"
              }
            },
            {
              "kind": "field",
              "name": "midHeight",
              "type": {
                "text": "boolean | undefined"
              }
            },
            {
              "kind": "field",
              "name": "fullWidth",
              "type": {
                "text": "boolean | undefined"
              }
            },
            {
              "kind": "field",
              "name": "_wrapperElem",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_mdcElem",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_mdcComponent",
              "type": {
                "text": "MDCMenu | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "open",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "getItemsTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "parameters": [
                {
                  "name": "items",
                  "type": {
                    "text": "(ListItem | ListItem[] | null)[]"
                  }
                },
                {
                  "name": "translate",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onMenuClosed",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "_itemClicked",
              "privacy": "private"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-mwc-menu",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrMwcMenuChangedEvent",
          "declaration": {
            "name": "OrMwcMenuChangedEvent",
            "module": "../or-mwc-components/src/or-mwc-menu.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrMwcMenuClosedEvent",
          "declaration": {
            "name": "OrMwcMenuClosedEvent",
            "module": "../or-mwc-components/src/or-mwc-menu.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "getContentWithMenuTemplate",
          "declaration": {
            "name": "getContentWithMenuTemplate",
            "module": "../or-mwc-components/src/or-mwc-menu.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrMwcMenu",
          "declaration": {
            "name": "OrMwcMenu",
            "module": "../or-mwc-components/src/or-mwc-menu.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-mwc-components/src/or-mwc-menu.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcMenuChangedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-mwc-menu-changed\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-mwc-components/src/or-mwc-menu.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcMenuClosedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-mwc-menu-closed\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-mwc-components/src/or-mwc-menu.ts"
          }
        },
        {
          "kind": "function",
          "name": "getContentWithMenuTemplate",
          "return": {
            "type": {
              "text": "TemplateResult"
            }
          },
          "parameters": [
            {
              "name": "content",
              "type": {
                "text": "TemplateResult"
              }
            },
            {
              "name": "menuItems",
              "type": {
                "text": "(ListItem | ListItem[] | null)[]"
              }
            },
            {
              "name": "selectedValues",
              "type": {
                "text": "string[] | string | undefined"
              }
            },
            {
              "name": "valueChangedCallback",
              "type": {
                "text": "(values: string[] | string) => void"
              }
            },
            {
              "name": "closedCallback",
              "optional": true,
              "type": {
                "text": "() => void"
              }
            },
            {
              "name": "multiSelect",
              "default": "false"
            },
            {
              "name": "translateValues",
              "default": "true"
            },
            {
              "name": "midHeight",
              "default": "false"
            },
            {
              "name": "fullWidth",
              "default": "false"
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcMenu",
          "members": [
            {
              "kind": "field",
              "name": "menuItems",
              "type": {
                "text": "(ListItem | ListItem[] | null)[] | undefined"
              },
              "privacy": "public",
              "attribute": "menuItems"
            },
            {
              "kind": "field",
              "name": "values",
              "type": {
                "text": "any[] | any | undefined"
              },
              "privacy": "public",
              "attribute": "values"
            },
            {
              "kind": "field",
              "name": "multiSelect",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "attribute": "multiSelect"
            },
            {
              "kind": "field",
              "name": "visible",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "attribute": "visible"
            },
            {
              "kind": "field",
              "name": "translateValues",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "attribute": "translateValues"
            },
            {
              "kind": "field",
              "name": "midHeight",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "fullWidth",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "_wrapperElem",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_mdcElem",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_mdcComponent",
              "type": {
                "text": "MDCMenu | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "open",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "getItemsTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "parameters": [
                {
                  "name": "items",
                  "type": {
                    "text": "(ListItem | ListItem[] | null)[]"
                  }
                },
                {
                  "name": "translate",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onMenuClosed",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_itemClicked",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent"
                  }
                },
                {
                  "name": "item",
                  "type": {
                    "text": "ListItem"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "type": {
                "text": "OrMwcMenuClosedEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "menuItems",
              "type": {
                "text": "(ListItem | ListItem[] | null)[] | undefined"
              },
              "fieldName": "menuItems"
            },
            {
              "name": "values",
              "type": {
                "text": "any[] | any | undefined"
              },
              "fieldName": "values"
            },
            {
              "name": "multiSelect",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "multiSelect"
            },
            {
              "name": "visible",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "visible"
            },
            {
              "name": "translateValues",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "translateValues"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-mwc-menu",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrMwcMenuChangedEvent",
          "declaration": {
            "name": "OrMwcMenuChangedEvent",
            "module": "../or-mwc-components/src/or-mwc-menu.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrMwcMenuClosedEvent",
          "declaration": {
            "name": "OrMwcMenuClosedEvent",
            "module": "../or-mwc-components/src/or-mwc-menu.ts"
          }
        },
        {
          "kind": "js",
          "name": "getContentWithMenuTemplate",
          "declaration": {
            "name": "getContentWithMenuTemplate",
            "module": "../or-mwc-components/src/or-mwc-menu.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrMwcMenu",
          "declaration": {
            "name": "OrMwcMenu",
            "module": "../or-mwc-components/src/or-mwc-menu.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-mwc-menu",
          "declaration": {
            "name": "OrMwcMenu",
            "module": "../or-mwc-components/src/or-mwc-menu.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-mwc-components/src/or-mwc-snackbar.d.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcSnackbarChangedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "static": true,
              "readonly": true,
              "default": "\"or-mwc-snackbar-changed\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-mwc-components/src/or-mwc-snackbar.d.ts"
          }
        },
        {
          "kind": "function",
          "name": "showSnackbar",
          "return": {
            "type": {
              "text": "OrMwcSnackbar"
            }
          },
          "parameters": [
            {
              "name": "hostElement",
              "type": {
                "text": "HTMLElement | undefined"
              }
            },
            {
              "name": "text",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "buttonText",
              "optional": true,
              "type": {
                "text": "string"
              }
            },
            {
              "name": "buttonAction",
              "optional": true,
              "type": {
                "text": "() => void"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcSnackbar",
          "members": [
            {
              "kind": "field",
              "name": "DialogHostElement",
              "type": {
                "text": "HTMLElement"
              },
              "static": true,
              "description": "Can be set by apps to control where in the DOM snackbars are added"
            },
            {
              "kind": "field",
              "name": "text",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "buttonText",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "buttonAction",
              "type": {
                "text": "() => void | undefined"
              }
            },
            {
              "kind": "field",
              "name": "timeout",
              "type": {
                "text": "number | undefined"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "_mdcElem",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_mdcComponent",
              "type": {
                "text": "MDCSnackbar | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "isOpen",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "method",
              "name": "open",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "close",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "action",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onClose",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "reason",
                  "type": {
                    "text": "string | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onOpen",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "dispatchChangedEvent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "detail",
                  "type": {
                    "text": "OrMwcSnackbarChangedEventDetail"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-mwc-snackbar",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrMwcSnackbarChangedEvent",
          "declaration": {
            "name": "OrMwcSnackbarChangedEvent",
            "module": "../or-mwc-components/src/or-mwc-snackbar.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "showSnackbar",
          "declaration": {
            "name": "showSnackbar",
            "module": "../or-mwc-components/src/or-mwc-snackbar.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrMwcSnackbar",
          "declaration": {
            "name": "OrMwcSnackbar",
            "module": "../or-mwc-components/src/or-mwc-snackbar.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-mwc-components/src/or-mwc-snackbar.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcSnackbarChangedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-mwc-snackbar-changed\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-mwc-components/src/or-mwc-snackbar.ts"
          }
        },
        {
          "kind": "function",
          "name": "showSnackbar",
          "return": {
            "type": {
              "text": "OrMwcSnackbar"
            }
          },
          "parameters": [
            {
              "name": "hostElement",
              "type": {
                "text": "HTMLElement | undefined"
              }
            },
            {
              "name": "text",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "buttonText",
              "optional": true,
              "type": {
                "text": "string"
              }
            },
            {
              "name": "buttonAction",
              "optional": true,
              "type": {
                "text": "() => void"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcSnackbar",
          "members": [
            {
              "kind": "field",
              "name": "DialogHostElement",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "public",
              "static": true,
              "description": "Can be set by apps to control where in the DOM snackbars are added"
            },
            {
              "kind": "field",
              "name": "text",
              "type": {
                "text": "string"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "buttonText",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "buttonText"
            },
            {
              "kind": "field",
              "name": "buttonAction",
              "type": {
                "text": "() => void | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "timeout",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "attribute": "timeout"
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "_open"
            },
            {
              "kind": "field",
              "name": "_mdcElem",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_mdcComponent",
              "type": {
                "text": "MDCSnackbar | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "isOpen",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "open",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "close",
              "privacy": "public",
              "parameters": [
                {
                  "name": "action",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onClose",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "reason",
                  "type": {
                    "text": "string | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onOpen",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "dispatchChangedEvent",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "detail",
                  "type": {
                    "text": "OrMwcSnackbarChangedEventDetail"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "detail",
              "type": {
                "text": "OrMwcSnackbarChangedEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "buttonText",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "buttonText"
            },
            {
              "name": "timeout",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "timeout"
            },
            {
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "_open"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-mwc-snackbar",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrMwcSnackbarChangedEvent",
          "declaration": {
            "name": "OrMwcSnackbarChangedEvent",
            "module": "../or-mwc-components/src/or-mwc-snackbar.ts"
          }
        },
        {
          "kind": "js",
          "name": "showSnackbar",
          "declaration": {
            "name": "showSnackbar",
            "module": "../or-mwc-components/src/or-mwc-snackbar.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrMwcSnackbar",
          "declaration": {
            "name": "OrMwcSnackbar",
            "module": "../or-mwc-components/src/or-mwc-snackbar.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-mwc-snackbar",
          "declaration": {
            "name": "OrMwcSnackbar",
            "module": "../or-mwc-components/src/or-mwc-snackbar.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-mwc-components/src/or-mwc-table.d.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcTableRowClickEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "static": true,
              "readonly": true,
              "default": "\"or-mwc-table-row-click\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-mwc-components/src/or-mwc-table.d.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcTable",
          "members": [
            {
              "kind": "field",
              "name": "columns",
              "type": {
                "text": "TableColumn[] | string[] | undefined"
              }
            },
            {
              "kind": "field",
              "name": "columnsTemplate",
              "type": {
                "text": "TemplateResult | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "rows",
              "type": {
                "text": "TableRow[] | string[][] | undefined"
              }
            },
            {
              "kind": "field",
              "name": "rowsTemplate",
              "type": {
                "text": "TemplateResult | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "TableConfig"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "paginationIndex",
              "type": {
                "text": "number"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "paginationSize",
              "type": {
                "text": "number"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_dataTable",
              "type": {
                "text": "MDCDataTable | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "sortDirection",
              "type": {
                "text": "'ASC' | 'DESC' | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "sortIndex",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "selectedRows",
              "type": {
                "text": "TableRow[] | string[][] | any[] | undefined"
              }
            },
            {
              "kind": "field",
              "name": "indeterminate",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "allSelected",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "onRowClick",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "MouseEvent"
                  }
                },
                {
                  "name": "item",
                  "type": {
                    "text": "TableRow | string[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getSortHeader",
              "return": {
                "type": {
                  "text": "Promise<TemplateResult>"
                }
              },
              "parameters": [
                {
                  "name": "index",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "title",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "sortDirection",
                  "type": {
                    "text": "'ASC' | 'DESC'"
                  }
                },
                {
                  "name": "arrowOnLeft",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "sortRows",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "MouseEvent"
                  }
                },
                {
                  "name": "index",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "sortDirection",
                  "type": {
                    "text": "'ASC' | 'DESC'"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "customSort",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "a",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "b",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "index",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "sortDirection",
                  "type": {
                    "text": "'ASC' | 'DESC'"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onCheckChanged",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "checked",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "type",
                  "type": {
                    "text": "\"all\" | \"single\""
                  }
                },
                {
                  "name": "item",
                  "optional": true,
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getPaginationControls",
              "return": {
                "type": {
                  "text": "Promise<TemplateResult>"
                }
              }
            },
            {
              "kind": "method",
              "name": "getRowCount",
              "return": {
                "type": {
                  "text": "Promise<number>"
                }
              },
              "parameters": [
                {
                  "name": "wait",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "tableElem",
                  "optional": true,
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getTableElem",
              "return": {
                "type": {
                  "text": "Promise<HTMLElement | undefined>"
                }
              },
              "parameters": [
                {
                  "name": "wait",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-mwc-table",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrMwcTableRowClickEvent",
          "declaration": {
            "name": "OrMwcTableRowClickEvent",
            "module": "../or-mwc-components/src/or-mwc-table.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrMwcTable",
          "declaration": {
            "name": "OrMwcTable",
            "module": "../or-mwc-components/src/or-mwc-table.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-mwc-components/src/or-mwc-table.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcTableRowClickEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-mwc-table-row-click\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-mwc-components/src/or-mwc-table.ts"
          }
        },
        {
          "kind": "class",
          "description": "# Material Table\r\n### `<or-mwc-table>` - `OrMwcTable`\r\n\r\nTable component using Material Design 2 (v9.0.0); See [documentation](https://github.com/material-components/material-components-web/tree/v9.0.0/packages/mdc-data-table) here. <br />",
          "name": "OrMwcTable",
          "members": [
            {
              "kind": "field",
              "name": "columns",
              "type": {
                "text": "TableColumn[] | string[] | undefined"
              },
              "privacy": "public",
              "attribute": "columns"
            },
            {
              "kind": "field",
              "name": "columnsTemplate",
              "type": {
                "text": "TemplateResult | undefined"
              },
              "privacy": "protected",
              "attribute": "columnsTemplate"
            },
            {
              "kind": "field",
              "name": "rows",
              "type": {
                "text": "TableRow[] | string[][] | undefined"
              },
              "privacy": "public",
              "attribute": "rows"
            },
            {
              "kind": "field",
              "name": "rowsTemplate",
              "type": {
                "text": "TemplateResult | undefined"
              },
              "privacy": "protected",
              "attribute": "rowsTemplate"
            },
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "TableConfig"
              },
              "privacy": "protected",
              "default": "{ columnFilter: [], stickyFirstColumn: true, fullHeight: false, pagination: { enable: false } }",
              "attribute": "config"
            },
            {
              "kind": "field",
              "name": "paginationIndex",
              "type": {
                "text": "number"
              },
              "privacy": "protected",
              "default": "0",
              "attribute": "paginationIndex"
            },
            {
              "kind": "field",
              "name": "paginationSize",
              "type": {
                "text": "number"
              },
              "privacy": "protected",
              "default": "10",
              "attribute": "paginationSize"
            },
            {
              "kind": "field",
              "name": "_dataTable",
              "type": {
                "text": "MDCDataTable | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "sortDirection",
              "type": {
                "text": "'ASC' | 'DESC' | undefined"
              },
              "privacy": "protected",
              "default": "'ASC'",
              "attribute": "sortDirection"
            },
            {
              "kind": "field",
              "name": "sortIndex",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "protected",
              "default": "-1",
              "attribute": "sortIndex"
            },
            {
              "kind": "field",
              "name": "selectedRows",
              "type": {
                "text": "TableRow[] | string[][] | any[] | undefined"
              },
              "privacy": "public",
              "default": "[]",
              "attribute": "selectedRows"
            },
            {
              "kind": "field",
              "name": "indeterminate",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "protected",
              "default": "false",
              "attribute": "indeterminate"
            },
            {
              "kind": "field",
              "name": "allSelected",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "protected",
              "default": "false",
              "attribute": "allSelected"
            },
            {
              "kind": "method",
              "name": "onRowClick",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "MouseEvent"
                  }
                },
                {
                  "name": "item",
                  "type": {
                    "text": "TableRow | string[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getSortHeader",
              "return": {
                "type": {
                  "text": "Promise<TemplateResult>"
                }
              },
              "parameters": [
                {
                  "name": "index",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "title",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "sortDirection",
                  "type": {
                    "text": "'ASC' | 'DESC'"
                  }
                },
                {
                  "name": "arrowOnLeft",
                  "default": "false"
                }
              ]
            },
            {
              "kind": "method",
              "name": "sortRows",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "MouseEvent"
                  }
                },
                {
                  "name": "index",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "sortDirection",
                  "type": {
                    "text": "'ASC' | 'DESC'"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "customSort",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "a",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "b",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "index",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "sortDirection",
                  "type": {
                    "text": "'ASC' | 'DESC'"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onCheckChanged",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "checked",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "type",
                  "type": {
                    "text": "\"all\" | \"single\""
                  }
                },
                {
                  "name": "item",
                  "optional": true,
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getPaginationControls",
              "return": {
                "type": {
                  "text": "Promise<TemplateResult>"
                }
              }
            },
            {
              "kind": "method",
              "name": "getRowCount",
              "return": {
                "type": {
                  "text": "Promise<number>"
                }
              },
              "parameters": [
                {
                  "name": "wait",
                  "default": "true",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "tableElem",
                  "optional": true,
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getTableElem",
              "return": {
                "type": {
                  "text": "Promise<HTMLElement | undefined>"
                }
              },
              "parameters": [
                {
                  "name": "wait",
                  "default": "false",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "type": {
                "text": "OrMwcTableRowClickEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "columns",
              "type": {
                "text": "TableColumn[] | string[] | undefined"
              },
              "fieldName": "columns"
            },
            {
              "name": "columnsTemplate",
              "type": {
                "text": "TemplateResult | undefined"
              },
              "fieldName": "columnsTemplate"
            },
            {
              "name": "rows",
              "type": {
                "text": "TableRow[] | string[][] | undefined"
              },
              "fieldName": "rows"
            },
            {
              "name": "rowsTemplate",
              "type": {
                "text": "TemplateResult | undefined"
              },
              "fieldName": "rowsTemplate"
            },
            {
              "name": "config",
              "type": {
                "text": "TableConfig"
              },
              "default": "{ columnFilter: [], stickyFirstColumn: true, fullHeight: false, pagination: { enable: false } }",
              "fieldName": "config"
            },
            {
              "name": "paginationIndex",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "paginationIndex"
            },
            {
              "name": "paginationSize",
              "type": {
                "text": "number"
              },
              "default": "10",
              "fieldName": "paginationSize"
            },
            {
              "name": "sortDirection",
              "type": {
                "text": "'ASC' | 'DESC' | undefined"
              },
              "default": "'ASC'",
              "fieldName": "sortDirection"
            },
            {
              "name": "sortIndex",
              "type": {
                "text": "number | undefined"
              },
              "default": "-1",
              "fieldName": "sortIndex"
            },
            {
              "name": "selectedRows",
              "type": {
                "text": "TableRow[] | string[][] | any[] | undefined"
              },
              "default": "[]",
              "fieldName": "selectedRows"
            },
            {
              "name": "indeterminate",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "fieldName": "indeterminate"
            },
            {
              "name": "allSelected",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "fieldName": "allSelected"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-mwc-table",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrMwcTableRowClickEvent",
          "declaration": {
            "name": "OrMwcTableRowClickEvent",
            "module": "../or-mwc-components/src/or-mwc-table.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrMwcTable",
          "declaration": {
            "name": "OrMwcTable",
            "module": "../or-mwc-components/src/or-mwc-table.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-mwc-table",
          "declaration": {
            "name": "OrMwcTable",
            "module": "../or-mwc-components/src/or-mwc-table.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-mwc-components/src/or-mwc-tabs.d.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcTabs",
          "members": [
            {
              "kind": "field",
              "name": "index",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "items",
              "type": {
                "text": "OrMwcTabItem[] | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "iconPosition",
              "type": {
                "text": "\"left\" | \"top\" | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "noScroll",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "bgColor",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "color",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "mdcTabBar",
              "privacy": "private"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-mwc-tabs",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrMwcTabs",
          "declaration": {
            "name": "OrMwcTabs",
            "module": "../or-mwc-components/src/or-mwc-tabs.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-mwc-components/src/or-mwc-tabs.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcTabs",
          "members": [
            {
              "kind": "field",
              "name": "index",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "protected",
              "attribute": "index"
            },
            {
              "kind": "field",
              "name": "items",
              "type": {
                "text": "OrMwcTabItem[] | undefined"
              },
              "privacy": "protected",
              "attribute": "items"
            },
            {
              "kind": "field",
              "name": "iconPosition",
              "type": {
                "text": "\"left\" | \"top\" | undefined"
              },
              "privacy": "protected",
              "attribute": "iconPosition"
            },
            {
              "kind": "field",
              "name": "noScroll",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "protected",
              "attribute": "noScroll"
            },
            {
              "kind": "field",
              "name": "bgColor",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected",
              "attribute": "bgColor"
            },
            {
              "kind": "field",
              "name": "color",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected",
              "attribute": "color"
            },
            {
              "kind": "field",
              "name": "mdcTabBar",
              "type": {
                "text": "MDCTabBar | undefined"
              },
              "privacy": "private"
            }
          ],
          "events": [
            {
              "name": "activated",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "index",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "index"
            },
            {
              "name": "items",
              "type": {
                "text": "OrMwcTabItem[] | undefined"
              },
              "fieldName": "items"
            },
            {
              "name": "iconPosition",
              "type": {
                "text": "\"left\" | \"top\" | undefined"
              },
              "fieldName": "iconPosition"
            },
            {
              "name": "noScroll",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "noScroll"
            },
            {
              "name": "bgColor",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "bgColor"
            },
            {
              "name": "color",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "color"
            },
            {
              "name": "styles",
              "readonly": true,
              "fieldName": "styles"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-mwc-tabs",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrMwcTabs",
          "declaration": {
            "name": "OrMwcTabs",
            "module": "../or-mwc-components/src/or-mwc-tabs.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-mwc-tabs",
          "declaration": {
            "name": "OrMwcTabs",
            "module": "../or-mwc-components/src/or-mwc-tabs.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-mwc-components/src/style.d.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "progressCircular",
          "type": {
            "text": "import(\"lit\").CSSResult"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "progressCircular",
          "declaration": {
            "name": "progressCircular",
            "module": "../or-mwc-components/src/style.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-mwc-components/src/style.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "progressCircular",
          "default": "css` /* https://codepen.io/finnhvman/pen/bmNdNr */ .pure-material-progress-circular { -webkit-appearance: none; -moz-appearance: none; appearance: none; box-sizing: border-box; border: none; border-radius: 50%; padding: 0.25em; width: 3em; height: 3em; color: var(--or-app-color4, ${unsafeCSS(DefaultColor4)}); background-color: transparent; font-size: 16px; overflow: hidden; } .pure-material-progress-circular::-webkit-progress-bar { background-color: transparent; } /* Indeterminate */ .pure-material-progress-circular:indeterminate { -webkit-mask-image: linear-gradient(transparent 50%, black 50%), linear-gradient(to right, transparent 50%, black 50%); mask-image: linear-gradient(transparent 50%, black 50%), linear-gradient(to right, transparent 50%, black 50%); animation: pure-material-progress-circular 6s infinite cubic-bezier(0.3, 0.6, 1, 1); } :-ms-lang(x), .pure-material-progress-circular:indeterminate { animation: none; } .pure-material-progress-circular:indeterminate::before, .pure-material-progress-circular:indeterminate::-webkit-progress-value { content: \"\"; display: block; box-sizing: border-box; margin-bottom: 0.25em; border: solid 0.25em transparent; border-top-color: currentColor; border-radius: 50%; width: 100% !important; height: 100%; background-color: transparent; animation: pure-material-progress-circular-pseudo 0.75s infinite linear alternate; } .pure-material-progress-circular:indeterminate::-moz-progress-bar { box-sizing: border-box; border: solid 0.25em transparent; border-top-color: currentColor; border-radius: 50%; width: 100%; height: 100%; background-color: transparent; animation: pure-material-progress-circular-pseudo 0.75s infinite linear alternate; } .pure-material-progress-circular:indeterminate::-ms-fill { animation-name: -ms-ring; } @keyframes pure-material-progress-circular { 0% { transform: rotate(0deg); } 12.5% { transform: rotate(180deg); animation-timing-function: linear; } 25% { transform: rotate(630deg); } 37.5% { transform: rotate(810deg); animation-timing-function: linear; } 50% { transform: rotate(1260deg); } 62.5% { transform: rotate(1440deg); animation-timing-function: linear; } 75% { transform: rotate(1890deg); } 87.5% { transform: rotate(2070deg); animation-timing-function: linear; } 100% { transform: rotate(2520deg); } } @keyframes pure-material-progress-circular-pseudo { 0% { transform: rotate(-30deg); } 29.4% { border-left-color: transparent; } 29.41% { border-left-color: currentColor; } 64.7% { border-bottom-color: transparent; } 64.71% { border-bottom-color: currentColor; } 100% { border-left-color: currentColor; border-bottom-color: currentColor; transform: rotate(225deg); } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "progressCircular",
          "declaration": {
            "name": "progressCircular",
            "module": "../or-mwc-components/src/style.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-translate/src/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "# Translate\r\n### `<or-translate>` - `OrTranslate`\r\n\r\nUtility component that dynamically translates the value attribute using the [i18next](https://www.i18next.com) library. <br />\r\nUseful throughout web apps, as it automatically responds to language changes.\r\n\r\nBased on the selected language in cache, it will look up the `/locales` folder with the `or.json` file, and translate by key. <br />\r\nLocation of the translation folder;\r\n- **OR Manager:** `/manager/src/web/shared/locales/<lang>/app.json`\r\n- **Custom projects:** `/ui/app/<your app>/locales/<lang>/app.json`\r\n\r\nThe HTML content is a simple text, with no <span> or similar wrapper.",
          "name": "OrTranslate",
          "members": [
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "options",
              "type": {
                "text": "TOptions<InitOptions> | undefined"
              },
              "privacy": "public",
              "attribute": "options"
            },
            {
              "kind": "method",
              "name": "_getTranslatedValue",
              "privacy": "protected"
            }
          ],
          "attributes": [
            {
              "name": "value",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "value"
            },
            {
              "name": "options",
              "type": {
                "text": "TOptions<InitOptions> | undefined"
              },
              "fieldName": "options"
            }
          ],
          "mixins": [
            {
              "name": "translate(i18next)",
              "module": "../or-translate/src/index.ts"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-translate",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "i18next",
          "declaration": {
            "name": "i18next",
            "module": "../or-translate/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "translate",
          "declaration": {
            "name": "translate",
            "module": "../or-translate/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrTranslate",
          "declaration": {
            "name": "OrTranslate",
            "module": "../or-translate/src/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-translate",
          "declaration": {
            "name": "OrTranslate",
            "module": "../or-translate/src/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-translate/src/translate-mixin.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "translate",
          "parameters": [
            {
              "name": "i18next",
              "type": {
                "text": "i18n"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "translate",
          "declaration": {
            "name": "translate",
            "module": "../or-translate/src/translate-mixin.ts"
          }
        }
      ]
    }
  ]
}
