{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "../or-app/src/app.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "{updatePage, updateDrawer, scrollToTop, updateRealm, setOffline, setVisibility}"
        },
        {
          "kind": "variable",
          "name": "appReducer"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "{updatePage, updateDrawer, scrollToTop, updateRealm, setOffline, setVisibility}",
          "declaration": {
            "name": "{updatePage, updateDrawer, scrollToTop, updateRealm, setOffline, setVisibility}",
            "module": "../or-app/src/app.ts"
          }
        },
        {
          "kind": "js",
          "name": "appReducer",
          "declaration": {
            "name": "appReducer",
            "module": "../or-app/src/app.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-app/src/index.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "DefaultLogo"
        },
        {
          "kind": "variable",
          "name": "DefaultMobileLogo"
        },
        {
          "kind": "variable",
          "name": "DefaultFavIcon"
        },
        {
          "kind": "function",
          "name": "getDefaultManagerConfig"
        },
        {
          "kind": "class",
          "description": "# App\r\n### `<or-app>` - `OrApp`\r\n\r\nWrapper for OpenRemote web apps, that includes initialization of the Manager API (HTTP and WS), <br />\r\nstore management using [Redux](https://redux.js.org), and processing the `manager_config.json` file.\r\n\r\n**Warning:** Should not be initialized using `<or-app>` HTML tag, but using the `OrApp` constructor.",
          "name": "OrApp",
          "members": [
            {
              "kind": "field",
              "name": "OFFLINE_PAGE_ID",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "default": "\"offline-page\""
            },
            {
              "kind": "field",
              "name": "appConfig",
              "type": {
                "text": "AppConfig<S> | undefined"
              },
              "privacy": "public",
              "description": "App configuration JSON object to set up the pages, header items, and languages.\r\nYou can use the RealmAppConfig field to adjust these options per realm.",
              "attribute": "appConfig"
            },
            {
              "kind": "field",
              "name": "appConfigProvider",
              "type": {
                "text": "(manager: Manager) => AppConfig<S> | undefined"
              },
              "privacy": "public",
              "description": "Callback function that overrides the appConfig attribute.\r\nThis is preferred sometimes to dynamically adjust the config."
            },
            {
              "kind": "field",
              "name": "managerConfig",
              "type": {
                "text": "ManagerConfig | undefined"
              },
              "privacy": "public",
              "description": "Manager config JSON object for adjusting deployment-targeted options such as managerUrl, realm, mapType, autoLogin etc.",
              "attribute": "managerConfig"
            },
            {
              "kind": "field",
              "name": "_mainElem",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_initialised",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_page",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_config",
              "type": {
                "text": "RealmAppConfig"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_realm",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_offline",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_showOfflineFallback",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_activeMenu",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_onEvent",
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_onVisibilityChanged",
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_realms",
              "type": {
                "text": "Realm[]"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_offlineFallbackDeferred",
              "type": {
                "text": "Util.Deferred<void> | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_store",
              "type": {
                "text": "Store<S, AnyAction>"
              },
              "privacy": "protected",
              "default": "store"
            },
            {
              "kind": "field",
              "name": "_storeUnsubscribe",
              "type": {
                "text": "Unsubscribe"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "getState",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "S"
                }
              }
            },
            {
              "kind": "method",
              "name": "_handleVisibilityChange",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "stateChanged",
              "privacy": "public",
              "parameters": [
                {
                  "name": "state",
                  "type": {
                    "text": "AppStateKeyed"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleEvent",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "OREvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_startOfflineFallbackTimer",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "force",
                  "default": "false"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_completeOfflineFallbackTimer",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "aborted",
                  "default": "false"
                }
              ]
            },
            {
              "kind": "method",
              "name": "logout",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "setLanguage",
              "privacy": "public",
              "parameters": [
                {
                  "name": "lang",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "showLanguageModal",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "doAppConfigInit",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "doBasicLogin",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "PromiseLike<BasicLoginResult>"
                }
              },
              "parameters": [
                {
                  "name": "username",
                  "type": {
                    "text": "string | undefined"
                  }
                },
                {
                  "name": "password",
                  "type": {
                    "text": "string | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_loadPage",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<Page<any>>"
                }
              },
              "parameters": [
                {
                  "name": "pageProvider",
                  "type": {
                    "text": "PageProvider<any>"
                  },
                  "description": "The PageProvider function to load as a new pager"
                },
                {
                  "name": "beforeLoad",
                  "optional": true,
                  "type": {
                    "text": "(page: Page<any>) => (Promise<void> | void)"
                  },
                  "description": "An async callback useful for adjusting the page before it is appended to the page"
                }
              ],
              "description": "Internal function used for initializing the page using a PageProvider function,\r\nAfter the web component is created, we will append it as a child to the HTML using the _mainElem container."
            },
            {
              "kind": "method",
              "name": "_unloadPage",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "page",
                  "optional": true,
                  "type": {
                    "text": "Page<any>"
                  },
                  "description": "The {@link Page}to unload\r\n     * "
                }
              ],
              "description": "Unloads the page from the `<amin>` element.\r\nBy default, it unloads the existing / current Page."
            },
            {
              "kind": "method",
              "name": "updateWindowTitle",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_getConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "RealmAppConfig"
                }
              }
            },
            {
              "kind": "field",
              "name": "DialogHostElement",
              "default": "this"
            }
          ],
          "attributes": [
            {
              "name": "appConfig",
              "type": {
                "text": "AppConfig<S> | undefined"
              },
              "description": "App configuration JSON object to set up the pages, header items, and languages.\r\nYou can use the RealmAppConfig field to adjust these options per realm.",
              "fieldName": "appConfig"
            },
            {
              "name": "managerConfig",
              "type": {
                "text": "ManagerConfig | undefined"
              },
              "description": "Manager config JSON object for adjusting deployment-targeted options such as managerUrl, realm, mapType, autoLogin etc.",
              "fieldName": "managerConfig"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-app",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DefaultLogo",
          "declaration": {
            "name": "DefaultLogo",
            "module": "../or-app/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "DefaultMobileLogo",
          "declaration": {
            "name": "DefaultMobileLogo",
            "module": "../or-app/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "DefaultFavIcon",
          "declaration": {
            "name": "DefaultFavIcon",
            "module": "../or-app/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "AnyAction",
          "declaration": {
            "name": "AnyAction",
            "module": "../or-app/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./app\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./or-header\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./types\""
          }
        },
        {
          "kind": "js",
          "name": "HeaderConfig",
          "declaration": {
            "name": "HeaderConfig",
            "module": "../or-app/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "DEFAULT_LANGUAGES",
          "declaration": {
            "name": "DEFAULT_LANGUAGES",
            "module": "../or-app/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "getDefaultManagerConfig",
          "declaration": {
            "name": "getDefaultManagerConfig",
            "module": "../or-app/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrApp",
          "declaration": {
            "name": "OrApp",
            "module": "../or-app/src/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-app",
          "declaration": {
            "name": "OrApp",
            "module": "../or-app/src/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-app/src/or-header.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrHeader",
          "members": [
            {
              "kind": "field",
              "name": "realms",
              "type": {
                "text": "Realm[]"
              },
              "privacy": "public",
              "attribute": "realms"
            },
            {
              "kind": "field",
              "name": "realm",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "realm"
            },
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "Store<AppStateKeyed, AnyAction>"
              },
              "privacy": "public",
              "attribute": "store"
            },
            {
              "kind": "field",
              "name": "logo",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "logo"
            },
            {
              "kind": "field",
              "name": "logoMobile",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "logoMobile"
            },
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "HeaderConfig | undefined"
              },
              "privacy": "public",
              "attribute": "config"
            },
            {
              "kind": "field",
              "name": "_mobileBottomDiv",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "activeMenu",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "activeMenu"
            },
            {
              "kind": "field",
              "name": "_drawerOpened",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "alarmButton",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "'bell-outline'"
            },
            {
              "kind": "field",
              "name": "alarmColor",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "'--or-app-color3, ${unsafeCSS(DefaultColor3)}'"
            },
            {
              "kind": "field",
              "name": "_eventSubscriptionId",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_onRealmSelect",
              "privacy": "public",
              "parameters": [
                {
                  "name": "realm",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_subscribeEvents",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_unsubscribeEvents",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_getRealmMenu",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "parameters": [
                {
                  "name": "callback",
                  "type": {
                    "text": "(realm: string) => void"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getAlarmButton",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_onSecondaryMenuSelect",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onHeaderItemSelect",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "headerItem",
                  "type": {
                    "text": "HeaderItem"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_closeDrawer",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_toggleDrawer",
              "privacy": "protected"
            }
          ],
          "attributes": [
            {
              "name": "realms",
              "type": {
                "text": "Realm[]"
              },
              "fieldName": "realms"
            },
            {
              "name": "realm",
              "type": {
                "text": "string"
              },
              "fieldName": "realm"
            },
            {
              "name": "store",
              "type": {
                "text": "Store<AppStateKeyed, AnyAction>"
              },
              "fieldName": "store"
            },
            {
              "name": "logo",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "logo"
            },
            {
              "name": "logoMobile",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "logoMobile"
            },
            {
              "name": "config",
              "type": {
                "text": "HeaderConfig | undefined"
              },
              "fieldName": "config"
            },
            {
              "name": "activeMenu",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "activeMenu"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-header",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DEFAULT_LANGUAGES",
          "declaration": {
            "name": "DEFAULT_LANGUAGES",
            "module": "../or-app/src/or-header.ts"
          }
        },
        {
          "kind": "js",
          "name": "Languages",
          "declaration": {
            "name": "Languages",
            "module": "../or-app/src/or-header.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrHeader",
          "declaration": {
            "name": "OrHeader",
            "module": "../or-app/src/or-header.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-header",
          "declaration": {
            "name": "OrHeader",
            "module": "../or-app/src/or-header.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-app/src/page-offline.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "pageOfflineProvider",
          "return": {
            "type": {
              "text": "PageProvider<AppStateKeyed>"
            }
          },
          "parameters": [
            {
              "name": "store",
              "type": {
                "text": "Store<AppStateKeyed>"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "PageOffline",
          "members": [
            {
              "kind": "method",
              "name": "stateChanged",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "state",
                  "type": {
                    "text": "AppStateKeyed"
                  }
                }
              ],
              "privacy": "public",
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            },
            {
              "kind": "field",
              "name": "_store",
              "type": {
                "text": "Store<S, AnyAction>"
              },
              "privacy": "protected",
              "default": "store",
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            },
            {
              "kind": "field",
              "name": "_storeUnsubscribe",
              "type": {
                "text": "Unsubscribe"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            },
            {
              "kind": "field",
              "name": "onRefresh",
              "type": {
                "text": "() => void | undefined"
              },
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            },
            {
              "kind": "method",
              "name": "getState",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "S"
                }
              },
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            }
          ],
          "superclass": {
            "name": "Page",
            "module": "/or-app/src/types"
          },
          "tagName": "page-offline",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "pageOfflineProvider",
          "declaration": {
            "name": "pageOfflineProvider",
            "module": "../or-app/src/page-offline.ts"
          }
        },
        {
          "kind": "js",
          "name": "PageOffline",
          "declaration": {
            "name": "PageOffline",
            "module": "../or-app/src/page-offline.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "page-offline",
          "declaration": {
            "name": "PageOffline",
            "module": "../or-app/src/page-offline.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-app/src/types.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "router",
          "default": "new Navigo(\"/\", {hash: true})"
        },
        {
          "kind": "class",
          "description": "",
          "name": "Page",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_store",
              "type": {
                "text": "Store<S, AnyAction>"
              },
              "privacy": "protected",
              "default": "store"
            },
            {
              "kind": "field",
              "name": "_storeUnsubscribe",
              "type": {
                "text": "Unsubscribe"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "onRefresh",
              "type": {
                "text": "() => void | undefined"
              }
            },
            {
              "kind": "method",
              "name": "getState",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "S"
                }
              }
            },
            {
              "kind": "method",
              "name": "stateChanged",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "state",
                  "type": {
                    "text": "S"
                  }
                }
              ]
            }
          ],
          "mixins": [
            {
              "name": "translate(i18next)",
              "module": "../or-app/src/types.ts"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "router",
          "declaration": {
            "name": "router",
            "module": "../or-app/src/types.ts"
          }
        },
        {
          "kind": "js",
          "name": "Page",
          "declaration": {
            "name": "Page",
            "module": "../or-app/src/types.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-asset-tree/src/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrAssetTreeRequestSelectionEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-asset-tree-request-selection\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAssetTreeSelectionEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-asset-tree-selection\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAssetTreeChangeParentEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-asset-tree-change-parent\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAssetTreeToggleExpandEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-asset-tree-expand\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAssetTreeRequestAddEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-asset-tree-request-add\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAssetTreeAddEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-asset-tree-add\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAssetTreeRequestDeleteEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-asset-tree-request-delete\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAssetTreeAssetEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-asset-tree-asset-event\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAssetTreeFilter",
          "members": [
            {
              "kind": "field",
              "name": "asset",
              "type": {
                "text": "string | undefined"
              },
              "default": "undefined"
            },
            {
              "kind": "field",
              "name": "assetType",
              "type": {
                "text": "string[]"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "attribute",
              "type": {
                "text": "string[]"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "attributeValue",
              "type": {
                "text": "string[]"
              },
              "default": "[]"
            }
          ]
        },
        {
          "kind": "function",
          "name": "getAssetTypes"
        },
        {
          "kind": "class",
          "description": "# Asset Tree\r\n### `<or-asset-tree>` - `OrAssetTree`\r\n\r\nLists assets in a visual hierarchy tree, including search and filtering functionality.\r\n\r\n**Important:** Requires OpenRemote JS initialization.",
          "name": "OrAssetTree",
          "members": [
            {
              "kind": "field",
              "name": "assets",
              "type": {
                "text": "Asset[] | undefined"
              },
              "privacy": "public",
              "description": "Allows arbitrary assets to be displayed using a tree",
              "attribute": "assets"
            },
            {
              "kind": "field",
              "name": "assetInfos",
              "type": {
                "text": "AssetTypeInfo[] | undefined"
              },
              "privacy": "public",
              "attribute": "assetInfos"
            },
            {
              "kind": "field",
              "name": "_assetIdsOverride",
              "type": {
                "text": "string[] | undefined"
              },
              "privacy": "public",
              "attribute": "_assetIdsOverride"
            },
            {
              "kind": "field",
              "name": "rootAssets",
              "type": {
                "text": "Asset[] | undefined"
              },
              "privacy": "public",
              "attribute": "rootAssets"
            },
            {
              "kind": "field",
              "name": "rootAssetIds",
              "type": {
                "text": "string[] | undefined"
              },
              "privacy": "public",
              "attribute": "rootAssetIds"
            },
            {
              "kind": "field",
              "name": "dataProvider",
              "type": {
                "text": "() => Promise<Asset[]> | undefined"
              },
              "privacy": "public",
              "attribute": "dataProvider"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "readonly"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "disableSubscribe",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "disableSubscribe"
            },
            {
              "kind": "field",
              "name": "selectedIds",
              "type": {
                "text": "string[] | undefined"
              },
              "privacy": "public",
              "attribute": "selectedIds"
            },
            {
              "kind": "field",
              "name": "showDeselectBtn",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "default": "true",
              "attribute": "showDeselectBtn"
            },
            {
              "kind": "field",
              "name": "showSortBtn",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "default": "true",
              "attribute": "showSortBtn"
            },
            {
              "kind": "field",
              "name": "showFilter",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "attribute": "showFilter"
            },
            {
              "kind": "field",
              "name": "sortBy",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "default": "\"name\"",
              "attribute": "sortBy"
            },
            {
              "kind": "field",
              "name": "expandAllNodes",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "expandAllNodes"
            },
            {
              "kind": "field",
              "name": "expandedIds",
              "type": {
                "text": "string[] | undefined"
              },
              "privacy": "public",
              "default": "[]",
              "attribute": "expandedIds"
            },
            {
              "kind": "field",
              "name": "checkboxes",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "checkboxes"
            },
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "AssetTreeConfig | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_nodes",
              "type": {
                "text": "UiAssetTreeNode[] | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_loading",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_connected",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_selectedNodes",
              "type": {
                "text": "UiAssetTreeNode[]"
              },
              "privacy": "protected",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "_expandedNodes",
              "type": {
                "text": "UiAssetTreeNode[]"
              },
              "privacy": "protected",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "_initCallback",
              "type": {
                "text": "EventCallback | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_filter",
              "type": {
                "text": "OrAssetTreeFilter"
              },
              "privacy": "protected",
              "default": "new OrAssetTreeFilter()"
            },
            {
              "kind": "field",
              "name": "_searchInputTimer",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "protected",
              "default": "undefined"
            },
            {
              "kind": "field",
              "name": "_clearIconContainer",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_filterInput",
              "type": {
                "text": "OrMwcInput"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_filterSettingOpen",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_assetTypes",
              "type": {
                "text": "AssetDescriptor[]"
              },
              "privacy": "protected",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "_attributeNameFilter",
              "type": {
                "text": "OrMwcInput"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_attributeValueFilter",
              "type": {
                "text": "OrMwcInput"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_assetTypeFilter",
              "type": {
                "text": "string"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_uniqueAssetTypes",
              "type": {
                "text": "string[]"
              },
              "privacy": "protected",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "_dragDropParentId",
              "type": {
                "text": "string | null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "_expandTimer",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "protected",
              "default": "undefined"
            },
            {
              "kind": "field",
              "name": "_latestSelected",
              "type": {
                "text": "UiAssetTreeNode | undefined"
              },
              "privacy": "private",
              "default": "undefined"
            },
            {
              "kind": "field",
              "name": "assetsChildren",
              "type": {
                "text": "any"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "selectedNodes",
              "type": {
                "text": "UiAssetTreeNode[]"
              },
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "refresh",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "isAncestorSelected",
              "privacy": "public",
              "parameters": [
                {
                  "name": "node",
                  "type": {
                    "text": "UiAssetTreeNode"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "mapDescriptors",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "ListItem[]"
                }
              },
              "parameters": [
                {
                  "name": "descriptors",
                  "type": {
                    "text": "(AssetDescriptor)[]"
                  }
                },
                {
                  "name": "withNoneValue",
                  "optional": true,
                  "type": {
                    "text": "ListItem"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getSelectHeader",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "getSelectedHeader",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "parameters": [
                {
                  "name": "descriptor",
                  "type": {
                    "text": "AssetDescriptor"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "assetTypeSelect",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "atLeastOneNodeToBeShown",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "_isReadonly",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_updateSelectedNodes",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_updateSort",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "nodes",
                  "type": {
                    "text": "UiAssetTreeNode[]"
                  }
                },
                {
                  "name": "sortFunction",
                  "type": {
                    "text": "(a: UiAssetTreeNode, b: UiAssetTreeNode) => number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_toggleExpander",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "expander",
                  "type": {
                    "text": "HTMLElement"
                  }
                },
                {
                  "name": "node",
                  "type": {
                    "text": "UiAssetTreeNode | null"
                  }
                },
                {
                  "name": "silent",
                  "default": "false",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_buildPaths",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "node",
                  "type": {
                    "text": "UiAssetTreeNode"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_findNode",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "UiAssetTreeNode | undefined"
                }
              },
              "parameters": [
                {
                  "name": "n",
                  "type": {
                    "text": "UiAssetTreeNode"
                  }
                },
                {
                  "name": "assetId",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_findNodeFromAssetId",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "UiAssetTreeNode | undefined"
                }
              },
              "parameters": [
                {
                  "name": "assetId",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onNodeClicked",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "evt",
                  "type": {
                    "text": "MouseEvent | null"
                  }
                },
                {
                  "name": "node",
                  "type": {
                    "text": "UiAssetTreeNode | null"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onDeselectClicked",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "parseFromInputFilter",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OrAssetTreeFilter"
                }
              },
              "parameters": [
                {
                  "name": "inputValue",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "formatFilter",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "newFilter",
                  "type": {
                    "text": "OrAssetTreeFilter"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_shouldEnableAttrTypeEvent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_shouldEnableAttrType",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "applySettingFields",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OrAssetTreeFilter"
                }
              },
              "parameters": [
                {
                  "name": "filter",
                  "type": {
                    "text": "OrAssetTreeFilter"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_filterFromSettings",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_onFilterInputEvent",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onFilterInput",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "newValue",
                  "type": {
                    "text": "string | undefined"
                  }
                },
                {
                  "name": "force",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_doFiltering",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "getMatcher",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<((asset: Asset) => boolean)>"
                }
              },
              "parameters": [
                {
                  "name": "requireQuery",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getSimpleNameMatcher",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<((asset: Asset) => boolean)>"
                }
              }
            },
            {
              "kind": "method",
              "name": "getMatcherFromQuery",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<((asset: Asset) => boolean)>"
                }
              }
            },
            {
              "kind": "method",
              "name": "isAnyFilter",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "filterTreeNode",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "currentNode",
                  "type": {
                    "text": "UiAssetTreeNode"
                  }
                },
                {
                  "name": "matcher",
                  "type": {
                    "text": "(asset: Asset) => boolean"
                  }
                },
                {
                  "name": "parentMatching",
                  "default": "false",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onCopyClicked",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_onAddClicked",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_gatewayDescendantIsSelected",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "_onDeleteClicked",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_onSortClicked",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "sortBy",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_doDelete",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_canAdd",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "_getAllowedChildTypes",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "AssetDescriptor[]"
                }
              },
              "parameters": [
                {
                  "name": "selectedNode",
                  "type": {
                    "text": "UiAssetTreeNode | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getSortFunction",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "(a: UiAssetTreeNode, b: UiAssetTreeNode) => number"
                }
              }
            },
            {
              "kind": "method",
              "name": "_loadAssets",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_addEventSubscriptions",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "method",
              "name": "onEventsConnect",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "onEventsDisconnect",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "getNodes",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "UiAssetTreeNode[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "_onEvent",
              "privacy": "public",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "SharedEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_buildTreeNodes",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "assets",
                  "type": {
                    "text": "Asset[]"
                  }
                },
                {
                  "name": "sortFunction",
                  "type": {
                    "text": "(a: UiAssetTreeNode, b: UiAssetTreeNode) => number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_buildChildTreeNodes",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "treeNode",
                  "type": {
                    "text": "UiAssetTreeNode"
                  }
                },
                {
                  "name": "assets",
                  "type": {
                    "text": "AssetWithReparentId[]"
                  }
                },
                {
                  "name": "sortFunction",
                  "type": {
                    "text": "(a: UiAssetTreeNode, b: UiAssetTreeNode) => number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onDragStart",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onDragEnd",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "isExpandable",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "assetId",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onDragOver",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "expandNode",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "assetId",
                  "type": {
                    "text": "string | null"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onDragEnter",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onDragLeave",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_treeNodeTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | string | undefined"
                }
              },
              "parameters": [
                {
                  "name": "treeNode",
                  "type": {
                    "text": "UiAssetTreeNode"
                  }
                },
                {
                  "name": "level",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_forEachNodeRecursive",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "nodes",
                  "type": {
                    "text": "UiAssetTreeNode[]"
                  }
                },
                {
                  "name": "fn",
                  "type": {
                    "text": "(node: UiAssetTreeNode) => void"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "type": {
                "text": "OrAssetTreeSelectionEvent"
              }
            },
            {
              "name": "assetEvent",
              "type": {
                "text": "OrAssetTreeAssetEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "assets",
              "type": {
                "text": "Asset[] | undefined"
              },
              "description": "Allows arbitrary assets to be displayed using a tree",
              "fieldName": "assets"
            },
            {
              "name": "assetInfos",
              "type": {
                "text": "AssetTypeInfo[] | undefined"
              },
              "fieldName": "assetInfos"
            },
            {
              "name": "_assetIdsOverride",
              "type": {
                "text": "string[] | undefined"
              },
              "fieldName": "_assetIdsOverride"
            },
            {
              "name": "rootAssets",
              "type": {
                "text": "Asset[] | undefined"
              },
              "fieldName": "rootAssets"
            },
            {
              "name": "rootAssetIds",
              "type": {
                "text": "string[] | undefined"
              },
              "fieldName": "rootAssetIds"
            },
            {
              "name": "dataProvider",
              "type": {
                "text": "() => Promise<Asset[]> | undefined"
              },
              "fieldName": "dataProvider"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "readonly"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "disableSubscribe",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disableSubscribe"
            },
            {
              "name": "selectedIds",
              "type": {
                "text": "string[] | undefined"
              },
              "fieldName": "selectedIds"
            },
            {
              "name": "showDeselectBtn",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "true",
              "fieldName": "showDeselectBtn"
            },
            {
              "name": "showSortBtn",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "true",
              "fieldName": "showSortBtn"
            },
            {
              "name": "showFilter",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "fieldName": "showFilter"
            },
            {
              "name": "sortBy",
              "type": {
                "text": "string | undefined"
              },
              "default": "\"name\"",
              "fieldName": "sortBy"
            },
            {
              "name": "expandAllNodes",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "fieldName": "expandAllNodes"
            },
            {
              "name": "expandedIds",
              "type": {
                "text": "string[] | undefined"
              },
              "default": "[]",
              "fieldName": "expandedIds"
            },
            {
              "name": "checkboxes",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "fieldName": "checkboxes"
            }
          ],
          "mixins": [
            {
              "name": "subscribe(manager)",
              "module": "../or-asset-tree/src/index.ts"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-asset-tree",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetTreeRequestSelectionEvent",
          "declaration": {
            "name": "OrAssetTreeRequestSelectionEvent",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetTreeSelectionEvent",
          "declaration": {
            "name": "OrAssetTreeSelectionEvent",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetTreeChangeParentEvent",
          "declaration": {
            "name": "OrAssetTreeChangeParentEvent",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetTreeToggleExpandEvent",
          "declaration": {
            "name": "OrAssetTreeToggleExpandEvent",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetTreeRequestAddEvent",
          "declaration": {
            "name": "OrAssetTreeRequestAddEvent",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetTreeAddEvent",
          "declaration": {
            "name": "OrAssetTreeAddEvent",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetTreeRequestDeleteEvent",
          "declaration": {
            "name": "OrAssetTreeRequestDeleteEvent",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetTreeAssetEvent",
          "declaration": {
            "name": "OrAssetTreeAssetEvent",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetTreeFilter",
          "declaration": {
            "name": "OrAssetTreeFilter",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "getAssetTypes",
          "declaration": {
            "name": "getAssetTypes",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetTree",
          "declaration": {
            "name": "OrAssetTree",
            "module": "../or-asset-tree/src/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-asset-tree",
          "declaration": {
            "name": "OrAssetTree",
            "module": "../or-asset-tree/src/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-asset-tree/src/or-add-asset-dialog.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrAddChangedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-add-asset-changed\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-asset-tree/src/or-add-asset-dialog.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAddAssetDialog",
          "members": [
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "AssetTreeConfig"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "agentTypes",
              "type": {
                "text": "AgentDescriptor[]"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "assetTypes",
              "type": {
                "text": "AssetDescriptor[]"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "parent",
              "type": {
                "text": "Asset | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "selectedType",
              "type": {
                "text": "AgentDescriptor | AssetDescriptor | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "selectedAttributes",
              "type": {
                "text": "AttributeDescriptor[]"
              },
              "privacy": "public",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "showParentAssetSelector",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "selectedChildAssetType",
              "type": {
                "text": "string"
              },
              "default": "\"\""
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "\"New Asset\""
            },
            {
              "kind": "field",
              "name": "nameInput",
              "type": {
                "text": "OrMwcInput"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "agentList",
              "type": {
                "text": "OrMwcList | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "assetList",
              "type": {
                "text": "OrMwcList | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "parentAssetList",
              "type": {
                "text": "OrMwcList | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "getTypeTemplate",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "descriptor",
                  "type": {
                    "text": "AgentDescriptor | AssetDescriptor"
                  }
                },
                {
                  "name": "parentStr",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onNameChanged",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onTypeChanged",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "isAgent",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "listItem",
                  "type": {
                    "text": "ListItem"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onModified",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_onToggleParentAssetSelector",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_onDeselectClicked",
              "privacy": "protected"
            }
          ],
          "events": [
            {
              "type": {
                "text": "OrAddChangedEvent"
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-add-asset-dialog",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrAddChangedEvent",
          "declaration": {
            "name": "OrAddChangedEvent",
            "module": "../or-asset-tree/src/or-add-asset-dialog.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAddAssetDialog",
          "declaration": {
            "name": "OrAddAssetDialog",
            "module": "../or-asset-tree/src/or-add-asset-dialog.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-add-asset-dialog",
          "declaration": {
            "name": "OrAddAssetDialog",
            "module": "../or-asset-tree/src/or-add-asset-dialog.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-asset-tree/src/style.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css` :host { --internal-or-asset-tree-header-color: var(--or-asset-tree-header-color, var(--or-app-color4, ${unsafeCSS(DefaultColor4)})); --internal-or-asset-tree-header-text-color: var(--or-asset-tree-header-text-color, var(--or-app-color8, ${unsafeCSS(DefaultColor8)})); --internal-or-asset-tree-header-menu-background-color: var(--or-asset-tree-header-menu-background-color, var(--internal-or-asset-tree-header-text-color)); --internal-or-asset-tree-header-menu-text-color: var(--or-asset-tree-header-menu-text-color, inherit); --internal-or-asset-tree-header-height: var(--or-asset-tree-header-height, 48px); --internal-or-asset-tree-background-color: var(--or-asset-tree-background-color, var(--or-app-color1, ${unsafeCSS(DefaultColor1)})); --internal-or-asset-tree-text-color: var(--or-asset-tree-text-color, inherit); --internal-or-asset-tree-item-height: var(--or-asset-tree-item-height, 24px); --internal-or-asset-tree-item-padding: var(--or-asset-tree-item-padding, 10px); --internal-or-asset-tree-selected-background-color: var(--or-asset-tree-selected-background-color, var(--or-app-color2, ${unsafeCSS(DefaultColor2)})); --internal-or-asset-tree-selected-color: var(--or-asset-tree-selected-color, var(--or-app-color4, ${unsafeCSS(DefaultColor4)})); --internal-or-asset-tree-button-color: var(--or-asset-tree-button-color, var(--or-app-color4, ${unsafeCSS(DefaultColor4)})); --internal-or-asset-tree-line-color: var(--or-asset-tree-line-color, var(--or-app-color5, ${unsafeCSS(DefaultColor5)})); display: flex; flex-direction: column; height: 100%; width: 100%; background-color: var(--internal-or-asset-tree-background-color); } *[hidden] { display: none; } button { background-color: var(--internal-or-asset-tree-button-color); color: var(--internal-or-asset-tree-background-color); --or-icon-width: 20px; --or-icon-height: 20px; --or-icon-fill: var(--internal-or-asset-tree-background-color); border: none; padding: 0 6px; display: inline-block; cursor: pointer; opacity: 0.8; } button:focus, button:hover { outline: 0; opacity: 1; } #header { background-color: var(--internal-or-asset-tree-header-color); display: flex; align-items: center; width: 100%; height: var(--internal-or-asset-tree-header-height); border-bottom: 1px solid ${unsafeCSS(DefaultColor5)}; z-index: 1000; line-height: var(--internal-or-asset-tree-header-height); color: var(--internal-or-asset-tree-header-text-color); --or-icon-fill: var(--internal-or-asset-tree-header-text-color); } #title-container { flex: 1 0 auto; flex-direction: row; text-transform: capitalize; padding-left: 15px; } #title { font-weight: 500; font-size: 16px; } #realm-picker { outline: none; margin-left: 5px; text-transform: none; font-size: 14px; } #header-btns { display: flex; flex-direction: row; padding-right: 5px; } #list-container { flex: 1 1 auto; overflow: auto; font-size: 14px; } #list { margin: 0; color: var(--internal-or-asset-tree-text-color); padding: 0; } #list, ol { list-style-type: none; } li ol { padding: 0; } #list li:not([data-expanded]) > ol { display: none; } #list li[data-selected] > .node-container, #list li > .node-container:hover { background-color: var(--internal-or-asset-tree-selected-background-color); } #list li[data-selected] > .node-container { border-left-color: var(--internal-or-asset-tree-selected-color); } .asset-list-element .over { background-color: ${unsafeCSS(DefaultColor5)}; } .in-between-element { position: relative; height: 2px; } .in-between-element.over { padding: 5px 0; margin: -5px 0; } .end-element { height: 44px; } .node-container { display: flex; border-left: 4px solid transparent; user-select: none; cursor: pointer; height: var(--internal-or-asset-tree-item-height); line-height: var(--internal-or-asset-tree-item-height); padding-top: var(--internal-or-asset-tree-item-padding); padding-bottom: var(--internal-or-asset-tree-item-padding); } .node-container > * { flex: 0 0 auto; } .expander { width: 36px; height: 100%; display: inline-block; background-repeat: no-repeat; background-size: 18px; background-position: center; margin-left: -4px; border-left: 4px solid transparent; } .expander[data-expandable] { background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' fill='rgb(204, 204, 204)' viewBox='0 0 24 24'%3E%3Cpath d='${unsafeCSS(mdiChevronRight)}'/%3E%3C/svg%3E\"); } .expander[data-expandable]:hover { background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'%3E%3Cpath d='${unsafeCSS(mdiChevronRight)}'/%3E%3C/svg%3E\"); } li[data-expanded] > .node-container .expander { background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'%3E%3Cpath d='${unsafeCSS(mdiChevronDown)}'/%3E%3C/svg%3E\") !important; } .node-name { margin: -4px 0; flex: 1 0 auto; display: flex; align-items: center; } .node-name > span { vertical-align: middle; } .node-name > or-icon { --or-icon-width: 18px; --or-icon-height: 18px; margin-right: 8px; } #loading { flex: 1 0 auto; display: inline-flex; align-items: center; text-align: center; margin: 0 auto; font-size: 14px; } @media only screen and (min-width: 768px){ .expander { width: 26px; } } .mdc-list-item__graphic { margin-left: auto; display: flex; margin-right: 5px; } .mdc-checkbox { display: flex; height: 100%; align-items: center; } .mdc-checkbox or-icon { height: 15px; width: auto; color: var(--internal-or-asset-tree-line-color); } .mdc-checkbox or-icon.mdc-checkbox--parent { height: 17px; } .mdc-checkbox or-icon[icon=\"checkbox-marked\"], .mdc-checkbox or-icon[icon=\"checkbox-multiple-marked\"], .mdc-checkbox or-icon[icon=\"checkbox-multiple-marked-outline\"] { color: var(--internal-or-asset-tree-selected-color); } #asset-tree-filter { display: flex; align-items: center; position: relative; background-color: var(--internal-or-asset-tree-selected-background-color); } #filterInput { padding: 7px 12px 7px 7px; } #filterAssetTypeDownIcon { width: 16px; height: 16px; position: absolute; right: 20px; padding-right: 14px; cursor: pointer; } #filterSettingsIcon { cursor: pointer; margin-right: 12px; } #asset-tree-filter-setting { position: absolute; background-color: var(--internal-or-asset-tree-background-color); top: calc(var(--internal-or-asset-tree-header-height) + var(--internal-or-header-height, 50px) - 1px); display: none; width: 300px; z-index: 100; box-shadow: rgb(0 0 0 / 21%) 0px 1px 3px 0px; box-sizing: border-box; padding: 10px; } #asset-tree-filter-setting .advanced-filter { display: flex; flex-direction: column; } #asset-tree-filter-setting.visible { display: block; } .filterAssetType { display: flex; align-items: center; } #clearIconContainer.visible { display: block; } #noAssetsFound { flex: 1 0 auto; display: inline-flex; align-items: center; text-align: center; margin: 0 auto; font-size: 14px; } .filterMatching { color: #808080; } .draggable { cursor: pointer; } .draggable:active[draggable=\"true\"] { cursor: grabbing; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "../or-asset-tree/src/style.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-asset-viewer/src/index.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "getIncludedProperties",
          "return": {
            "type": {
              "text": "string[]"
            }
          },
          "parameters": [
            {
              "name": "config",
              "optional": true,
              "type": {
                "text": "InfoPanelConfig"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getIncludedAttributes",
          "return": {
            "type": {
              "text": "Attribute<any>[]"
            }
          },
          "parameters": [
            {
              "name": "attributes",
              "type": {
                "text": "{ [index: string]: Attribute<any> }"
              }
            },
            {
              "name": "config",
              "optional": true,
              "type": {
                "text": "InfoPanelConfig"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAssetViewerComputeGridEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-asset-viewer-compute-grid-event\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAssetViewerRequestSaveEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-asset-viewer-request-save\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAssetViewerSaveEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-asset-viewer-save\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAssetViewerRequestEditToggleEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-asset-viewer-request-edit-toggle\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAssetViewerEditToggleEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-asset-viewer-edit-toggle\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAssetViewerLoadUserEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-asset-viewer-load-user-event\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAssetViewerLoadAlarmEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-asset-viewer-load-alarm-event\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "function",
          "name": "getPanel",
          "parameters": [
            {
              "name": "id",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "panelConfig",
              "type": {
                "text": "PanelConfig"
              }
            },
            {
              "name": "content",
              "type": {
                "text": "TemplateResult | undefined"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getAttributeTemplate",
          "return": {
            "type": {
              "text": "TemplateResult"
            }
          },
          "parameters": [
            {
              "name": "asset",
              "type": {
                "text": "Asset"
              }
            },
            {
              "name": "attribute",
              "type": {
                "text": "Attribute<any>"
              }
            },
            {
              "name": "hostElement",
              "type": {
                "text": "LitElement"
              }
            },
            {
              "name": "viewerConfig",
              "type": {
                "text": "AssetViewerConfig"
              }
            },
            {
              "name": "panelConfig",
              "type": {
                "text": "PanelConfig"
              }
            },
            {
              "name": "itemConfig",
              "type": {
                "text": "InfoPanelItemConfig"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getPropertyTemplate",
          "parameters": [
            {
              "name": "asset",
              "type": {
                "text": "Asset"
              }
            },
            {
              "name": "property",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "hostElement",
              "type": {
                "text": "LitElement"
              }
            },
            {
              "name": "viewerConfig",
              "type": {
                "text": "AssetViewerConfig | undefined"
              }
            },
            {
              "name": "panelConfig",
              "type": {
                "text": "PanelConfig | undefined"
              }
            },
            {
              "name": "itemConfig",
              "type": {
                "text": "InfoPanelItemConfig"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getField",
          "return": {
            "type": {
              "text": "TemplateResult"
            }
          },
          "parameters": [
            {
              "name": "name",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "itemConfig",
              "optional": true,
              "type": {
                "text": "InfoPanelItemConfig"
              }
            },
            {
              "name": "content",
              "optional": true,
              "type": {
                "text": "TemplateResult"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "saveAsset",
          "return": {
            "type": {
              "text": "Promise<SaveResult>"
            }
          },
          "parameters": [
            {
              "name": "asset",
              "type": {
                "text": "Asset"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "DEFAULT_ASSET_PROPERTIES",
          "type": {
            "text": "array"
          },
          "default": "[ \"name\", \"createdOn\", \"type\", \"parentId\", \"accessPublicRead\" ]"
        },
        {
          "kind": "variable",
          "name": "DEFAULT_VIEWER_CONFIG",
          "type": {
            "text": "AssetViewerConfig"
          },
          "default": "{ viewerStyles: {}, panels: [ { type: \"group\", title: \"underlyingAssets\" }, { type: \"info\", hideOnMobile: true, properties: { include:[] }, attributes: { include: [\"notes\", \"manufacturer\", \"model\"] } }, { title: \"attributes\", type: \"info\", properties: { include:[] }, attributes: { exclude: [\"location\", \"notes\", \"manufacturer\", \"model\"] } }, { type: \"setup\", hideOnMobile: false }, { title: \"location\", type: \"info\", column: 1, properties: { include:[] }, attributes: { include: [\"location\"], itemConfig: { location: { label: \"\", readonly: true } } } }, { type: \"history\", column: 1 }, { type: \"linkedUsers\", column: 1 }, { type: \"alarm.linkedAlarms\", column: 1, hideOnMobile: true } ] }"
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAssetViewer",
          "members": [
            {
              "kind": "field",
              "name": "asset",
              "type": {
                "text": "Asset | undefined"
              },
              "privacy": "public",
              "attribute": "asset"
            },
            {
              "kind": "field",
              "name": "assetId",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "assetId"
            },
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "ViewerConfig | undefined"
              },
              "privacy": "public",
              "attribute": "config"
            },
            {
              "kind": "field",
              "name": "editMode",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "attribute": "editMode"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "attribute": "readonly"
            },
            {
              "kind": "field",
              "name": "_assetInfo",
              "type": {
                "text": "AssetInfo | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_validationResults",
              "type": {
                "text": "ValidatorResult[]"
              },
              "privacy": "protected",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "wrapperElem",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "saveBtnElem",
              "type": {
                "text": "OrMwcInput"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "editBtnElem",
              "type": {
                "text": "OrMwcInput"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "editor",
              "type": {
                "text": "OrEditAssetPanel"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "headerElem",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "containerElem",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_saveInProgress",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "method",
              "name": "isModified",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "langChangedCallback",
              "description": "When language is changed, we clear the cached templates,\r\nso can be rendered differently according to the selected language."
            },
            {
              "kind": "method",
              "name": "loadAssetInfo",
              "return": {
                "type": {
                  "text": "Promise<AssetInfo>"
                }
              },
              "parameters": [
                {
                  "name": "asset",
                  "type": {
                    "text": "Asset"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_doValidation",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_toggleHeaderShadow",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_isReadonly",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_onEditToggleClicked",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "edit",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_doEditToggle",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "edit",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onSaveClicked",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "save"
            },
            {
              "kind": "method",
              "name": "_onAssetModified",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "validationResults",
                  "type": {
                    "text": "ValidatorResult[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onEvent",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "SharedEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getPanelConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "AssetViewerConfig"
                }
              },
              "parameters": [
                {
                  "name": "asset",
                  "type": {
                    "text": "Asset"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "edit",
              "type": {
                "text": "OrAssetViewerEditToggleEvent"
              }
            },
            {
              "name": "saveResult",
              "type": {
                "text": "OrAssetViewerSaveEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "asset",
              "type": {
                "text": "Asset | undefined"
              },
              "fieldName": "asset"
            },
            {
              "name": "assetId",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "assetId"
            },
            {
              "name": "config",
              "type": {
                "text": "ViewerConfig | undefined"
              },
              "fieldName": "config"
            },
            {
              "name": "editMode",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "editMode"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "readonly"
            }
          ],
          "mixins": [
            {
              "name": "subscribe(manager)",
              "module": "../or-asset-viewer/src/index.ts"
            },
            {
              "name": "translate(i18next)",
              "module": "../or-asset-viewer/src/index.ts"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-asset-viewer",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getIncludedProperties",
          "declaration": {
            "name": "getIncludedProperties",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "getIncludedAttributes",
          "declaration": {
            "name": "getIncludedAttributes",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetViewerComputeGridEvent",
          "declaration": {
            "name": "OrAssetViewerComputeGridEvent",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetViewerRequestSaveEvent",
          "declaration": {
            "name": "OrAssetViewerRequestSaveEvent",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetViewerSaveEvent",
          "declaration": {
            "name": "OrAssetViewerSaveEvent",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetViewerRequestEditToggleEvent",
          "declaration": {
            "name": "OrAssetViewerRequestEditToggleEvent",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetViewerEditToggleEvent",
          "declaration": {
            "name": "OrAssetViewerEditToggleEvent",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetViewerLoadUserEvent",
          "declaration": {
            "name": "OrAssetViewerLoadUserEvent",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetViewerLoadAlarmEvent",
          "declaration": {
            "name": "OrAssetViewerLoadAlarmEvent",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "getPanel",
          "declaration": {
            "name": "getPanel",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "getAttributeTemplate",
          "declaration": {
            "name": "getAttributeTemplate",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "getPropertyTemplate",
          "declaration": {
            "name": "getPropertyTemplate",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "getField",
          "declaration": {
            "name": "getField",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "saveAsset",
          "declaration": {
            "name": "saveAsset",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "DEFAULT_ASSET_PROPERTIES",
          "declaration": {
            "name": "DEFAULT_ASSET_PROPERTIES",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "DEFAULT_VIEWER_CONFIG",
          "declaration": {
            "name": "DEFAULT_VIEWER_CONFIG",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetViewer",
          "declaration": {
            "name": "OrAssetViewer",
            "module": "../or-asset-viewer/src/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-asset-viewer",
          "declaration": {
            "name": "OrAssetViewer",
            "module": "../or-asset-viewer/src/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-asset-viewer/src/or-add-attribute-panel.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrAddAttributePanelAttributeChangedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-add-attribute-panel-attribute-changed\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-asset-viewer/src/or-add-attribute-panel.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAddAttributePanel",
          "members": [
            {
              "kind": "field",
              "name": "asset",
              "type": {
                "text": "Asset"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "attribute",
              "type": {
                "text": "Attribute<any>"
              },
              "privacy": "protected",
              "default": "{}"
            },
            {
              "kind": "field",
              "name": "isCustom",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "attribute": "isCustom"
            },
            {
              "kind": "field",
              "name": "isArray",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "isArray"
            },
            {
              "kind": "field",
              "name": "arrayDimensions",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "1",
              "attribute": "arrayDimensions"
            },
            {
              "kind": "field",
              "name": "arrayInput",
              "type": {
                "text": "OrMwcInput"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "customAttribute",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "true"
            },
            {
              "kind": "field",
              "name": "attributeTypes",
              "type": {
                "text": "[string, string][] | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "attributeValueTypes",
              "type": {
                "text": "[string, string][] | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "arrayRegex",
              "type": {
                "text": "RegExp"
              },
              "privacy": "protected",
              "default": "/\\[\\]/g"
            },
            {
              "kind": "method",
              "name": "onTypeChanged",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onNameChanged",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onValueTypeChanged",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "valueType",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onArrayChanged",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "array",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "dimensions",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "updateAttributeType",
              "privacy": "protected"
            }
          ],
          "events": [
            {
              "type": {
                "text": "OrAddAttributePanelAttributeChangedEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "isCustom",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "isCustom"
            },
            {
              "name": "isArray",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "isArray"
            },
            {
              "name": "arrayDimensions",
              "type": {
                "text": "number"
              },
              "default": "1",
              "fieldName": "arrayDimensions"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-add-attribute-panel",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrAddAttributePanelAttributeChangedEvent",
          "declaration": {
            "name": "OrAddAttributePanelAttributeChangedEvent",
            "module": "../or-asset-viewer/src/or-add-attribute-panel.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAddAttributePanel",
          "declaration": {
            "name": "OrAddAttributePanel",
            "module": "../or-asset-viewer/src/or-add-attribute-panel.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-add-attribute-panel",
          "declaration": {
            "name": "OrAddAttributePanel",
            "module": "../or-asset-viewer/src/or-add-attribute-panel.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-asset-viewer/src/or-edit-asset-panel.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrEditAssetModifiedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-edit-asset-modified\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-asset-viewer/src/or-edit-asset-panel.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrEditAssetPanel",
          "members": [
            {
              "kind": "field",
              "name": "asset",
              "type": {
                "text": "Asset"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "attributeTemplatesAndValidators",
              "type": {
                "text": "TemplateAndValidator[]"
              },
              "privacy": "protected",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "changedAttributes",
              "type": {
                "text": "string[]"
              },
              "privacy": "protected",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "expandedAll",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "method",
              "name": "attributeUpdated",
              "privacy": "public",
              "parameters": [
                {
                  "name": "attributeName",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getAttributeTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateAndValidator"
                }
              },
              "parameters": [
                {
                  "name": "assetType",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "attribute",
                  "type": {
                    "text": "Attribute<any>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onModified",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "ValidatorResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "_onAttributeModified",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "attribute",
                  "type": {
                    "text": "Attribute<any>"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onMetaItemModified",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "attribute",
                  "type": {
                    "text": "Attribute<any>"
                  }
                },
                {
                  "name": "metaItem",
                  "type": {
                    "text": "NameValueHolder<any>"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "OrInputChangedEventDetail | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getMetaItemTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateAndValidator"
                }
              },
              "parameters": [
                {
                  "name": "attribute",
                  "type": {
                    "text": "Attribute<any>"
                  }
                },
                {
                  "name": "metaItem",
                  "type": {
                    "text": "NameValueHolder<any>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_addAttribute",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_addMetaItems",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "attribute",
                  "type": {
                    "text": "Attribute<any>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getParentTemplate",
              "privacy": "protected"
            }
          ],
          "events": [
            {
              "type": {
                "text": "OrEditAssetModifiedEvent"
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-edit-asset-panel",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrEditAssetModifiedEvent",
          "declaration": {
            "name": "OrEditAssetModifiedEvent",
            "module": "../or-asset-viewer/src/or-edit-asset-panel.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrEditAssetPanel",
          "declaration": {
            "name": "OrEditAssetPanel",
            "module": "../or-asset-viewer/src/or-edit-asset-panel.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-edit-asset-panel",
          "declaration": {
            "name": "OrEditAssetPanel",
            "module": "../or-asset-viewer/src/or-edit-asset-panel.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-asset-viewer/src/style.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "panelStyles",
          "default": "css` .panelContainer { flex: 1 1 50%; box-sizing: border-box; min-width: 400px; padding: 0 5px; } .panel { background-color: var(--internal-or-asset-viewer-panel-color); border: 1px solid #e5e5e5; border-radius: 5px; position: relative; margin: 0 0 10px 0; } .panel-content-wrapper { padding: var(--internal-or-asset-viewer-panel-padding); } .panel-content > :first-child { margin-top: 0; } .panel-content > :last-child { margin-bottom: 0; } .panel-content { display: flex; flex-wrap: wrap; } .panel-title { text-transform: uppercase; font-weight: bolder; line-height: 1em; color: var(--internal-or-asset-viewer-title-text-color); margin-bottom: 20px; flex: 0 0 auto; letter-spacing: 0.025em; } .field { margin: 10px 0; width: 100%; flex: 0 0 auto; } .field > * { width: 100%; box-sizing: border-box; } @media screen and (max-width: 767px) { .panel { border-radius: 0; border-right: none; border-left: none; flex-basis: 100%; min-width: 360px; } } #linkedUsers-panel { min-height: 200px; } `"
        },
        {
          "kind": "variable",
          "name": "style",
          "default": "css` :host { --internal-or-asset-viewer-background-color: var(--or-asset-viewer-background-color, var(--or-app-color2, ${unsafeCSS(DefaultColor2)})); --internal-or-asset-viewer-panel-margin: var(--or-asset-viewer-panel-margin, 20px); --internal-or-asset-viewer-panel-padding: var(--or-asset-viewer-panel-padding, 24px); --internal-or-asset-viewer-text-color: var(--or-asset-viewer-text-color, var(--or-app-color3, ${unsafeCSS(DefaultColor3)})); --internal-or-asset-viewer-title-text-color: var(--or-asset-viewer-title-text-color, var(--or-app-color3, ${unsafeCSS(DefaultColor3)})); --internal-or-asset-viewer-panel-color: var(--or-asset-viewer-panel-color, var(--or-app-color1, ${unsafeCSS(DefaultColor1)})); --internal-or-asset-viewer-line-color: var(--or-asset-viewer-line-color, var(--or-app-color5, ${unsafeCSS(DefaultColor5)})); --internal-or-asset-viewer-button-color: var(--or-asset-viewer-button-color, var(--or-app-color4, ${unsafeCSS(DefaultColor4)})); --internal-or-asset-viewer-error-color: var(--or-asset-viewer-error-color, var(--or-app-color6, ${unsafeCSS(DefaultColor6)})); --internal-or-header-height: var(--or-header-height, ${unsafeCSS(DefaultHeaderHeight)}); height: 100%; width: 100%; background-color: var(--internal-or-asset-viewer-background-color); } *[hidden] { display: none; } #wrapper { height: 100%; width: 100%; display: flex; flex-direction: column; } #wrapper.saving { opacity: 0.5; pointer-events: none; } #view-container, #edit-container { flex: 0 1 auto; overflow: auto; } #view-container { flex: 1; margin-top: 0; box-sizing: border-box; display: flex; flex-direction: row; flex-wrap: wrap; width: 100%; padding: 0 15px 15px; -webkit-animation: fadein 0.3s; /* Safari, Chrome and Opera > 12.1 */ -moz-animation: fadein 0.3s; /* Firefox < 16 */ -ms-animation: fadein 0.3s; /* Internet Explorer */ -o-animation: fadein 0.3s; /* Opera < 12.1 */ animation: fadein 0.3s; } #edit-container { padding: 10px 20px 0; } #name-input { width: 300px; } @keyframes fadein { from { opacity: 0; } to { opacity: 1; } } /* Firefox < 16 */ @-moz-keyframes fadein { from { opacity: 0; } to { opacity: 1; } } /* Safari, Chrome and Opera > 12.1 */ @-webkit-keyframes fadein { from { opacity: 0; } to { opacity: 1; } } /* Internet Explorer */ @-ms-keyframes fadein { from { opacity: 0; } to { opacity: 1; } } /* Opera < 12.1 */ @-o-keyframes fadein { from { opacity: 0; } to { opacity: 1; } } #asset-header { padding: 20px 30px 15px; display: flex; flex: 0 0 auto; align-items: center; justify-content: space-between; z-index: 1; transition: box-shadow 0.2s; box-shadow: none; } #asset-header.editmode { padding: 14px 30px; background-color: var(--internal-or-asset-viewer-panel-color); border-bottom: solid 1px #e5e5e5; } #asset-header.scrolled { box-shadow: rgb(0 0 0 / 15%) 0 0 5px 0; } #title { flex: 1 1 auto; font-size: 18px; font-weight: bold; display: flex; flex-direction: row; align-items: center; color: var(--internal-or-asset-viewer-title-text-color); } #title > or-icon { margin-right: 10px; } #error-wrapper { color: var(--internal-or-asset-viewer-error-color); } #error-wrapper > * { vertical-align: middle; } #error-wrapper or-translate { margin-left: 5px; } #created-time { font-size: 12px; } #right-wrapper { flex: 1 1 auto; text-align: right; } #edit-wrapper { flex: 0 0 auto; } #edit-wrapper > or-translate { margin-right: 10px; } #save-btn { margin-left: 20px; } #edit-btn { margin-left: 15px; } #location-panel .panel-content { height: 100%; } #history-panel .panel-content { position: relative; } .msg { display: flex; justify-content: center; align-items: center; text-align: center; height: 100%; } .back-navigation { display: none; cursor: pointer; } #fileupload { display: flex; align-items: center; width: 100%; } .hidden { display: none; } @media screen and (max-width: 767px) { #wrapper { position: absolute; left: 0; right: 0; } .back-navigation { display: block; } .mobileHidden { display: none; } #asset-header { padding: 15px 15px 15px; } #name-input { width: auto; } #view-container { padding: 0; } #edit-container { padding: 10px 0; } .panelContainer { min-width: 360px; padding: 0; } } @media screen and (max-width: 1130px) { #name-input { width: 150px; } .tabletHidden { display: none; } #view-container { flex-direction: column; flex-wrap: nowrap; } .panelContainer { flex: 0 1 auto; } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "panelStyles",
          "declaration": {
            "name": "panelStyles",
            "module": "../or-asset-viewer/src/style.ts"
          }
        },
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "../or-asset-viewer/src/style.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-attribute-card/src/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrAttributeCard",
          "members": [
            {
              "kind": "field",
              "name": "panelName",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "panelName"
            },
            {
              "kind": "field",
              "name": "_style",
              "type": {
                "text": "CSSStyleDeclaration"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "assets",
              "type": {
                "text": "Asset[]"
              },
              "privacy": "public",
              "default": "[]",
              "attribute": "assets"
            },
            {
              "kind": "field",
              "name": "assetAttributes",
              "type": {
                "text": "[number, Attribute<any>][]"
              },
              "privacy": "private",
              "default": "[]",
              "attribute": "assetAttributes"
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "ValueDatapoint<any>[] | undefined"
              },
              "privacy": "private",
              "default": "undefined",
              "attribute": "data"
            },
            {
              "kind": "field",
              "name": "realm",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "realm"
            },
            {
              "kind": "field",
              "name": "mainValue",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "private",
              "attribute": "mainValue"
            },
            {
              "kind": "field",
              "name": "mainValueDecimals",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "2",
              "attribute": "mainValueDecimals"
            },
            {
              "kind": "field",
              "name": "mainValueSize",
              "type": {
                "text": "\"xs\" | \"s\" | \"m\" | \"l\" | \"xl\""
              },
              "privacy": "private",
              "default": "\"m\"",
              "attribute": "mainValueSize"
            },
            {
              "kind": "field",
              "name": "delta",
              "type": {
                "text": "{val?: number, unit?: string} | undefined"
              },
              "privacy": "private",
              "default": "undefined",
              "attribute": "delta"
            },
            {
              "kind": "field",
              "name": "deltaPlus",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "\"\"",
              "attribute": "deltaPlus"
            },
            {
              "kind": "field",
              "name": "deltaFormat",
              "type": {
                "text": "\"absolute\" | \"percentage\""
              },
              "privacy": "private",
              "default": "\"absolute\"",
              "attribute": "deltaFormat"
            },
            {
              "kind": "field",
              "name": "showControls",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "attribute": "showControls"
            },
            {
              "kind": "field",
              "name": "hideAttributePicker",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "hideAttributePicker"
            },
            {
              "kind": "field",
              "name": "showTitle",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "attribute": "showTitle"
            },
            {
              "kind": "field",
              "name": "_loading",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "attribute": "_loading"
            },
            {
              "kind": "field",
              "name": "period",
              "type": {
                "text": "moment.unitOfTime.Base"
              },
              "privacy": "private",
              "default": "\"day\"",
              "attribute": "period"
            },
            {
              "kind": "field",
              "name": "asset",
              "type": {
                "text": "Asset | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "formattedMainValue",
              "type": {
                "text": "{value: number|undefined, unit: string} | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_error",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_chartElem",
              "type": {
                "text": "HTMLCanvasElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_chart",
              "type": {
                "text": "Chart<\"line\", ScatterDataPoint[]> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_startOfPeriod",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_endOfPeriod",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_dataAbortController",
              "type": {
                "text": "AbortController | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "resizeObserver",
              "type": {
                "text": "ResizeObserver | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "shouldHideAttributePicker",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "shouldShowControls",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "shouldShowTitle",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "_openDialog",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "dialogContent",
                  "optional": true,
                  "type": {
                    "text": "ContextMenuOption"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_setAttribute",
              "privacy": "private",
              "parameters": [
                {
                  "name": "attributeName",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_cleanup",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "loadSettings",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "reset",
                  "default": "false",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "saveSettings"
            },
            {
              "kind": "method",
              "name": "loadData",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "getTotalValue",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "ValueDatapoint<any>[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getHighestValue",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "ValueDatapoint<any>[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getFormattedValue",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "{value: number, unit: string} | undefined"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "number | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getFirstKnownMeasurement",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "ValueDatapoint<any>[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getLastKnownMeasurement",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "ValueDatapoint<any>[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getFormattedDelta",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "{val?: number, unit?: string}"
                }
              },
              "parameters": [
                {
                  "name": "firstVal",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "lastVal",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleMenuSelect",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "ContextMenuOption"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setLabelSizeByLength",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setLabelSizeByWidth",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "inlineSize",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_setPeriodOption",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "panelName",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "panelName"
            },
            {
              "name": "assets",
              "type": {
                "text": "Asset[]"
              },
              "default": "[]",
              "fieldName": "assets"
            },
            {
              "name": "assetAttributes",
              "type": {
                "text": "[number, Attribute<any>][]"
              },
              "default": "[]",
              "fieldName": "assetAttributes"
            },
            {
              "name": "data",
              "type": {
                "text": "ValueDatapoint<any>[] | undefined"
              },
              "default": "undefined",
              "fieldName": "data"
            },
            {
              "name": "realm",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "realm"
            },
            {
              "name": "mainValue",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "mainValue"
            },
            {
              "name": "mainValueDecimals",
              "type": {
                "text": "number"
              },
              "default": "2",
              "fieldName": "mainValueDecimals"
            },
            {
              "name": "mainValueSize",
              "type": {
                "text": "\"xs\" | \"s\" | \"m\" | \"l\" | \"xl\""
              },
              "default": "\"m\"",
              "fieldName": "mainValueSize"
            },
            {
              "name": "delta",
              "type": {
                "text": "{val?: number, unit?: string} | undefined"
              },
              "default": "undefined",
              "fieldName": "delta"
            },
            {
              "name": "deltaPlus",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "deltaPlus"
            },
            {
              "name": "deltaFormat",
              "type": {
                "text": "\"absolute\" | \"percentage\""
              },
              "default": "\"absolute\"",
              "fieldName": "deltaFormat"
            },
            {
              "name": "showControls",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "fieldName": "showControls"
            },
            {
              "name": "hideAttributePicker",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "hideAttributePicker"
            },
            {
              "name": "showTitle",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "fieldName": "showTitle"
            },
            {
              "name": "_loading",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "_loading"
            },
            {
              "name": "period",
              "type": {
                "text": "moment.unitOfTime.Base"
              },
              "default": "\"day\"",
              "fieldName": "period"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-attribute-card",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrAttributeCard",
          "declaration": {
            "name": "OrAttributeCard",
            "module": "../or-attribute-card/src/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-attribute-card",
          "declaration": {
            "name": "OrAttributeCard",
            "module": "../or-attribute-card/src/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-attribute-history/src/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrAttributeHistoryEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-attribute-history-event\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-attribute-history/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAttributeHistory",
          "members": [
            {
              "kind": "field",
              "name": "DEFAULT_TIMESTAMP_FORMAT",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "default": "\"L HH:mm:ss\""
            },
            {
              "kind": "field",
              "name": "assetType",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "assetType"
            },
            {
              "kind": "field",
              "name": "assetId",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "assetId"
            },
            {
              "kind": "field",
              "name": "attribute",
              "type": {
                "text": "Attribute<any> | undefined"
              },
              "privacy": "public",
              "attribute": "attribute"
            },
            {
              "kind": "field",
              "name": "attributeRef",
              "type": {
                "text": "AttributeRef | undefined"
              },
              "privacy": "public",
              "attribute": "attributeRef"
            },
            {
              "kind": "field",
              "name": "period",
              "type": {
                "text": "moment.unitOfTime.Base"
              },
              "privacy": "public",
              "default": "\"day\"",
              "attribute": "period"
            },
            {
              "kind": "field",
              "name": "toTimestamp",
              "type": {
                "text": "Date | undefined"
              },
              "privacy": "public",
              "attribute": "toTimestamp"
            },
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "HistoryConfig | undefined"
              },
              "privacy": "public",
              "attribute": "config"
            },
            {
              "kind": "field",
              "name": "_loading",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "attribute": "_loading"
            },
            {
              "kind": "field",
              "name": "_data",
              "type": {
                "text": "ValueDatapoint<any>[] | undefined"
              },
              "privacy": "protected",
              "attribute": "_data"
            },
            {
              "kind": "field",
              "name": "_tableTemplate",
              "type": {
                "text": "TemplateResult | undefined"
              },
              "privacy": "protected",
              "attribute": "_tableTemplate"
            },
            {
              "kind": "field",
              "name": "_chartElem",
              "type": {
                "text": "HTMLCanvasElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_tableElem",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_table",
              "type": {
                "text": "MDCDataTable | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_chart",
              "type": {
                "text": "Chart<\"line\", ScatterDataPoint[]> | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_type",
              "type": {
                "text": "ValueDescriptor | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_style",
              "type": {
                "text": "CSSStyleDeclaration"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_error",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_startOfPeriod",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_endOfPeriod",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_timeUnits",
              "type": {
                "text": "TimeUnit | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_stepSize",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_updateTimestampTimer",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_dataAbortController",
              "type": {
                "text": "AbortController | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_dataFirstLoaded",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "method",
              "name": "onCompleted"
            },
            {
              "kind": "method",
              "name": "_cleanup",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_getTableTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "_getCellValue",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | string | undefined"
                }
              },
              "parameters": [
                {
                  "name": "datapoint",
                  "type": {
                    "text": "ValueDatapoint<any>"
                  }
                },
                {
                  "name": "config",
                  "type": {
                    "text": "TableColumnConfig"
                  }
                },
                {
                  "name": "timestampFormat",
                  "type": {
                    "text": "string | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getIntervalOptions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "[string, string][]"
                }
              }
            },
            {
              "kind": "method",
              "name": "_getPeriodOptions",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_loadData",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_updateTimestamp",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "timestamp",
                  "type": {
                    "text": "Date"
                  }
                },
                {
                  "name": "forward",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "timeout",
                  "default": "300"
                }
              ]
            }
          ],
          "events": [
            {
              "name": "resize",
              "type": {
                "text": "OrAttributeHistoryEvent"
              }
            },
            {
              "name": "rendered",
              "type": {
                "text": "OrAttributeHistoryEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "assetType",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "assetType"
            },
            {
              "name": "assetId",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "assetId"
            },
            {
              "name": "attribute",
              "type": {
                "text": "Attribute<any> | undefined"
              },
              "fieldName": "attribute"
            },
            {
              "name": "attributeRef",
              "type": {
                "text": "AttributeRef | undefined"
              },
              "fieldName": "attributeRef"
            },
            {
              "name": "period",
              "type": {
                "text": "moment.unitOfTime.Base"
              },
              "default": "\"day\"",
              "fieldName": "period"
            },
            {
              "name": "toTimestamp",
              "type": {
                "text": "Date | undefined"
              },
              "fieldName": "toTimestamp"
            },
            {
              "name": "config",
              "type": {
                "text": "HistoryConfig | undefined"
              },
              "fieldName": "config"
            },
            {
              "name": "_loading",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "_loading"
            },
            {
              "name": "_data",
              "type": {
                "text": "ValueDatapoint<any>[] | undefined"
              },
              "fieldName": "_data"
            },
            {
              "name": "_tableTemplate",
              "type": {
                "text": "TemplateResult | undefined"
              },
              "fieldName": "_tableTemplate"
            }
          ],
          "mixins": [
            {
              "name": "translate(i18next)",
              "module": "../or-attribute-history/src/index.ts"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-attribute-history",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrAttributeHistoryEvent",
          "declaration": {
            "name": "OrAttributeHistoryEvent",
            "module": "../or-attribute-history/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAttributeHistory",
          "declaration": {
            "name": "OrAttributeHistory",
            "module": "../or-attribute-history/src/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-attribute-history",
          "declaration": {
            "name": "OrAttributeHistory",
            "module": "../or-attribute-history/src/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-attribute-input/src/agent-link-json-forms-renderer.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "loadAgents",
          "return": {
            "type": {
              "text": "PromiseLike<Agent[]>"
            }
          }
        },
        {
          "kind": "variable",
          "name": "agentIdRendererRegistryEntry",
          "type": {
            "text": "JsonFormsRendererRegistryEntry"
          },
          "default": "{ tester: agentIdTester, renderer: agentIdRenderer }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "loadAgents",
          "declaration": {
            "name": "loadAgents",
            "module": "../or-attribute-input/src/agent-link-json-forms-renderer.ts"
          }
        },
        {
          "kind": "js",
          "name": "agentIdRendererRegistryEntry",
          "declaration": {
            "name": "agentIdRendererRegistryEntry",
            "module": "../or-attribute-input/src/agent-link-json-forms-renderer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-attribute-input/src/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrAttributeInputChangedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-attribute-input-changed\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-attribute-input/src/index.ts"
          }
        },
        {
          "kind": "function",
          "name": "getAttributeInputWrapper",
          "return": {
            "type": {
              "text": "TemplateResult"
            }
          },
          "parameters": [
            {
              "name": "content",
              "type": {
                "text": "TemplateResult"
              }
            },
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            },
            {
              "name": "loading",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "helperText",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "name": "label",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "name": "buttonIcon",
              "optional": true,
              "type": {
                "text": "string"
              }
            },
            {
              "name": "sendValue",
              "optional": true,
              "type": {
                "text": "() => void"
              }
            },
            {
              "name": "fullWidth",
              "optional": true,
              "type": {
                "text": "boolean"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getHelperText",
          "return": {
            "type": {
              "text": "string | undefined"
            }
          },
          "parameters": [
            {
              "name": "sending",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "timestamp",
              "type": {
                "text": "number | undefined"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "jsonFormsInputTemplateProvider",
          "parameters": [
            {
              "name": "fallback"
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAttributeInput",
          "members": [
            {
              "kind": "field",
              "name": "attribute",
              "type": {
                "text": "Attribute<any> | undefined"
              },
              "privacy": "public",
              "attribute": "attribute"
            },
            {
              "kind": "field",
              "name": "assetId",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "assetId"
            },
            {
              "kind": "field",
              "name": "attributeDescriptor",
              "type": {
                "text": "AttributeDescriptor | undefined"
              },
              "privacy": "public",
              "attribute": "attributeDescriptor"
            },
            {
              "kind": "field",
              "name": "valueDescriptor",
              "type": {
                "text": "ValueDescriptor | undefined"
              },
              "privacy": "public",
              "attribute": "valueDescriptor"
            },
            {
              "kind": "field",
              "name": "assetType",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "assetType"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "attribute": "readonly"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "any | undefined"
              },
              "privacy": "public",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "inputType",
              "type": {
                "text": "InputType | undefined"
              },
              "privacy": "public",
              "attribute": "inputType"
            },
            {
              "kind": "field",
              "name": "hasHelperText",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "attribute": "hasHelperText"
            },
            {
              "kind": "field",
              "name": "disableButton",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "attribute": "disableButton"
            },
            {
              "kind": "field",
              "name": "disableSubscribe",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "disableSubscribe"
            },
            {
              "kind": "field",
              "name": "disableWrite",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "disableWrite"
            },
            {
              "kind": "field",
              "name": "compact",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "compact"
            },
            {
              "kind": "field",
              "name": "comfortable",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "comfortable"
            },
            {
              "kind": "field",
              "name": "resizeVertical",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "resizeVertical"
            },
            {
              "kind": "field",
              "name": "fullWidth",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "attribute": "fullWidth"
            },
            {
              "kind": "field",
              "name": "rounded",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "attribute": "rounded"
            },
            {
              "kind": "field",
              "name": "outlined",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "attribute": "outlined"
            },
            {
              "kind": "field",
              "name": "_attributeEvent",
              "type": {
                "text": "AttributeEvent | undefined"
              },
              "privacy": "protected",
              "attribute": "_attributeEvent"
            },
            {
              "kind": "field",
              "name": "_writeTimeoutHandler",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "protected",
              "attribute": "_writeTimeoutHandler"
            },
            {
              "kind": "field",
              "name": "customProvider",
              "type": {
                "text": "ValueInputProviderGenerator | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "writeTimeout",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "default": "5000"
            },
            {
              "kind": "field",
              "name": "_requestFocus",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_newValue",
              "type": {
                "text": "any"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_templateProvider",
              "type": {
                "text": "ValueInputProvider | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_sendError",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_attributeDescriptor",
              "type": {
                "text": "AttributeDescriptor | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_valueDescriptor",
              "type": {
                "text": "ValueDescriptor | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "langChangedCallback"
            },
            {
              "kind": "method",
              "name": "_updateSubscribedRefs",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_getAttributeRef",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "AttributeRef | undefined"
                }
              }
            },
            {
              "kind": "method",
              "name": "_updateDescriptors",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_updateTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "string | undefined"
                }
              }
            },
            {
              "kind": "method",
              "name": "isReadonly",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "field",
              "name": "showButton",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "getValue",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "any"
                }
              }
            },
            {
              "kind": "method",
              "name": "getTimestamp",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "number | undefined"
                }
              }
            },
            {
              "kind": "method",
              "name": "_onEvent",
              "privacy": "public",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "SharedEvent"
                  }
                }
              ],
              "description": "This is called by asset-mixin"
            },
            {
              "kind": "method",
              "name": "checkValidity",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "_onAttributeValueChanged",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "oldValue",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "timestamp",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onInputValueChanged",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "updateImmediately",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_updateValue",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_clearWriteTimeout",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_onWriteTimeout",
              "privacy": "protected"
            }
          ],
          "events": [
            {
              "name": "newValue",
              "type": {
                "text": "OrAttributeInputChangedEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "attribute",
              "type": {
                "text": "Attribute<any> | undefined"
              },
              "fieldName": "attribute"
            },
            {
              "name": "assetId",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "assetId"
            },
            {
              "name": "attributeDescriptor",
              "type": {
                "text": "AttributeDescriptor | undefined"
              },
              "fieldName": "attributeDescriptor"
            },
            {
              "name": "valueDescriptor",
              "type": {
                "text": "ValueDescriptor | undefined"
              },
              "fieldName": "valueDescriptor"
            },
            {
              "name": "assetType",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "assetType"
            },
            {
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "label"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "disabled"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "readonly"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "required"
            },
            {
              "name": "value",
              "type": {
                "text": "any | undefined"
              },
              "fieldName": "value"
            },
            {
              "name": "inputType",
              "type": {
                "text": "InputType | undefined"
              },
              "fieldName": "inputType"
            },
            {
              "name": "hasHelperText",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "hasHelperText"
            },
            {
              "name": "disableButton",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "disableButton"
            },
            {
              "name": "disableSubscribe",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disableSubscribe"
            },
            {
              "name": "disableWrite",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disableWrite"
            },
            {
              "name": "compact",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "compact"
            },
            {
              "name": "comfortable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "comfortable"
            },
            {
              "name": "resizeVertical",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "resizeVertical"
            },
            {
              "name": "fullWidth",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "fullWidth"
            },
            {
              "name": "rounded",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "rounded"
            },
            {
              "name": "outlined",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "outlined"
            },
            {
              "name": "_attributeEvent",
              "type": {
                "text": "AttributeEvent | undefined"
              },
              "fieldName": "_attributeEvent"
            },
            {
              "name": "_writeTimeoutHandler",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "_writeTimeoutHandler"
            }
          ],
          "mixins": [
            {
              "name": "subscribe(manager)",
              "module": "../or-attribute-input/src/index.ts"
            },
            {
              "name": "translate(i18next)",
              "module": "../or-attribute-input/src/index.ts"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-attribute-input",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrAttributeInputChangedEvent",
          "declaration": {
            "name": "OrAttributeInputChangedEvent",
            "module": "../or-attribute-input/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "getAttributeInputWrapper",
          "declaration": {
            "name": "getAttributeInputWrapper",
            "module": "../or-attribute-input/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "getHelperText",
          "declaration": {
            "name": "getHelperText",
            "module": "../or-attribute-input/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "jsonFormsInputTemplateProvider",
          "declaration": {
            "name": "jsonFormsInputTemplateProvider",
            "module": "../or-attribute-input/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAttributeInput",
          "declaration": {
            "name": "OrAttributeInput",
            "module": "../or-attribute-input/src/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-attribute-input",
          "declaration": {
            "name": "OrAttributeInput",
            "module": "../or-attribute-input/src/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-attribute-picker/src/asset-attribute-picker.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Custom Event that is dispatched upon closing the dialog.\r\nContains a list of AttributeRef of the selected attributes.",
          "name": "OrAssetAttributePickerPickedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-asset-attribute-picker-picked\""
            }
          ],
          "superclass": {
            "name": "AttributePickerPickedEvent",
            "module": "/or-attribute-picker/src/attribute-picker"
          }
        },
        {
          "kind": "class",
          "description": "The \"Attribute Picker\" component using the OrAssetTree component for selecting assets and its attributes.",
          "name": "OrAssetAttributePicker",
          "members": [
            {
              "kind": "field",
              "name": "attributeFilter",
              "type": {
                "text": "(attribute: Attribute<any>) => boolean | undefined"
              },
              "privacy": "public",
              "attribute": "attributeFilter"
            },
            {
              "kind": "field",
              "name": "_assetAttributes",
              "type": {
                "text": "(Attribute<any>)[] | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "selectedAssets",
              "type": {
                "text": "string[]"
              },
              "privacy": "public",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "selectedAttributes",
              "type": {
                "text": "AttributeRef[]"
              },
              "privacy": "public",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "_asset",
              "type": {
                "text": "Asset | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "setAttributeFilter",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "attributeFilter",
                  "type": {
                    "text": "((attribute: Attribute<any>) => boolean) | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setSelectedAssets",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "selectedAssets",
                  "type": {
                    "text": "string[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setSelectedAttributes",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "selectedAttributes",
                  "type": {
                    "text": "AttributeRef[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_setDialogActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "_setDialogContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "_onAssetSelectionChanged",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "OrAssetTreeSelectionEvent"
                  }
                }
              ],
              "description": "Event callback function that is triggered once a user selects an asset.\r\nIt fetches the attributes of that specific asset, and caches these to be displayed later.\r\nAlso applies the filtering such as showOnlyDatapointAttrs, showOnlyRuleStateAttrs and attributeFilter if set."
            },
            {
              "kind": "method",
              "name": "_onAttributesSelect",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "attrNames",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "description": "HTML Callback function when the selected attributes have been updated."
            },
            {
              "kind": "field",
              "name": "multiSelect",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "multiSelect",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "field",
              "name": "showOnlyDatapointAttrs",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "showOnlyDatapointAttrs",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "field",
              "name": "showOnlyRuleStateAttrs",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "showOnlyRuleStateAttrs",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "field",
              "name": "addBtn",
              "type": {
                "text": "OrMwcInput"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "setShowOnlyDatapointAttrs",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "showOnlyDatapointAttrs",
                  "type": {
                    "text": "boolean | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "setShowOnlyRuleStateAttrs",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "showOnlyRuleStateAttrs",
                  "type": {
                    "text": "boolean | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "setMultiSelect",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "multiSelect",
                  "type": {
                    "text": "boolean | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "setOpen",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "isOpen",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "setHeading",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "heading",
                  "type": {
                    "text": "TemplateResult | string | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "setContent",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "_content",
                  "type": {
                    "text": "TemplateResult | (() => TemplateResult) | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "setActions",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "_actions",
                  "type": {
                    "text": "DialogAction[] | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "setDismissAction",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "_action",
                  "type": {
                    "text": "DialogActionBase | null | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "setStyles",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "_styles",
                  "type": {
                    "text": "string | TemplateResult | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "setAvatar",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "_avatar",
                  "type": {
                    "text": "boolean | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "_updateDialogContent",
              "privacy": "protected",
              "description": "Convenient function to update the dialog content manually,\r\nsince updating the UI is handled different for OrMwcDialog.",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "_updateDialogActions",
              "privacy": "protected",
              "description": "Convenient function to update the dialog actions manually,\r\nsince updating the UI is handled different for OrMwcDialog.",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "_getAttributesTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<TemplateResult>"
                }
              },
              "parameters": [
                {
                  "name": "attributes",
                  "optional": true,
                  "type": {
                    "text": "Attribute<any>[]"
                  }
                },
                {
                  "name": "descriptors",
                  "optional": true,
                  "type": {
                    "text": "AttributeDescriptor[]"
                  }
                },
                {
                  "name": "selectedNames",
                  "optional": true,
                  "type": {
                    "text": "string[]"
                  }
                },
                {
                  "name": "multi",
                  "default": "false"
                },
                {
                  "name": "onSelect",
                  "optional": true,
                  "type": {
                    "text": "(attrNames: string[]) => void"
                  }
                }
              ],
              "description": "Function that creates the HTML template for selecting attributes.\r\nCurrently uses OrMwcList with or without checkboxes, and uses Util.getAttributeLabel to formulate the text.",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "_getStyles",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "description": "Simple function that creates the CSS styles for this component",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "field",
              "name": "DialogHostElement",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "public",
              "static": true,
              "description": "Can be set by apps to control where in the DOM dialogs are added",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "heading",
              "type": {
                "text": "string | TemplateResult | undefined"
              },
              "privacy": "public",
              "attribute": "heading",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "content",
              "type": {
                "text": "TemplateResult | (() => TemplateResult) | undefined"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "actions",
              "type": {
                "text": "DialogAction[] | undefined"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "dismissAction",
              "type": {
                "text": "DialogActionBase | null | undefined"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "avatar",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "attribute": "avatar",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mdcElem",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mdcComponent",
              "type": {
                "text": "MDCDialog | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "_popstateEventBind",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "isOpen",
              "privacy": "public",
              "readonly": true,
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "open",
              "privacy": "public",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "close",
              "privacy": "public",
              "parameters": [
                {
                  "name": "action",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "_onDialogOpened",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "_onDialogClosed",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "action",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "_onBrowserNavigate",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "PopStateEvent"
                  }
                }
              ],
              "description": "Function callback for when the browser window navigates to another place.\r\nWe attempt to close the dialog when this occurs.",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            }
          ],
          "events": [
            {
              "type": {
                "text": "OrMwcDialogOpenedEvent"
              },
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "name": "action",
              "type": {
                "text": "OrMwcDialogClosedEvent"
              },
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "(attribute: Attribute<any>) => boolean | undefined"
              },
              "description": "Callback method for consumers to filter the attribute list shown. Returning true will make the attribute visible, returning false hides it.",
              "name": "attributeFilter",
              "fieldName": "attributeFilter"
            },
            {
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether selecting multiple attributes is allowed or not.",
              "name": "multiSelect",
              "default": "false",
              "fieldName": "multiSelect",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether only attributes with the 'STORE_DATAPOINT' meta item should be shown.",
              "name": "showOnlyDatapointAttrs",
              "default": "false",
              "fieldName": "showOnlyDatapointAttrs",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether only attributes with the 'RULE_STATE' meta item should be shown.",
              "name": "showOnlyRuleStateAttrs",
              "default": "false",
              "fieldName": "showOnlyRuleStateAttrs",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "name": "heading",
              "type": {
                "text": "string | TemplateResult | undefined"
              },
              "fieldName": "heading",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "name": "avatar",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "avatar",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "name": "styles",
              "readonly": true,
              "fieldName": "styles",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            }
          ],
          "superclass": {
            "name": "AttributePicker",
            "module": "/or-attribute-picker/src/attribute-picker"
          },
          "tagName": "or-asset-attribute-picker",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrAssetAttributePickerPickedEvent",
          "declaration": {
            "name": "OrAssetAttributePickerPickedEvent",
            "module": "../or-attribute-picker/src/asset-attribute-picker.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetAttributePicker",
          "declaration": {
            "name": "OrAssetAttributePicker",
            "module": "../or-attribute-picker/src/asset-attribute-picker.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-asset-attribute-picker",
          "declaration": {
            "name": "OrAssetAttributePicker",
            "module": "../or-attribute-picker/src/asset-attribute-picker.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-attribute-picker/src/assettype-attribute-picker.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Custom Event that is dispatched upon closing the dialog.\r\nContains a map that is keyed by AssetDescriptor.name, with an array of AttributeDescriptors of the selected attributes.",
          "name": "AssetTypeAttributePickerPickedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-asset-type-attribute-picker-picked\""
            }
          ],
          "superclass": {
            "name": "AttributePickerPickedEvent",
            "module": "/or-attribute-picker/src/attribute-picker"
          }
        },
        {
          "kind": "class",
          "description": "The \"Attribute Picker\" component using the OrAssetTree component for selecting assets and its attributes.",
          "name": "AssetTypeAttributePicker",
          "members": [
            {
              "kind": "field",
              "name": "assetTypeFilter",
              "type": {
                "text": "(descriptor: AssetDescriptor) => boolean | undefined"
              },
              "privacy": "public",
              "attribute": "assetTypeFilter"
            },
            {
              "kind": "field",
              "name": "attributeFilter",
              "type": {
                "text": "(descriptor: AttributeDescriptor) => boolean | undefined"
              },
              "privacy": "public",
              "attribute": "attributeFilter"
            },
            {
              "kind": "field",
              "name": "selectedAttributes",
              "type": {
                "text": "Map<string, AttributeDescriptor[]>"
              },
              "privacy": "public",
              "default": "new Map()"
            },
            {
              "kind": "field",
              "name": "_selectedAssetType",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_loadedAttributeTypes",
              "type": {
                "text": "AttributeDescriptor[] | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_loadedAssetTypes",
              "type": {
                "text": "AssetDescriptor[] | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "setSelectedAttributes",
              "privacy": "public",
              "parameters": [
                {
                  "name": "selectedAttributes",
                  "type": {
                    "text": "Map<string, AttributeDescriptor[]>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_loadAssetTypes",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "AssetDescriptor[]"
                }
              },
              "description": "Function that will load and update the available asset types up for selection.\r\nAlso applies the filtering such as assetTypeFilter if set."
            },
            {
              "kind": "method",
              "name": "_loadAttributeTypes",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "AttributeDescriptor[]"
                }
              },
              "parameters": [
                {
                  "name": "descriptor",
                  "type": {
                    "text": "AssetDescriptor"
                  }
                }
              ],
              "description": "Function that will load and update the available attributes up for selection.\r\nThe descriptor parameter is usually the selected asset type.\r\nAlso applies the filtering such as showOnlyDatapointAttrs, showOnlyRuleStateAttrs and attributeFilter if set."
            },
            {
              "kind": "method",
              "name": "_setDialogContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "_setDialogActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "_onAssetTypeItemClick",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "listItem",
                  "type": {
                    "text": "ListItem"
                  }
                }
              ],
              "description": "HTML Callback function when the selected asset type has been updated."
            },
            {
              "kind": "method",
              "name": "_onAttributesSelect",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "attrNames",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "description": "HTML callback function when the selected attributes have been updated."
            },
            {
              "kind": "method",
              "name": "_getAssetTypeDescriptors",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "ListItem[]"
                }
              },
              "parameters": [
                {
                  "name": "descriptors",
                  "type": {
                    "text": "AssetDescriptor[]"
                  }
                },
                {
                  "name": "selected",
                  "optional": true,
                  "type": {
                    "text": "AssetDescriptor[]"
                  }
                },
                {
                  "name": "withNoneValue",
                  "optional": true,
                  "type": {
                    "text": "ListItem"
                  }
                }
              ],
              "description": "Function that maps the AssetDescriptors to the formatted ListItems.\r\nUses helpers like Util.getAssetTypeLabel and sorts by descriptorType so that agents show up first."
            },
            {
              "kind": "method",
              "name": "_getAssetDescriptorByName",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "AssetDescriptor | undefined"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Utility method to get the cached AssetDescriptor by its name"
            },
            {
              "kind": "field",
              "name": "multiSelect",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "multiSelect",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "field",
              "name": "showOnlyDatapointAttrs",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "showOnlyDatapointAttrs",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "field",
              "name": "showOnlyRuleStateAttrs",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "showOnlyRuleStateAttrs",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "field",
              "name": "addBtn",
              "type": {
                "text": "OrMwcInput"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "setShowOnlyDatapointAttrs",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "showOnlyDatapointAttrs",
                  "type": {
                    "text": "boolean | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "setShowOnlyRuleStateAttrs",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "showOnlyRuleStateAttrs",
                  "type": {
                    "text": "boolean | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "setMultiSelect",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "multiSelect",
                  "type": {
                    "text": "boolean | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "setOpen",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "isOpen",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "setHeading",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "heading",
                  "type": {
                    "text": "TemplateResult | string | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "setContent",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "_content",
                  "type": {
                    "text": "TemplateResult | (() => TemplateResult) | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "setActions",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "_actions",
                  "type": {
                    "text": "DialogAction[] | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "setDismissAction",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "_action",
                  "type": {
                    "text": "DialogActionBase | null | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "setStyles",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "_styles",
                  "type": {
                    "text": "string | TemplateResult | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "setAvatar",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "_avatar",
                  "type": {
                    "text": "boolean | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "_updateDialogContent",
              "privacy": "protected",
              "description": "Convenient function to update the dialog content manually,\r\nsince updating the UI is handled different for OrMwcDialog.",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "_updateDialogActions",
              "privacy": "protected",
              "description": "Convenient function to update the dialog actions manually,\r\nsince updating the UI is handled different for OrMwcDialog.",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "_getAttributesTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<TemplateResult>"
                }
              },
              "parameters": [
                {
                  "name": "attributes",
                  "optional": true,
                  "type": {
                    "text": "Attribute<any>[]"
                  }
                },
                {
                  "name": "descriptors",
                  "optional": true,
                  "type": {
                    "text": "AttributeDescriptor[]"
                  }
                },
                {
                  "name": "selectedNames",
                  "optional": true,
                  "type": {
                    "text": "string[]"
                  }
                },
                {
                  "name": "multi",
                  "default": "false"
                },
                {
                  "name": "onSelect",
                  "optional": true,
                  "type": {
                    "text": "(attrNames: string[]) => void"
                  }
                }
              ],
              "description": "Function that creates the HTML template for selecting attributes.\r\nCurrently uses OrMwcList with or without checkboxes, and uses Util.getAttributeLabel to formulate the text.",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "_getStyles",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "description": "Simple function that creates the CSS styles for this component",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "field",
              "name": "DialogHostElement",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "public",
              "static": true,
              "description": "Can be set by apps to control where in the DOM dialogs are added",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "heading",
              "type": {
                "text": "string | TemplateResult | undefined"
              },
              "privacy": "public",
              "attribute": "heading",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "content",
              "type": {
                "text": "TemplateResult | (() => TemplateResult) | undefined"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "actions",
              "type": {
                "text": "DialogAction[] | undefined"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "dismissAction",
              "type": {
                "text": "DialogActionBase | null | undefined"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "avatar",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "attribute": "avatar",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mdcElem",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mdcComponent",
              "type": {
                "text": "MDCDialog | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "_popstateEventBind",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "isOpen",
              "privacy": "public",
              "readonly": true,
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "open",
              "privacy": "public",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "close",
              "privacy": "public",
              "parameters": [
                {
                  "name": "action",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "_onDialogOpened",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "_onDialogClosed",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "action",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "_onBrowserNavigate",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "PopStateEvent"
                  }
                }
              ],
              "description": "Function callback for when the browser window navigates to another place.\r\nWe attempt to close the dialog when this occurs.",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            }
          ],
          "events": [
            {
              "type": {
                "text": "OrMwcDialogOpenedEvent"
              },
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "name": "action",
              "type": {
                "text": "OrMwcDialogClosedEvent"
              },
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "(descriptor: AssetDescriptor) => boolean | undefined"
              },
              "description": "-Callback method for consumers to filter the asset type list shown. Returning true will make the asset type visible, returning false hides it.",
              "name": "assetTypeFilter",
              "fieldName": "assetTypeFilter"
            },
            {
              "type": {
                "text": "(descriptor: AttributeDescriptor) => boolean | undefined"
              },
              "description": "Callback method for consumers to filter the attribute list shown. Returning true will make the attribute visible, returning false hides it.",
              "name": "attributeFilter",
              "fieldName": "attributeFilter"
            },
            {
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether selecting multiple attributes is allowed or not.",
              "name": "multiSelect",
              "default": "false",
              "fieldName": "multiSelect",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether only attributes with the 'STORE_DATAPOINT' meta item should be shown.",
              "name": "showOnlyDatapointAttrs",
              "default": "false",
              "fieldName": "showOnlyDatapointAttrs",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether only attributes with the 'RULE_STATE' meta item should be shown.",
              "name": "showOnlyRuleStateAttrs",
              "default": "false",
              "fieldName": "showOnlyRuleStateAttrs",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "name": "heading",
              "type": {
                "text": "string | TemplateResult | undefined"
              },
              "fieldName": "heading",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "name": "avatar",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "avatar",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "name": "styles",
              "readonly": true,
              "fieldName": "styles",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            }
          ],
          "superclass": {
            "name": "AttributePicker",
            "module": "/or-attribute-picker/src/attribute-picker"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AssetTypeAttributePickerPickedEvent",
          "declaration": {
            "name": "AssetTypeAttributePickerPickedEvent",
            "module": "../or-attribute-picker/src/assettype-attribute-picker.ts"
          }
        },
        {
          "kind": "js",
          "name": "AssetTypeAttributePicker",
          "declaration": {
            "name": "AssetTypeAttributePicker",
            "module": "../or-attribute-picker/src/assettype-attribute-picker.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-attribute-picker/src/assettype-list.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AssettypeList",
          "members": [
            {
              "kind": "field",
              "name": "listItems",
              "type": {
                "text": "(ListItem | null)[] | undefined"
              },
              "privacy": "public",
              "attribute": "listItems",
              "inheritedFrom": {
                "name": "OrMwcList",
                "module": "../or-mwc-components/src/or-mwc-list.ts"
              }
            },
            {
              "kind": "field",
              "name": "values",
              "type": {
                "text": "string[] | string | undefined"
              },
              "privacy": "public",
              "attribute": "values",
              "inheritedFrom": {
                "name": "OrMwcList",
                "module": "../or-mwc-components/src/or-mwc-list.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "ListType"
              },
              "privacy": "public",
              "attribute": "type",
              "inheritedFrom": {
                "name": "OrMwcList",
                "module": "../or-mwc-components/src/or-mwc-list.ts"
              }
            },
            {
              "kind": "field",
              "name": "_wrapperElem",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrMwcList",
                "module": "../or-mwc-components/src/or-mwc-list.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mdcElem",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrMwcList",
                "module": "../or-mwc-components/src/or-mwc-list.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mdcComponent",
              "type": {
                "text": "MDCList | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrMwcList",
                "module": "../or-mwc-components/src/or-mwc-list.ts"
              }
            },
            {
              "kind": "field",
              "name": "selectedItems",
              "type": {
                "text": "ListItem[]"
              },
              "privacy": "public",
              "readonly": true,
              "inheritedFrom": {
                "name": "OrMwcList",
                "module": "../or-mwc-components/src/or-mwc-list.ts"
              }
            },
            {
              "kind": "method",
              "name": "setSelectedItems",
              "privacy": "public",
              "parameters": [
                {
                  "name": "items",
                  "type": {
                    "text": "ListItem | ListItem[] | string | string[] | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcList",
                "module": "../or-mwc-components/src/or-mwc-list.ts"
              }
            },
            {
              "kind": "method",
              "name": "_onSelected",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "MDCListActionEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcList",
                "module": "../or-mwc-components/src/or-mwc-list.ts"
              }
            }
          ],
          "superclass": {
            "name": "OrMwcList",
            "package": "@openremote/or-mwc-components/or-mwc-list"
          },
          "tagName": "asset-type-list",
          "customElement": true,
          "attributes": [
            {
              "name": "listItems",
              "type": {
                "text": "(ListItem | null)[] | undefined"
              },
              "fieldName": "listItems",
              "inheritedFrom": {
                "name": "OrMwcList",
                "module": "../or-mwc-components/src/or-mwc-list.ts"
              }
            },
            {
              "name": "values",
              "type": {
                "text": "string[] | string | undefined"
              },
              "fieldName": "values",
              "inheritedFrom": {
                "name": "OrMwcList",
                "module": "../or-mwc-components/src/or-mwc-list.ts"
              }
            },
            {
              "name": "type",
              "type": {
                "text": "ListType"
              },
              "fieldName": "type",
              "inheritedFrom": {
                "name": "OrMwcList",
                "module": "../or-mwc-components/src/or-mwc-list.ts"
              }
            }
          ],
          "events": [
            {
              "type": {
                "text": "OrMwcListChangedEvent"
              },
              "inheritedFrom": {
                "name": "OrMwcList",
                "module": "../or-mwc-components/src/or-mwc-list.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AssettypeList",
          "declaration": {
            "name": "AssettypeList",
            "module": "../or-attribute-picker/src/assettype-list.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "asset-type-list",
          "declaration": {
            "name": "AssettypeList",
            "module": "../or-attribute-picker/src/assettype-list.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-attribute-picker/src/attribute-picker.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AttributePickerPickedEvent",
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-attribute-picker/src/attribute-picker.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "AttributePicker",
          "members": [
            {
              "kind": "method",
              "name": "_setDialogContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_setDialogActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "multiSelect",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "multiSelect"
            },
            {
              "kind": "field",
              "name": "showOnlyDatapointAttrs",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "showOnlyDatapointAttrs"
            },
            {
              "kind": "field",
              "name": "showOnlyRuleStateAttrs",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "showOnlyRuleStateAttrs"
            },
            {
              "kind": "field",
              "name": "addBtn",
              "type": {
                "text": "OrMwcInput"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "setShowOnlyDatapointAttrs",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "showOnlyDatapointAttrs",
                  "type": {
                    "text": "boolean | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setShowOnlyRuleStateAttrs",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "showOnlyRuleStateAttrs",
                  "type": {
                    "text": "boolean | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setMultiSelect",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "multiSelect",
                  "type": {
                    "text": "boolean | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setOpen",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "isOpen",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "setHeading",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "heading",
                  "type": {
                    "text": "TemplateResult | string | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "setContent",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "_content",
                  "type": {
                    "text": "TemplateResult | (() => TemplateResult) | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "setActions",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "_actions",
                  "type": {
                    "text": "DialogAction[] | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "setDismissAction",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "_action",
                  "type": {
                    "text": "DialogActionBase | null | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "setStyles",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "_styles",
                  "type": {
                    "text": "string | TemplateResult | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "setAvatar",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "_avatar",
                  "type": {
                    "text": "boolean | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "_updateDialogContent",
              "privacy": "protected",
              "description": "Convenient function to update the dialog content manually,\r\nsince updating the UI is handled different for OrMwcDialog."
            },
            {
              "kind": "method",
              "name": "_updateDialogActions",
              "privacy": "protected",
              "description": "Convenient function to update the dialog actions manually,\r\nsince updating the UI is handled different for OrMwcDialog."
            },
            {
              "kind": "method",
              "name": "_getAttributesTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<TemplateResult>"
                }
              },
              "parameters": [
                {
                  "name": "attributes",
                  "optional": true,
                  "type": {
                    "text": "Attribute<any>[]"
                  }
                },
                {
                  "name": "descriptors",
                  "optional": true,
                  "type": {
                    "text": "AttributeDescriptor[]"
                  }
                },
                {
                  "name": "selectedNames",
                  "optional": true,
                  "type": {
                    "text": "string[]"
                  }
                },
                {
                  "name": "multi",
                  "default": "false"
                },
                {
                  "name": "onSelect",
                  "optional": true,
                  "type": {
                    "text": "(attrNames: string[]) => void"
                  }
                }
              ],
              "description": "Function that creates the HTML template for selecting attributes.\r\nCurrently uses OrMwcList with or without checkboxes, and uses Util.getAttributeLabel to formulate the text."
            },
            {
              "kind": "method",
              "name": "_getStyles",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "description": "Simple function that creates the CSS styles for this component"
            },
            {
              "kind": "field",
              "name": "DialogHostElement",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "public",
              "static": true,
              "description": "Can be set by apps to control where in the DOM dialogs are added",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "heading",
              "type": {
                "text": "string | TemplateResult | undefined"
              },
              "privacy": "public",
              "attribute": "heading",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "content",
              "type": {
                "text": "TemplateResult | (() => TemplateResult) | undefined"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "actions",
              "type": {
                "text": "DialogAction[] | undefined"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "dismissAction",
              "type": {
                "text": "DialogActionBase | null | undefined"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "avatar",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "attribute": "avatar",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mdcElem",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mdcComponent",
              "type": {
                "text": "MDCDialog | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "_popstateEventBind",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "isOpen",
              "privacy": "public",
              "readonly": true,
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "open",
              "privacy": "public",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "close",
              "privacy": "public",
              "parameters": [
                {
                  "name": "action",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "_onDialogOpened",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "_onDialogClosed",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "action",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "_onBrowserNavigate",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "PopStateEvent"
                  }
                }
              ],
              "description": "Function callback for when the browser window navigates to another place.\r\nWe attempt to close the dialog when this occurs.",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether selecting multiple attributes is allowed or not.",
              "name": "multiSelect",
              "default": "false",
              "fieldName": "multiSelect"
            },
            {
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether only attributes with the 'STORE_DATAPOINT' meta item should be shown.",
              "name": "showOnlyDatapointAttrs",
              "default": "false",
              "fieldName": "showOnlyDatapointAttrs"
            },
            {
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether only attributes with the 'RULE_STATE' meta item should be shown.",
              "name": "showOnlyRuleStateAttrs",
              "default": "false",
              "fieldName": "showOnlyRuleStateAttrs"
            },
            {
              "name": "heading",
              "type": {
                "text": "string | TemplateResult | undefined"
              },
              "fieldName": "heading",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "name": "avatar",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "avatar",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "name": "styles",
              "readonly": true,
              "fieldName": "styles",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            }
          ],
          "superclass": {
            "name": "OrMwcDialog",
            "package": "@openremote/or-mwc-components/or-mwc-dialog"
          },
          "summary": "Abstract implementation of the Attribute Picker UI. Wraps around OrMwcDialog and provides some utility properties and functions to inherit.",
          "events": [
            {
              "type": {
                "text": "OrMwcDialogOpenedEvent"
              },
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "name": "action",
              "type": {
                "text": "OrMwcDialogClosedEvent"
              },
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AttributePickerPickedEvent",
          "declaration": {
            "name": "AttributePickerPickedEvent",
            "module": "../or-attribute-picker/src/attribute-picker.ts"
          }
        },
        {
          "kind": "js",
          "name": "AttributePicker",
          "declaration": {
            "name": "AttributePicker",
            "module": "../or-attribute-picker/src/attribute-picker.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-attribute-picker/src/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "CustomEvent that triggers once attributes have been selected, and the user closes the dialog.",
          "name": "OrAttributePickerPickedEvent",
          "superclass": {
            "name": "OrAssetAttributePickerPickedEvent",
            "module": "/or-attribute-picker/src/asset-attribute-picker"
          },
          "deprecated": "Replaced this class with an abstract {@link OrAssetAttributePickerPickedEvent}, that is inherited by other classes like {@link OrAssetAttributePicker} and {@link AssetTypeAttributePicker}.",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-asset-attribute-picker-picked\"",
              "inheritedFrom": {
                "name": "OrAssetAttributePickerPickedEvent",
                "module": "../or-attribute-picker/src/asset-attribute-picker.ts"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "Dialog to pick attributes of supplied asset(s).",
          "name": "OrAttributePicker",
          "superclass": {
            "name": "OrAssetAttributePicker",
            "module": "/or-attribute-picker/src/asset-attribute-picker"
          },
          "deprecated": "Replaced this class with {@link OrAssetAttributePicker}.",
          "tagName": "or-attribute-picker",
          "customElement": true,
          "attributes": [
            {
              "type": {
                "text": "(attribute: Attribute<any>) => boolean | undefined"
              },
              "description": "Callback method for consumers to filter the attribute list shown. Returning true will make the attribute visible, returning false hides it.",
              "name": "attributeFilter",
              "fieldName": "attributeFilter",
              "inheritedFrom": {
                "name": "OrAssetAttributePicker",
                "module": "../or-attribute-picker/src/asset-attribute-picker.ts"
              }
            },
            {
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether selecting multiple attributes is allowed or not.",
              "name": "multiSelect",
              "default": "false",
              "fieldName": "multiSelect",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether only attributes with the 'STORE_DATAPOINT' meta item should be shown.",
              "name": "showOnlyDatapointAttrs",
              "default": "false",
              "fieldName": "showOnlyDatapointAttrs",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether only attributes with the 'RULE_STATE' meta item should be shown.",
              "name": "showOnlyRuleStateAttrs",
              "default": "false",
              "fieldName": "showOnlyRuleStateAttrs",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "name": "heading",
              "type": {
                "text": "string | TemplateResult | undefined"
              },
              "fieldName": "heading",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "name": "avatar",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "avatar",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "name": "styles",
              "readonly": true,
              "fieldName": "styles",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "attributeFilter",
              "type": {
                "text": "(attribute: Attribute<any>) => boolean | undefined"
              },
              "privacy": "public",
              "attribute": "attributeFilter",
              "inheritedFrom": {
                "name": "OrAssetAttributePicker",
                "module": "../or-attribute-picker/src/asset-attribute-picker.ts"
              }
            },
            {
              "kind": "field",
              "name": "_assetAttributes",
              "type": {
                "text": "(Attribute<any>)[] | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrAssetAttributePicker",
                "module": "../or-attribute-picker/src/asset-attribute-picker.ts"
              }
            },
            {
              "kind": "field",
              "name": "selectedAssets",
              "type": {
                "text": "string[]"
              },
              "privacy": "public",
              "default": "[]",
              "inheritedFrom": {
                "name": "OrAssetAttributePicker",
                "module": "../or-attribute-picker/src/asset-attribute-picker.ts"
              }
            },
            {
              "kind": "field",
              "name": "selectedAttributes",
              "type": {
                "text": "AttributeRef[]"
              },
              "privacy": "public",
              "default": "[]",
              "inheritedFrom": {
                "name": "OrAssetAttributePicker",
                "module": "../or-attribute-picker/src/asset-attribute-picker.ts"
              }
            },
            {
              "kind": "field",
              "name": "_asset",
              "type": {
                "text": "Asset | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrAssetAttributePicker",
                "module": "../or-attribute-picker/src/asset-attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "setAttributeFilter",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "attributeFilter",
                  "type": {
                    "text": "((attribute: Attribute<any>) => boolean) | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrAssetAttributePicker",
                "module": "../or-attribute-picker/src/asset-attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "setSelectedAssets",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "selectedAssets",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrAssetAttributePicker",
                "module": "../or-attribute-picker/src/asset-attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "setSelectedAttributes",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "selectedAttributes",
                  "type": {
                    "text": "AttributeRef[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrAssetAttributePicker",
                "module": "../or-attribute-picker/src/asset-attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "_setDialogActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "_setDialogContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "_onAssetSelectionChanged",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "OrAssetTreeSelectionEvent"
                  }
                }
              ],
              "description": "Event callback function that is triggered once a user selects an asset.\r\nIt fetches the attributes of that specific asset, and caches these to be displayed later.\r\nAlso applies the filtering such as showOnlyDatapointAttrs, showOnlyRuleStateAttrs and attributeFilter if set.",
              "inheritedFrom": {
                "name": "OrAssetAttributePicker",
                "module": "../or-attribute-picker/src/asset-attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "_onAttributesSelect",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "attrNames",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "description": "HTML Callback function when the selected attributes have been updated.",
              "inheritedFrom": {
                "name": "OrAssetAttributePicker",
                "module": "../or-attribute-picker/src/asset-attribute-picker.ts"
              }
            },
            {
              "kind": "field",
              "name": "multiSelect",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "multiSelect",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "field",
              "name": "showOnlyDatapointAttrs",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "showOnlyDatapointAttrs",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "field",
              "name": "showOnlyRuleStateAttrs",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "showOnlyRuleStateAttrs",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "field",
              "name": "addBtn",
              "type": {
                "text": "OrMwcInput"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "setShowOnlyDatapointAttrs",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "showOnlyDatapointAttrs",
                  "type": {
                    "text": "boolean | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "setShowOnlyRuleStateAttrs",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "showOnlyRuleStateAttrs",
                  "type": {
                    "text": "boolean | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "setMultiSelect",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "multiSelect",
                  "type": {
                    "text": "boolean | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "setOpen",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "isOpen",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "setHeading",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "heading",
                  "type": {
                    "text": "TemplateResult | string | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "setContent",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "_content",
                  "type": {
                    "text": "TemplateResult | (() => TemplateResult) | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "setActions",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "_actions",
                  "type": {
                    "text": "DialogAction[] | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "setDismissAction",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "_action",
                  "type": {
                    "text": "DialogActionBase | null | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "setStyles",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "_styles",
                  "type": {
                    "text": "string | TemplateResult | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "setAvatar",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "_avatar",
                  "type": {
                    "text": "boolean | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "_updateDialogContent",
              "privacy": "protected",
              "description": "Convenient function to update the dialog content manually,\r\nsince updating the UI is handled different for OrMwcDialog.",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "_updateDialogActions",
              "privacy": "protected",
              "description": "Convenient function to update the dialog actions manually,\r\nsince updating the UI is handled different for OrMwcDialog.",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "_getAttributesTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<TemplateResult>"
                }
              },
              "parameters": [
                {
                  "name": "attributes",
                  "optional": true,
                  "type": {
                    "text": "Attribute<any>[]"
                  }
                },
                {
                  "name": "descriptors",
                  "optional": true,
                  "type": {
                    "text": "AttributeDescriptor[]"
                  }
                },
                {
                  "name": "selectedNames",
                  "optional": true,
                  "type": {
                    "text": "string[]"
                  }
                },
                {
                  "name": "multi",
                  "default": "false"
                },
                {
                  "name": "onSelect",
                  "optional": true,
                  "type": {
                    "text": "(attrNames: string[]) => void"
                  }
                }
              ],
              "description": "Function that creates the HTML template for selecting attributes.\r\nCurrently uses OrMwcList with or without checkboxes, and uses Util.getAttributeLabel to formulate the text.",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "_getStyles",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "description": "Simple function that creates the CSS styles for this component",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "field",
              "name": "DialogHostElement",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "public",
              "static": true,
              "description": "Can be set by apps to control where in the DOM dialogs are added",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "heading",
              "type": {
                "text": "string | TemplateResult | undefined"
              },
              "privacy": "public",
              "attribute": "heading",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "content",
              "type": {
                "text": "TemplateResult | (() => TemplateResult) | undefined"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "actions",
              "type": {
                "text": "DialogAction[] | undefined"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "dismissAction",
              "type": {
                "text": "DialogActionBase | null | undefined"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "avatar",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "attribute": "avatar",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mdcElem",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mdcComponent",
              "type": {
                "text": "MDCDialog | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "_popstateEventBind",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "isOpen",
              "privacy": "public",
              "readonly": true,
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "open",
              "privacy": "public",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "close",
              "privacy": "public",
              "parameters": [
                {
                  "name": "action",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "_onDialogOpened",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "_onDialogClosed",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "action",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "_onBrowserNavigate",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "PopStateEvent"
                  }
                }
              ],
              "description": "Function callback for when the browser window navigates to another place.\r\nWe attempt to close the dialog when this occurs.",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            }
          ],
          "events": [
            {
              "type": {
                "text": "OrMwcDialogOpenedEvent"
              },
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "name": "action",
              "type": {
                "text": "OrMwcDialogClosedEvent"
              },
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "TODO: Remove this, and export the ./assettype-attribute-picker file",
          "name": "OrAssetTypeAttributePickerPickedEvent",
          "superclass": {
            "name": "AssetTypeAttributePickerPickedEvent",
            "module": "/or-attribute-picker/src/assettype-attribute-picker"
          },
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-asset-type-attribute-picker-picked\"",
              "inheritedFrom": {
                "name": "AssetTypeAttributePickerPickedEvent",
                "module": "../or-attribute-picker/src/assettype-attribute-picker.ts"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "TODO: Remove this, and export the ./assettype-attribute-picker file",
          "name": "OrAssetTypeAttributePicker",
          "superclass": {
            "name": "AssetTypeAttributePicker",
            "module": "/or-attribute-picker/src/assettype-attribute-picker"
          },
          "tagName": "or-assettype-attribute-picker",
          "customElement": true,
          "attributes": [
            {
              "type": {
                "text": "(descriptor: AssetDescriptor) => boolean | undefined"
              },
              "description": "-Callback method for consumers to filter the asset type list shown. Returning true will make the asset type visible, returning false hides it.",
              "name": "assetTypeFilter",
              "fieldName": "assetTypeFilter",
              "inheritedFrom": {
                "name": "AssetTypeAttributePicker",
                "module": "../or-attribute-picker/src/assettype-attribute-picker.ts"
              }
            },
            {
              "type": {
                "text": "(descriptor: AttributeDescriptor) => boolean | undefined"
              },
              "description": "Callback method for consumers to filter the attribute list shown. Returning true will make the attribute visible, returning false hides it.",
              "name": "attributeFilter",
              "fieldName": "attributeFilter",
              "inheritedFrom": {
                "name": "AssetTypeAttributePicker",
                "module": "../or-attribute-picker/src/assettype-attribute-picker.ts"
              }
            },
            {
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether selecting multiple attributes is allowed or not.",
              "name": "multiSelect",
              "default": "false",
              "fieldName": "multiSelect",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether only attributes with the 'STORE_DATAPOINT' meta item should be shown.",
              "name": "showOnlyDatapointAttrs",
              "default": "false",
              "fieldName": "showOnlyDatapointAttrs",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether only attributes with the 'RULE_STATE' meta item should be shown.",
              "name": "showOnlyRuleStateAttrs",
              "default": "false",
              "fieldName": "showOnlyRuleStateAttrs",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "name": "heading",
              "type": {
                "text": "string | TemplateResult | undefined"
              },
              "fieldName": "heading",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "name": "avatar",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "avatar",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "name": "styles",
              "readonly": true,
              "fieldName": "styles",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "assetTypeFilter",
              "type": {
                "text": "(descriptor: AssetDescriptor) => boolean | undefined"
              },
              "privacy": "public",
              "attribute": "assetTypeFilter",
              "inheritedFrom": {
                "name": "AssetTypeAttributePicker",
                "module": "../or-attribute-picker/src/assettype-attribute-picker.ts"
              }
            },
            {
              "kind": "field",
              "name": "attributeFilter",
              "type": {
                "text": "(descriptor: AttributeDescriptor) => boolean | undefined"
              },
              "privacy": "public",
              "attribute": "attributeFilter",
              "inheritedFrom": {
                "name": "AssetTypeAttributePicker",
                "module": "../or-attribute-picker/src/assettype-attribute-picker.ts"
              }
            },
            {
              "kind": "field",
              "name": "selectedAttributes",
              "type": {
                "text": "Map<string, AttributeDescriptor[]>"
              },
              "privacy": "public",
              "default": "new Map()",
              "inheritedFrom": {
                "name": "AssetTypeAttributePicker",
                "module": "../or-attribute-picker/src/assettype-attribute-picker.ts"
              }
            },
            {
              "kind": "field",
              "name": "_selectedAssetType",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "AssetTypeAttributePicker",
                "module": "../or-attribute-picker/src/assettype-attribute-picker.ts"
              }
            },
            {
              "kind": "field",
              "name": "_loadedAttributeTypes",
              "type": {
                "text": "AttributeDescriptor[] | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "AssetTypeAttributePicker",
                "module": "../or-attribute-picker/src/assettype-attribute-picker.ts"
              }
            },
            {
              "kind": "field",
              "name": "_loadedAssetTypes",
              "type": {
                "text": "AssetDescriptor[] | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "AssetTypeAttributePicker",
                "module": "../or-attribute-picker/src/assettype-attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "setSelectedAttributes",
              "privacy": "public",
              "parameters": [
                {
                  "name": "selectedAttributes",
                  "type": {
                    "text": "Map<string, AttributeDescriptor[]>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "AssetTypeAttributePicker",
                "module": "../or-attribute-picker/src/assettype-attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "_loadAssetTypes",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "AssetDescriptor[]"
                }
              },
              "description": "Function that will load and update the available asset types up for selection.\r\nAlso applies the filtering such as assetTypeFilter if set.",
              "inheritedFrom": {
                "name": "AssetTypeAttributePicker",
                "module": "../or-attribute-picker/src/assettype-attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "_loadAttributeTypes",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "AttributeDescriptor[]"
                }
              },
              "parameters": [
                {
                  "name": "descriptor",
                  "type": {
                    "text": "AssetDescriptor"
                  }
                }
              ],
              "description": "Function that will load and update the available attributes up for selection.\r\nThe descriptor parameter is usually the selected asset type.\r\nAlso applies the filtering such as showOnlyDatapointAttrs, showOnlyRuleStateAttrs and attributeFilter if set.",
              "inheritedFrom": {
                "name": "AssetTypeAttributePicker",
                "module": "../or-attribute-picker/src/assettype-attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "_setDialogContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "_setDialogActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "_onAssetTypeItemClick",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "listItem",
                  "type": {
                    "text": "ListItem"
                  }
                }
              ],
              "description": "HTML Callback function when the selected asset type has been updated.",
              "inheritedFrom": {
                "name": "AssetTypeAttributePicker",
                "module": "../or-attribute-picker/src/assettype-attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "_onAttributesSelect",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "attrNames",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "description": "HTML callback function when the selected attributes have been updated.",
              "inheritedFrom": {
                "name": "AssetTypeAttributePicker",
                "module": "../or-attribute-picker/src/assettype-attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "_getAssetTypeDescriptors",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "ListItem[]"
                }
              },
              "parameters": [
                {
                  "name": "descriptors",
                  "type": {
                    "text": "AssetDescriptor[]"
                  }
                },
                {
                  "name": "selected",
                  "optional": true,
                  "type": {
                    "text": "AssetDescriptor[]"
                  }
                },
                {
                  "name": "withNoneValue",
                  "optional": true,
                  "type": {
                    "text": "ListItem"
                  }
                }
              ],
              "description": "Function that maps the AssetDescriptors to the formatted ListItems.\r\nUses helpers like Util.getAssetTypeLabel and sorts by descriptorType so that agents show up first.",
              "inheritedFrom": {
                "name": "AssetTypeAttributePicker",
                "module": "../or-attribute-picker/src/assettype-attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "_getAssetDescriptorByName",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "AssetDescriptor | undefined"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Utility method to get the cached AssetDescriptor by its name",
              "inheritedFrom": {
                "name": "AssetTypeAttributePicker",
                "module": "../or-attribute-picker/src/assettype-attribute-picker.ts"
              }
            },
            {
              "kind": "field",
              "name": "multiSelect",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "multiSelect",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "field",
              "name": "showOnlyDatapointAttrs",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "showOnlyDatapointAttrs",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "field",
              "name": "showOnlyRuleStateAttrs",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "showOnlyRuleStateAttrs",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "field",
              "name": "addBtn",
              "type": {
                "text": "OrMwcInput"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "setShowOnlyDatapointAttrs",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "showOnlyDatapointAttrs",
                  "type": {
                    "text": "boolean | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "setShowOnlyRuleStateAttrs",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "showOnlyRuleStateAttrs",
                  "type": {
                    "text": "boolean | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "setMultiSelect",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "multiSelect",
                  "type": {
                    "text": "boolean | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "setOpen",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "isOpen",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "setHeading",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "heading",
                  "type": {
                    "text": "TemplateResult | string | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "setContent",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "_content",
                  "type": {
                    "text": "TemplateResult | (() => TemplateResult) | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "setActions",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "_actions",
                  "type": {
                    "text": "DialogAction[] | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "setDismissAction",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "_action",
                  "type": {
                    "text": "DialogActionBase | null | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "setStyles",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "_styles",
                  "type": {
                    "text": "string | TemplateResult | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "setAvatar",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "_avatar",
                  "type": {
                    "text": "boolean | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "_updateDialogContent",
              "privacy": "protected",
              "description": "Convenient function to update the dialog content manually,\r\nsince updating the UI is handled different for OrMwcDialog.",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "_updateDialogActions",
              "privacy": "protected",
              "description": "Convenient function to update the dialog actions manually,\r\nsince updating the UI is handled different for OrMwcDialog.",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "_getAttributesTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<TemplateResult>"
                }
              },
              "parameters": [
                {
                  "name": "attributes",
                  "optional": true,
                  "type": {
                    "text": "Attribute<any>[]"
                  }
                },
                {
                  "name": "descriptors",
                  "optional": true,
                  "type": {
                    "text": "AttributeDescriptor[]"
                  }
                },
                {
                  "name": "selectedNames",
                  "optional": true,
                  "type": {
                    "text": "string[]"
                  }
                },
                {
                  "name": "multi",
                  "default": "false"
                },
                {
                  "name": "onSelect",
                  "optional": true,
                  "type": {
                    "text": "(attrNames: string[]) => void"
                  }
                }
              ],
              "description": "Function that creates the HTML template for selecting attributes.\r\nCurrently uses OrMwcList with or without checkboxes, and uses Util.getAttributeLabel to formulate the text.",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "method",
              "name": "_getStyles",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "description": "Simple function that creates the CSS styles for this component",
              "inheritedFrom": {
                "name": "AttributePicker",
                "module": "../or-attribute-picker/src/attribute-picker.ts"
              }
            },
            {
              "kind": "field",
              "name": "DialogHostElement",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "public",
              "static": true,
              "description": "Can be set by apps to control where in the DOM dialogs are added",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "heading",
              "type": {
                "text": "string | TemplateResult | undefined"
              },
              "privacy": "public",
              "attribute": "heading",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "content",
              "type": {
                "text": "TemplateResult | (() => TemplateResult) | undefined"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "actions",
              "type": {
                "text": "DialogAction[] | undefined"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "dismissAction",
              "type": {
                "text": "DialogActionBase | null | undefined"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "avatar",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "attribute": "avatar",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mdcElem",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mdcComponent",
              "type": {
                "text": "MDCDialog | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "_popstateEventBind",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "field",
              "name": "isOpen",
              "privacy": "public",
              "readonly": true,
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "open",
              "privacy": "public",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "close",
              "privacy": "public",
              "parameters": [
                {
                  "name": "action",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "_onDialogOpened",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "_onDialogClosed",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "action",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "kind": "method",
              "name": "_onBrowserNavigate",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "PopStateEvent"
                  }
                }
              ],
              "description": "Function callback for when the browser window navigates to another place.\r\nWe attempt to close the dialog when this occurs.",
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            }
          ],
          "events": [
            {
              "type": {
                "text": "OrMwcDialogOpenedEvent"
              },
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            },
            {
              "name": "action",
              "type": {
                "text": "OrMwcDialogClosedEvent"
              },
              "inheritedFrom": {
                "name": "OrMwcDialog",
                "module": "../or-mwc-components/src/or-mwc-dialog.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrAttributePickerPickedEvent",
          "declaration": {
            "name": "OrAttributePickerPickedEvent",
            "module": "../or-attribute-picker/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAttributePicker",
          "declaration": {
            "name": "OrAttributePicker",
            "module": "../or-attribute-picker/src/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-attribute-picker",
          "declaration": {
            "name": "OrAttributePicker",
            "module": "../or-attribute-picker/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetTypeAttributePickerPickedEvent",
          "declaration": {
            "name": "OrAssetTypeAttributePickerPickedEvent",
            "module": "../or-attribute-picker/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAssetTypeAttributePicker",
          "declaration": {
            "name": "OrAssetTypeAttributePicker",
            "module": "../or-attribute-picker/src/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-assettype-attribute-picker",
          "declaration": {
            "name": "OrAssetTypeAttributePicker",
            "module": "../or-attribute-picker/src/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-bottom-navigation/src/or-bottom-navigation.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrBottomNavigation",
          "members": [
            {
              "kind": "field",
              "name": "_iconsCss",
              "type": {
                "text": "HTMLLinkElement | null"
              },
              "static": true,
              "default": "null"
            },
            {
              "kind": "field",
              "name": "iconsUrl",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "\"https://fonts.googleapis.com/icon?family=Material+Icons\""
            },
            {
              "kind": "field",
              "name": "_observer",
              "type": {
                "text": "FlattenedNodesObserver | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_temp",
              "type": {
                "text": "number[]"
              },
              "privacy": "protected",
              "default": "[1,2,3,4]"
            },
            {
              "kind": "field",
              "name": "_virtualItems",
              "type": {
                "text": "OrNavigationItem[]"
              },
              "privacy": "protected",
              "default": "[]",
              "attribute": "_virtualItems"
            },
            {
              "kind": "field",
              "name": "_itemsSlot",
              "type": {
                "text": "HTMLSlotElement"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_onAdd",
              "privacy": "private",
              "parameters": [
                {
                  "name": "nodes",
                  "type": {
                    "text": "Element[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onRemove",
              "privacy": "private",
              "parameters": [
                {
                  "name": "nodes",
                  "type": {
                    "text": "Element[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_virtualTemplate",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "navItem",
                  "type": {
                    "text": "OrNavigationItem"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "_virtualItems",
              "type": {
                "text": "OrNavigationItem[]"
              },
              "default": "[]",
              "fieldName": "_virtualItems"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-bottom-navigation",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrBottomNavigation",
          "declaration": {
            "name": "OrBottomNavigation",
            "module": "../or-bottom-navigation/src/or-bottom-navigation.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-bottom-navigation",
          "declaration": {
            "name": "OrBottomNavigation",
            "module": "../or-bottom-navigation/src/or-bottom-navigation.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-bottom-navigation/src/or-navigation-item.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrNavigationItem",
          "members": [
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "string | null"
              },
              "default": "null",
              "attribute": "icon"
            },
            {
              "kind": "field",
              "name": "text",
              "type": {
                "text": "string | null"
              },
              "default": "null",
              "attribute": "text"
            }
          ],
          "attributes": [
            {
              "name": "icon",
              "type": {
                "text": "string | null"
              },
              "default": "null",
              "fieldName": "icon"
            },
            {
              "name": "text",
              "type": {
                "text": "string | null"
              },
              "default": "null",
              "fieldName": "text"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-navigation-item",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrNavigationItem",
          "declaration": {
            "name": "OrNavigationItem",
            "module": "../or-bottom-navigation/src/or-navigation-item.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-navigation-item",
          "declaration": {
            "name": "OrNavigationItem",
            "module": "../or-bottom-navigation/src/or-navigation-item.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-chart/src/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrChartEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-chart-event\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-chart/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrChart",
          "members": [
            {
              "kind": "field",
              "name": "DEFAULT_TIMESTAMP_FORMAT",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "default": "\"L HH:mm:ss\""
            },
            {
              "kind": "field",
              "name": "assets",
              "type": {
                "text": "Asset[]"
              },
              "privacy": "public",
              "default": "[]",
              "attribute": "assets"
            },
            {
              "kind": "field",
              "name": "activeAsset",
              "type": {
                "text": "Asset | undefined"
              },
              "privacy": "private",
              "attribute": "activeAsset"
            },
            {
              "kind": "field",
              "name": "assetAttributes",
              "type": {
                "text": "[number, Attribute<any>][]"
              },
              "privacy": "public",
              "default": "[]",
              "attribute": "assetAttributes"
            },
            {
              "kind": "field",
              "name": "rightAxisAttributes",
              "type": {
                "text": "AttributeRef[]"
              },
              "privacy": "public",
              "default": "[]",
              "attribute": "rightAxisAttributes"
            },
            {
              "kind": "field",
              "name": "dataProvider",
              "type": {
                "text": "(startOfPeriod: number, endOfPeriod: number, timeUnits: TimeUnit, stepSize: number) => Promise<ChartDataset<\"line\", ScatterDataPoint[]>[]> | undefined"
              },
              "privacy": "public",
              "attribute": "dataProvider"
            },
            {
              "kind": "field",
              "name": "colors",
              "type": {
                "text": "string[]"
              },
              "privacy": "public",
              "default": "[\"#3869B1\", \"#DA7E30\", \"#3F9852\", \"#CC2428\", \"#6B4C9A\", \"#922427\", \"#958C3D\", \"#535055\"]",
              "attribute": "colors"
            },
            {
              "kind": "field",
              "name": "datapointQuery",
              "type": {
                "text": "AssetDatapointQueryUnion"
              },
              "privacy": "public",
              "readonly": true,
              "attribute": "datapointQuery"
            },
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "OrChartConfig | undefined"
              },
              "privacy": "public",
              "attribute": "config"
            },
            {
              "kind": "field",
              "name": "chartOptions",
              "type": {
                "text": "any | undefined"
              },
              "privacy": "public",
              "attribute": "chartOptions"
            },
            {
              "kind": "field",
              "name": "realm",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "realm"
            },
            {
              "kind": "field",
              "name": "panelName",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "panelName"
            },
            {
              "kind": "field",
              "name": "attributeControls",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "attribute": "attributeControls"
            },
            {
              "kind": "field",
              "name": "timeframe",
              "type": {
                "text": "[Date, Date] | undefined"
              },
              "privacy": "public",
              "attribute": "timeframe"
            },
            {
              "kind": "field",
              "name": "timestampControls",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "attribute": "timestampControls"
            },
            {
              "kind": "field",
              "name": "timePresetOptions",
              "type": {
                "text": "Map<string, TimePresetCallback> | undefined"
              },
              "privacy": "public",
              "attribute": "timePresetOptions"
            },
            {
              "kind": "field",
              "name": "timePresetKey",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "timePresetKey"
            },
            {
              "kind": "field",
              "name": "showLegend",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "attribute": "showLegend"
            },
            {
              "kind": "field",
              "name": "denseLegend",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "denseLegend"
            },
            {
              "kind": "field",
              "name": "_loading",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "attribute": "_loading"
            },
            {
              "kind": "field",
              "name": "_data",
              "type": {
                "text": "ChartDataset<\"line\", ScatterDataPoint[]>[] | undefined"
              },
              "privacy": "protected",
              "default": "undefined",
              "attribute": "_data"
            },
            {
              "kind": "field",
              "name": "_tableTemplate",
              "type": {
                "text": "TemplateResult | undefined"
              },
              "privacy": "protected",
              "attribute": "_tableTemplate"
            },
            {
              "kind": "field",
              "name": "_chartElem",
              "type": {
                "text": "HTMLCanvasElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_chart",
              "type": {
                "text": "Chart | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_style",
              "type": {
                "text": "CSSStyleDeclaration"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_startOfPeriod",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_endOfPeriod",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_timeUnits",
              "type": {
                "text": "TimeUnit | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_stepSize",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_latestError",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_dataAbortController",
              "type": {
                "text": "AbortController | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "applyChartResponsiveness",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_onTreeSelectionChanged",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "OrAssetTreeSelectionEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "removeDatasetHighlight",
              "parameters": [
                {
                  "name": "bgColor",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "addDatasetHighlight",
              "parameters": [
                {
                  "name": "assetId",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "attrName",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "loadSettings",
              "parameters": [
                {
                  "name": "reset",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "saveSettings"
            },
            {
              "kind": "method",
              "name": "_openDialog",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_openTimeDialog",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "startTimestamp",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "endTimestamp",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_addAttribute",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selectedAttrs",
                  "optional": true,
                  "type": {
                    "text": "AttributeRef[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getSelectedAttributes",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "onCompleted"
            },
            {
              "kind": "method",
              "name": "_cleanup",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_deleteAttribute",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "index",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getAttributeOptionsOld",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "[string, string][] | undefined"
                }
              }
            },
            {
              "kind": "method",
              "name": "_getAttributeOptions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "[string, string][] | undefined"
                }
              }
            },
            {
              "kind": "method",
              "name": "_getDefaultTimestampOptions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Map<string, TimePresetCallback>"
                }
              }
            },
            {
              "kind": "method",
              "name": "_getInterval",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "[number, DatapointInterval]"
                }
              },
              "parameters": [
                {
                  "name": "diffInHours",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_loadData",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_loadAttributeData",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<ChartDataset<\"line\", ScatterDataPoint[]>>"
                }
              },
              "parameters": [
                {
                  "name": "asset",
                  "type": {
                    "text": "Asset"
                  }
                },
                {
                  "name": "attribute",
                  "type": {
                    "text": "Attribute<any>"
                  }
                },
                {
                  "name": "color",
                  "type": {
                    "text": "string | undefined"
                  }
                },
                {
                  "name": "from",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "to",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "predicted",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "label",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "resize",
              "type": {
                "text": "OrChartEvent"
              }
            },
            {
              "name": "rendered",
              "type": {
                "text": "OrChartEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "assets",
              "type": {
                "text": "Asset[]"
              },
              "default": "[]",
              "fieldName": "assets"
            },
            {
              "name": "activeAsset",
              "type": {
                "text": "Asset | undefined"
              },
              "fieldName": "activeAsset"
            },
            {
              "name": "assetAttributes",
              "type": {
                "text": "[number, Attribute<any>][]"
              },
              "default": "[]",
              "fieldName": "assetAttributes"
            },
            {
              "name": "rightAxisAttributes",
              "type": {
                "text": "AttributeRef[]"
              },
              "default": "[]",
              "fieldName": "rightAxisAttributes"
            },
            {
              "name": "dataProvider",
              "type": {
                "text": "(startOfPeriod: number, endOfPeriod: number, timeUnits: TimeUnit, stepSize: number) => Promise<ChartDataset<\"line\", ScatterDataPoint[]>[]> | undefined"
              },
              "fieldName": "dataProvider"
            },
            {
              "name": "colors",
              "type": {
                "text": "string[]"
              },
              "default": "[\"#3869B1\", \"#DA7E30\", \"#3F9852\", \"#CC2428\", \"#6B4C9A\", \"#922427\", \"#958C3D\", \"#535055\"]",
              "fieldName": "colors"
            },
            {
              "name": "datapointQuery",
              "type": {
                "text": "AssetDatapointQueryUnion"
              },
              "readonly": true,
              "fieldName": "datapointQuery"
            },
            {
              "name": "config",
              "type": {
                "text": "OrChartConfig | undefined"
              },
              "fieldName": "config"
            },
            {
              "name": "chartOptions",
              "type": {
                "text": "any | undefined"
              },
              "fieldName": "chartOptions"
            },
            {
              "name": "realm",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "realm"
            },
            {
              "name": "panelName",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "panelName"
            },
            {
              "name": "attributeControls",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "fieldName": "attributeControls"
            },
            {
              "name": "timeframe",
              "type": {
                "text": "[Date, Date] | undefined"
              },
              "fieldName": "timeframe"
            },
            {
              "name": "timestampControls",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "fieldName": "timestampControls"
            },
            {
              "name": "timePresetOptions",
              "type": {
                "text": "Map<string, TimePresetCallback> | undefined"
              },
              "fieldName": "timePresetOptions"
            },
            {
              "name": "timePresetKey",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "timePresetKey"
            },
            {
              "name": "showLegend",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "fieldName": "showLegend"
            },
            {
              "name": "denseLegend",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "denseLegend"
            },
            {
              "name": "_loading",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "_loading"
            },
            {
              "name": "_data",
              "type": {
                "text": "ChartDataset<\"line\", ScatterDataPoint[]>[] | undefined"
              },
              "default": "undefined",
              "fieldName": "_data"
            },
            {
              "name": "_tableTemplate",
              "type": {
                "text": "TemplateResult | undefined"
              },
              "fieldName": "_tableTemplate"
            }
          ],
          "mixins": [
            {
              "name": "translate(i18next)",
              "module": "../or-chart/src/index.ts"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-chart",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrChartEvent",
          "declaration": {
            "name": "OrChartEvent",
            "module": "../or-chart/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrChart",
          "declaration": {
            "name": "OrChart",
            "module": "../or-chart/src/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-chart",
          "declaration": {
            "name": "OrChart",
            "module": "../or-chart/src/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-components/src/or-ace-editor.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrAceEditorChangedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-ace-editor-changed\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-components/src/or-ace-editor.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAceEditorEditEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-ace-editor-edit\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-components/src/or-ace-editor.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrAceEditor",
          "members": [
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "any | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "\"ace/mode/json\""
            },
            {
              "kind": "field",
              "name": "_aceElem",
              "type": {
                "text": "HTMLElement | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_aceEditor",
              "type": {
                "text": "Ace.Editor | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_lastValue",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "default": "\"\""
            },
            {
              "kind": "field",
              "name": "_editing",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_changeTimer",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "destroyEditor",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "initEditor",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_onEditorEdit",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_onEditorChange",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "getValue",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "string | undefined"
                }
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            }
          ],
          "events": [
            {
              "type": {
                "text": "OrAceEditorEditEvent"
              }
            },
            {
              "name": "newValue",
              "type": {
                "text": "OrAceEditorChangedEvent"
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-ace-editor",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrAceEditorChangedEvent",
          "declaration": {
            "name": "OrAceEditorChangedEvent",
            "module": "../or-components/src/or-ace-editor.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAceEditorEditEvent",
          "declaration": {
            "name": "OrAceEditorEditEvent",
            "module": "../or-components/src/or-ace-editor.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrAceEditor",
          "declaration": {
            "name": "OrAceEditor",
            "module": "../or-components/src/or-ace-editor.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-ace-editor",
          "declaration": {
            "name": "OrAceEditor",
            "module": "../or-components/src/or-ace-editor.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-components/src/or-collapsible-panel.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrCollapsiblePanel",
          "members": [
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "expanded"
            },
            {
              "kind": "field",
              "name": "expandable",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "attribute": "expandable"
            },
            {
              "kind": "field",
              "name": "headerElem",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_onHeaderClicked",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "expanded"
            },
            {
              "name": "expandable",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "fieldName": "expandable"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-collapsible-panel",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrCollapsiblePanel",
          "declaration": {
            "name": "OrCollapsiblePanel",
            "module": "../or-components/src/or-collapsible-panel.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-collapsible-panel",
          "declaration": {
            "name": "OrCollapsiblePanel",
            "module": "../or-components/src/or-collapsible-panel.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-components/src/or-file-uploader.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrFileUploader",
          "members": [
            {
              "kind": "field",
              "name": "src",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "readonly": true,
              "default": "\"\""
            },
            {
              "kind": "field",
              "name": "managerUrl",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "readonly": true,
              "default": "\"\""
            },
            {
              "kind": "field",
              "name": "title",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "readonly": true,
              "default": "\"\"",
              "attribute": "title"
            },
            {
              "kind": "field",
              "name": "accept",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "readonly": true,
              "default": "\"image/png,image/jpeg,image/vnd.microsoft.icon,image/svg+xml\""
            },
            {
              "kind": "field",
              "name": "loading",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "files",
              "type": {
                "text": "FileInfo[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "Files",
              "type": {
                "text": "FileInfo[]"
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "_onChange",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "change",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "title",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "default": "\"\"",
              "fieldName": "title"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-file-uploader",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrFileUploader",
          "declaration": {
            "name": "OrFileUploader",
            "module": "../or-components/src/or-file-uploader.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-file-uploader",
          "declaration": {
            "name": "OrFileUploader",
            "module": "../or-components/src/or-file-uploader.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-components/src/or-form.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "This is a form element that supports any element that has a value property",
          "name": "OrForm",
          "members": [
            {
              "kind": "field",
              "name": "formNodes",
              "type": {
                "text": "Node[]"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "checkValidity",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "reportValidity",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "submit",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "{[key: string]: any}"
                }
              }
            },
            {
              "kind": "method",
              "name": "reset",
              "privacy": "public"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-form",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrForm",
          "declaration": {
            "name": "OrForm",
            "module": "../or-components/src/or-form.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-form",
          "declaration": {
            "name": "OrForm",
            "module": "../or-components/src/or-form.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-components/src/or-loading-indicator.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrLoadingIndicator",
          "members": [
            {
              "kind": "field",
              "name": "overlay",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "overlay"
            }
          ],
          "attributes": [
            {
              "name": "overlay",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "overlay"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-loading-indicator",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrLoadingIndicator",
          "declaration": {
            "name": "OrLoadingIndicator",
            "module": "../or-components/src/or-loading-indicator.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-loading-indicator",
          "declaration": {
            "name": "OrLoadingIndicator",
            "module": "../or-components/src/or-loading-indicator.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-components/src/or-loading-wrapper.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A simple loading wrapper around some other content that will hide the content whilst loading property is true",
          "name": "OrLoadingWrapper",
          "members": [
            {
              "kind": "field",
              "name": "loadingHeight",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "attribute": "loadingHeight"
            },
            {
              "kind": "field",
              "name": "loadDom",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "attribute": "loadDom"
            },
            {
              "kind": "field",
              "name": "fadeContent",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "fadeContent"
            },
            {
              "kind": "field",
              "name": "loading",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "loading"
            },
            {
              "kind": "field",
              "name": "content",
              "type": {
                "text": "TemplateResult | undefined"
              },
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "loadingHeight",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "loadingHeight"
            },
            {
              "name": "loadDom",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "fieldName": "loadDom"
            },
            {
              "name": "fadeContent",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "fadeContent"
            },
            {
              "name": "loading",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "loading"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-loading-wrapper",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrLoadingWrapper",
          "declaration": {
            "name": "OrLoadingWrapper",
            "module": "../or-components/src/or-loading-wrapper.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-loading-wrapper",
          "declaration": {
            "name": "OrLoadingWrapper",
            "module": "../or-components/src/or-loading-wrapper.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-components/src/or-panel.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrPanel",
          "members": [
            {
              "kind": "field",
              "name": "zLevel",
              "type": {
                "text": "number | undefined"
              },
              "attribute": "zLevel"
            },
            {
              "kind": "field",
              "name": "heading",
              "type": {
                "text": "string | TemplateResult | undefined"
              },
              "privacy": "public",
              "attribute": "heading"
            },
            {
              "kind": "field",
              "name": "_panel",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "protected"
            }
          ],
          "attributes": [
            {
              "name": "zLevel",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "zLevel"
            },
            {
              "name": "heading",
              "type": {
                "text": "string | TemplateResult | undefined"
              },
              "fieldName": "heading"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-panel",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrPanel",
          "declaration": {
            "name": "OrPanel",
            "module": "../or-components/src/or-panel.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-panel",
          "declaration": {
            "name": "OrPanel",
            "module": "../or-components/src/or-panel.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-dashboard-builder/src/index.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "MAX_BREAKPOINT",
          "type": {
            "text": "number"
          },
          "default": "1000000"
        },
        {
          "kind": "function",
          "name": "scalingPresetToString",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "scalingPreset",
              "type": {
                "text": "DashboardScalingPreset | undefined"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "dashboardAccessToString",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "access",
              "type": {
                "text": "DashboardAccess"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "sortScreenPresets",
          "return": {
            "type": {
              "text": "DashboardScreenPreset[]"
            }
          },
          "parameters": [
            {
              "name": "presets",
              "type": {
                "text": "DashboardScreenPreset[]"
              }
            },
            {
              "name": "largetosmall",
              "default": "false",
              "type": {
                "text": "boolean"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getActivePreset",
          "return": {
            "type": {
              "text": "DashboardScreenPreset | undefined"
            }
          },
          "parameters": [
            {
              "name": "gridWidth",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "presets",
              "type": {
                "text": "DashboardScreenPreset[]"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "widgetTypes",
          "type": {
            "text": "Map<string, WidgetManifest>"
          },
          "default": "new Map<string, WidgetManifest>()"
        },
        {
          "kind": "function",
          "name": "registerWidgetTypes"
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrDashboardBuilder",
          "members": [
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "DashboardBuilderConfig | undefined"
              },
              "privacy": "protected",
              "readonly": true,
              "attribute": "config"
            },
            {
              "kind": "field",
              "name": "editMode",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "readonly": true,
              "default": "false",
              "attribute": "editMode"
            },
            {
              "kind": "field",
              "name": "fullscreen",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "readonly": true,
              "default": "true",
              "attribute": "fullscreen"
            },
            {
              "kind": "field",
              "name": "selectedId",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected",
              "readonly": true,
              "attribute": "selectedId"
            },
            {
              "kind": "field",
              "name": "realm",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "attribute": "realm"
            },
            {
              "kind": "field",
              "name": "userId",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "attribute": "userId"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "readonly": true,
              "default": "true",
              "attribute": "readonly"
            },
            {
              "kind": "field",
              "name": "dashboards",
              "type": {
                "text": "Dashboard[] | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "currentTemplate",
              "type": {
                "text": "DashboardTemplate | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "selectedDashboard",
              "type": {
                "text": "Dashboard | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "selectedWidgetId",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "initialDashboardJSON",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "initialTemplateJSON",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "refreshInterval",
              "type": {
                "text": "DashboardRefreshInterval"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "isInitializing",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "true"
            },
            {
              "kind": "field",
              "name": "isLoading",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "true"
            },
            {
              "kind": "field",
              "name": "hasChanged",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "dashboardPreview",
              "type": {
                "text": "OrDashboardPreview | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "refreshTimer",
              "type": {
                "text": "ReturnType<typeof setInterval> | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "keyEmitter",
              "type": {
                "text": "DashboardKeyEmitter"
              },
              "privacy": "private",
              "readonly": true,
              "default": "new DashboardKeyEmitter()"
            },
            {
              "kind": "method",
              "name": "setRefreshTimer",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "millis",
                  "type": {
                    "text": "number | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "clearRefreshTimer",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "loadAllDashboards",
              "parameters": [
                {
                  "name": "realm",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onWidgetCreation",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "widget",
                  "type": {
                    "text": "DashboardWidget"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "deleteWidget",
              "parameters": [
                {
                  "name": "widget",
                  "type": {
                    "text": "DashboardWidget"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "selectWidget",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "widget",
                  "type": {
                    "text": "DashboardWidget"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "deselectWidget"
            },
            {
              "kind": "method",
              "name": "selectDashboard",
              "parameters": [
                {
                  "name": "dashboard",
                  "type": {
                    "text": "Dashboard | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "changeDashboardName",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "openDashboardInInsights"
            },
            {
              "kind": "method",
              "name": "shareUrl",
              "parameters": [
                {
                  "name": "method",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "saveDashboard"
            },
            {
              "kind": "method",
              "name": "_isReadonly",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "_hasEditAccess",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "_hasViewAccess",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "field",
              "name": "sidebarMenuIndex",
              "type": {
                "text": "number"
              },
              "privacy": "protected",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "showDashboardTree",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "true"
            },
            {
              "kind": "field",
              "name": "menuItems",
              "type": {
                "text": "ListItem[]"
              },
              "privacy": "private",
              "readonly": true,
              "default": "[ { icon: \"content-copy\", text: (i18next.t(\"copy\") + \" URL\"), value: \"copy\" }, { icon: \"open-in-new\", text: i18next.t(\"dashboard.openInNewTab\"), value: \"tab\" }, ]"
            },
            {
              "kind": "field",
              "name": "tabItems",
              "type": {
                "text": "OrMwcTabItem[]"
              },
              "privacy": "private",
              "readonly": true,
              "default": "[ { name: i18next.t(\"dashboard.widgets\") }, { name: i18next.t(\"settings\") } ]"
            },
            {
              "kind": "method",
              "name": "onIntervalSelect",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "IntervalSelectEvent"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "selected",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "editToggle",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "fullscreenToggle",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "config",
              "type": {
                "text": "DashboardBuilderConfig | undefined"
              },
              "readonly": true,
              "fieldName": "config"
            },
            {
              "name": "editMode",
              "type": {
                "text": "boolean"
              },
              "readonly": true,
              "default": "false",
              "fieldName": "editMode"
            },
            {
              "name": "fullscreen",
              "type": {
                "text": "boolean"
              },
              "readonly": true,
              "default": "true",
              "fieldName": "fullscreen"
            },
            {
              "name": "selectedId",
              "type": {
                "text": "string | undefined"
              },
              "readonly": true,
              "fieldName": "selectedId"
            },
            {
              "name": "realm",
              "type": {
                "text": "string"
              },
              "fieldName": "realm"
            },
            {
              "name": "userId",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "fieldName": "userId"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "readonly": true,
              "default": "true",
              "fieldName": "readonly"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-dashboard-builder",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MAX_BREAKPOINT",
          "declaration": {
            "name": "MAX_BREAKPOINT",
            "module": "../or-dashboard-builder/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "scalingPresetToString",
          "declaration": {
            "name": "scalingPresetToString",
            "module": "../or-dashboard-builder/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "dashboardAccessToString",
          "declaration": {
            "name": "dashboardAccessToString",
            "module": "../or-dashboard-builder/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "sortScreenPresets",
          "declaration": {
            "name": "sortScreenPresets",
            "module": "../or-dashboard-builder/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "getActivePreset",
          "declaration": {
            "name": "getActivePreset",
            "module": "../or-dashboard-builder/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "widgetTypes",
          "declaration": {
            "name": "widgetTypes",
            "module": "../or-dashboard-builder/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerWidgetTypes",
          "declaration": {
            "name": "registerWidgetTypes",
            "module": "../or-dashboard-builder/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrDashboardBuilder",
          "declaration": {
            "name": "OrDashboardBuilder",
            "module": "../or-dashboard-builder/src/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-dashboard-builder",
          "declaration": {
            "name": "OrDashboardBuilder",
            "module": "../or-dashboard-builder/src/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-dashboard-builder/src/or-dashboard-boardsettings.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrDashboardBoardsettings",
          "members": [
            {
              "kind": "field",
              "name": "dashboard",
              "type": {
                "text": "Dashboard"
              },
              "privacy": "protected",
              "readonly": true,
              "attribute": "dashboard"
            },
            {
              "kind": "field",
              "name": "showPerms",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "protected",
              "readonly": true,
              "attribute": "showPerms"
            },
            {
              "kind": "method",
              "name": "forceParentUpdate",
              "parameters": [
                {
                  "name": "force",
                  "default": "false",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setViewAccess",
              "privacy": "private",
              "parameters": [
                {
                  "name": "access",
                  "type": {
                    "text": "DashboardAccess"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setEditAccess",
              "privacy": "private",
              "parameters": [
                {
                  "name": "access",
                  "type": {
                    "text": "DashboardAccess"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setBreakpoint",
              "privacy": "private",
              "parameters": [
                {
                  "name": "presetIndex",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "value",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setRefreshInterval",
              "privacy": "private",
              "parameters": [
                {
                  "name": "interval",
                  "type": {
                    "text": "DashboardRefreshInterval"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setToMobilePreset"
            },
            {
              "kind": "method",
              "name": "scalingPresetTemplate",
              "parameters": [
                {
                  "name": "screenPresets",
                  "type": {
                    "text": "DashboardScreenPreset[]"
                  }
                },
                {
                  "name": "scalingPresets",
                  "type": {
                    "text": "{ key: DashboardScalingPreset, value: string }[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "screenPresetTemplate",
              "parameters": [
                {
                  "name": "screenPresets",
                  "type": {
                    "text": "DashboardScreenPreset[]"
                  }
                },
                {
                  "name": "customLabels",
                  "optional": true,
                  "type": {
                    "text": "string[]"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "update",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "dashboard",
              "type": {
                "text": "Dashboard"
              },
              "readonly": true,
              "fieldName": "dashboard"
            },
            {
              "name": "showPerms",
              "type": {
                "text": "boolean | undefined"
              },
              "readonly": true,
              "fieldName": "showPerms"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-dashboard-boardsettings",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrDashboardBoardsettings",
          "declaration": {
            "name": "OrDashboardBoardsettings",
            "module": "../or-dashboard-builder/src/or-dashboard-boardsettings.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-dashboard-boardsettings",
          "declaration": {
            "name": "OrDashboardBoardsettings",
            "module": "../or-dashboard-builder/src/or-dashboard-boardsettings.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-dashboard-builder/src/or-dashboard-browser.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrDashboardBrowser",
          "members": [
            {
              "kind": "field",
              "name": "sidebarGrid",
              "type": {
                "text": "GridStack | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "backgroundGrid",
              "type": {
                "text": "GridStack | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderGrid",
              "privacy": "protected"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-dashboard-browser",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrDashboardBrowser",
          "declaration": {
            "name": "OrDashboardBrowser",
            "module": "../or-dashboard-builder/src/or-dashboard-browser.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-dashboard-browser",
          "declaration": {
            "name": "OrDashboardBrowser",
            "module": "../or-dashboard-builder/src/or-dashboard-browser.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-dashboard-builder/src/or-dashboard-engine.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrDashboardEngine",
          "members": [
            {
              "kind": "method",
              "name": "moveNode",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "node",
                  "type": {
                    "text": "GridStackNode"
                  }
                },
                {
                  "name": "o",
                  "type": {
                    "text": "GridStackMoveOpts"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "GridStackEngine",
            "package": "gridstack"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrDashboardEngine",
          "declaration": {
            "name": "OrDashboardEngine",
            "module": "../or-dashboard-builder/src/or-dashboard-engine.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-dashboard-builder/src/or-dashboard-keyhandler.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "DashboardKeyEmitter",
          "members": [
            {
              "kind": "field",
              "name": "onkeydown",
              "privacy": "private"
            }
          ],
          "superclass": {
            "name": "EventEmitter",
            "package": "events"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DashboardKeyEmitter",
          "declaration": {
            "name": "DashboardKeyEmitter",
            "module": "../or-dashboard-builder/src/or-dashboard-keyhandler.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-dashboard-builder/src/or-dashboard-preview.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrDashboardPreview",
          "members": [
            {
              "kind": "field",
              "name": "template",
              "attribute": "template"
            },
            {
              "kind": "field",
              "name": "_template",
              "type": {
                "text": "DashboardTemplate | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "dashboardId",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected",
              "readonly": true,
              "attribute": "dashboardId"
            },
            {
              "kind": "field",
              "name": "realm",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected",
              "attribute": "realm"
            },
            {
              "kind": "field",
              "name": "selectedWidget",
              "type": {
                "text": "DashboardWidget | undefined"
              },
              "privacy": "protected",
              "attribute": "selectedWidget"
            },
            {
              "kind": "field",
              "name": "editMode",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "attribute": "editMode"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "true",
              "attribute": "readonly"
            },
            {
              "kind": "field",
              "name": "previewWidth",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected",
              "attribute": "previewWidth"
            },
            {
              "kind": "field",
              "name": "previewHeight",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected",
              "attribute": "previewHeight"
            },
            {
              "kind": "field",
              "name": "previewZoom",
              "type": {
                "text": "number"
              },
              "privacy": "protected",
              "default": "1",
              "attribute": "previewZoom"
            },
            {
              "kind": "field",
              "name": "previewSize",
              "type": {
                "text": "DashboardPreviewSize | undefined"
              },
              "privacy": "protected",
              "attribute": "previewSize"
            },
            {
              "kind": "field",
              "name": "availablePreviewSizes",
              "type": {
                "text": "DashboardPreviewSize[] | undefined"
              },
              "privacy": "protected",
              "attribute": "availablePreviewSizes"
            },
            {
              "kind": "field",
              "name": "fullscreen",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "true",
              "attribute": "fullscreen"
            },
            {
              "kind": "field",
              "name": "latestChanges",
              "type": {
                "text": "{\r\n        changedKeys: string[],\r\n        oldValue: DashboardTemplate,\r\n        newValue: DashboardTemplate\r\n    } | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "activePreset",
              "type": {
                "text": "DashboardScreenPreset | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "rerenderActive",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "isLoading",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "grid",
              "type": {
                "text": "GridStack | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "latestDragWidgetStart",
              "type": {
                "text": "Date | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "setupGrid",
              "parameters": [
                {
                  "name": "recreate",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "force",
                  "default": "false",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "refreshPreview",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "refreshWidgets",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "selectGridItem",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "gridItem",
                  "type": {
                    "text": "GridItemHTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "deselectGridItem",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "gridItem",
                  "type": {
                    "text": "GridItemHTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "deselectGridItems",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "gridItems",
                  "type": {
                    "text": "GridItemHTMLElement[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onGridItemClick",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "gridItem",
                  "type": {
                    "text": "DashboardGridItem | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onFitToScreenClick",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "isPreviewVisible",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "getGridstackColumns",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "number | undefined"
                }
              },
              "parameters": [
                {
                  "name": "grid",
                  "type": {
                    "text": "GridStack | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "isExtraLargeGrid",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "field",
              "name": "cachedGridstackCSS",
              "type": {
                "text": "Map<number, TemplateResult[]>"
              },
              "privacy": "private",
              "default": "new Map<number, TemplateResult[]>()"
            },
            {
              "kind": "method",
              "name": "applyCustomGridstackGridCSS",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "parameters": [
                {
                  "name": "columns",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "resizeObserver",
              "type": {
                "text": "ResizeObserver | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "previousObserverEntry",
              "type": {
                "text": "ResizeObserverEntry | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "setupResizeObserver",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "ResizeObserver"
                }
              },
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "Element"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "resizeObserverCallback",
              "type": {
                "text": "ResizeObserverCallback"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_onGridResize",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "processTemplateChanges",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "changes",
                  "type": {
                    "text": "{ changedKeys: string[], oldValue: DashboardTemplate, newValue: DashboardTemplate }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "waitUntil",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "conditionFunction",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onWidgetDrop",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "_ev",
                  "type": {
                    "text": "Event"
                  }
                },
                {
                  "name": "_prevWidget",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "newWidget",
                  "type": {
                    "text": "DashboardGridNode | undefined"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "deselected",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "selected",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "changed",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "created",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "template",
              "fieldName": "template"
            },
            {
              "name": "dashboardId",
              "type": {
                "text": "string | undefined"
              },
              "readonly": true,
              "fieldName": "dashboardId"
            },
            {
              "name": "realm",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "realm"
            },
            {
              "name": "selectedWidget",
              "type": {
                "text": "DashboardWidget | undefined"
              },
              "fieldName": "selectedWidget"
            },
            {
              "name": "editMode",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "editMode"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "fieldName": "readonly"
            },
            {
              "name": "previewWidth",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "previewWidth"
            },
            {
              "name": "previewHeight",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "previewHeight"
            },
            {
              "name": "previewZoom",
              "type": {
                "text": "number"
              },
              "default": "1",
              "fieldName": "previewZoom"
            },
            {
              "name": "previewSize",
              "type": {
                "text": "DashboardPreviewSize | undefined"
              },
              "fieldName": "previewSize"
            },
            {
              "name": "availablePreviewSizes",
              "type": {
                "text": "DashboardPreviewSize[] | undefined"
              },
              "fieldName": "availablePreviewSizes"
            },
            {
              "name": "fullscreen",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "fieldName": "fullscreen"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-dashboard-preview",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrDashboardPreview",
          "declaration": {
            "name": "OrDashboardPreview",
            "module": "../or-dashboard-builder/src/or-dashboard-preview.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-dashboard-preview",
          "declaration": {
            "name": "OrDashboardPreview",
            "module": "../or-dashboard-builder/src/or-dashboard-preview.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-dashboard-builder/src/or-dashboard-tree.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrDashboardTree",
          "members": [
            {
              "kind": "field",
              "name": "dashboards",
              "type": {
                "text": "Dashboard[] | undefined"
              },
              "privacy": "protected",
              "attribute": "dashboards"
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "Dashboard | undefined"
              },
              "privacy": "protected",
              "attribute": "selected"
            },
            {
              "kind": "field",
              "name": "realm",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "attribute": "realm"
            },
            {
              "kind": "field",
              "name": "userId",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "attribute": "userId"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "readonly": true,
              "default": "true",
              "attribute": "readonly"
            },
            {
              "kind": "field",
              "name": "hasChanged",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "readonly": true,
              "default": "false",
              "attribute": "hasChanged"
            },
            {
              "kind": "field",
              "name": "showControls",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "true",
              "attribute": "showControls"
            },
            {
              "kind": "method",
              "name": "getAllDashboards",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "selectDashboard",
              "privacy": "private",
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "string | Dashboard | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "createDashboard",
              "privacy": "private",
              "parameters": [
                {
                  "name": "size",
                  "type": {
                    "text": "DashboardSizeOption"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "duplicateDashboard",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "dashboard",
                  "type": {
                    "text": "Dashboard"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_doDuplicateDashboard",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "dashboard",
                  "type": {
                    "text": "Dashboard"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "deleteDashboard",
              "privacy": "private",
              "parameters": [
                {
                  "name": "dashboard",
                  "type": {
                    "text": "Dashboard"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onDashboardClick",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "dashboardId",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "showDiscardChangesModal",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<boolean>"
                }
              }
            }
          ],
          "events": [
            {
              "name": "updated",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "select",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "created",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "dashboards",
              "type": {
                "text": "Dashboard[] | undefined"
              },
              "fieldName": "dashboards"
            },
            {
              "name": "selected",
              "type": {
                "text": "Dashboard | undefined"
              },
              "fieldName": "selected"
            },
            {
              "name": "realm",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "fieldName": "realm"
            },
            {
              "name": "userId",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "fieldName": "userId"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "readonly": true,
              "default": "true",
              "fieldName": "readonly"
            },
            {
              "name": "hasChanged",
              "type": {
                "text": "boolean"
              },
              "readonly": true,
              "default": "false",
              "fieldName": "hasChanged"
            },
            {
              "name": "showControls",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "fieldName": "showControls"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-dashboard-tree",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrDashboardTree",
          "declaration": {
            "name": "OrDashboardTree",
            "module": "../or-dashboard-builder/src/or-dashboard-tree.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-dashboard-tree",
          "declaration": {
            "name": "OrDashboardTree",
            "module": "../or-dashboard-builder/src/or-dashboard-tree.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-dashboard-builder/src/or-dashboard-widgetcontainer.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrDashboardWidgetContainer",
          "members": [
            {
              "kind": "field",
              "name": "tagName",
              "static": true,
              "default": "\"or-dashboard-widget-container\"",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "widget",
              "type": {
                "text": "DashboardWidget"
              },
              "privacy": "protected",
              "readonly": true,
              "attribute": "widget"
            },
            {
              "kind": "field",
              "name": "widgetConfig",
              "type": {
                "text": "WidgetConfig | undefined"
              },
              "privacy": "protected",
              "attribute": "widgetConfig"
            },
            {
              "kind": "field",
              "name": "editMode",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "readonly": true,
              "attribute": "editMode"
            },
            {
              "kind": "field",
              "name": "loading",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "attribute": "loading"
            },
            {
              "kind": "field",
              "name": "orWidget",
              "type": {
                "text": "OrWidget | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "containerElem",
              "type": {
                "text": "Element | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "resizeObserver",
              "type": {
                "text": "ResizeObserver | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "manifest",
              "type": {
                "text": "WidgetManifest | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "initializeWidgetElem",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "manifest",
                  "type": {
                    "text": "WidgetManifest"
                  }
                },
                {
                  "name": "config",
                  "type": {
                    "text": "WidgetConfig"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "refreshContent",
              "privacy": "public",
              "parameters": [
                {
                  "name": "force",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getWidgetConfig",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "WidgetConfig | undefined"
                }
              }
            }
          ],
          "attributes": [
            {
              "name": "widget",
              "type": {
                "text": "DashboardWidget"
              },
              "readonly": true,
              "fieldName": "widget"
            },
            {
              "name": "widgetConfig",
              "type": {
                "text": "WidgetConfig | undefined"
              },
              "fieldName": "widgetConfig"
            },
            {
              "name": "editMode",
              "type": {
                "text": "boolean"
              },
              "readonly": true,
              "fieldName": "editMode"
            },
            {
              "name": "loading",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "loading"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrDashboardWidgetContainer",
          "declaration": {
            "name": "OrDashboardWidgetContainer",
            "module": "../or-dashboard-builder/src/or-dashboard-widgetcontainer.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "OrDashboardWidgetContainer",
            "module": "../or-dashboard-builder/src/or-dashboard-widgetcontainer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-dashboard-builder/src/or-dashboard-widgetsettings.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrDashboardWidgetsettings",
          "members": [
            {
              "kind": "field",
              "name": "selectedWidget",
              "type": {
                "text": "DashboardWidget"
              },
              "privacy": "protected",
              "attribute": "selectedWidget"
            },
            {
              "kind": "field",
              "name": "settingsElem",
              "type": {
                "text": "WidgetSettings | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "forceParentUpdate",
              "parameters": [
                {
                  "name": "changes",
                  "type": {
                    "text": "Map<string, any>"
                  }
                },
                {
                  "name": "force",
                  "default": "false",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setDisplayName",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "generateContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<TemplateResult>"
                }
              },
              "parameters": [
                {
                  "name": "widgetTypeId",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "initSettings",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "WidgetSettings"
                }
              },
              "parameters": [
                {
                  "name": "manifest",
                  "type": {
                    "text": "WidgetManifest"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onWidgetConfigChange",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "WidgetSettingsChangedEvent"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "update",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "selectedWidget",
              "type": {
                "text": "DashboardWidget"
              },
              "fieldName": "selectedWidget"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-dashboard-widgetsettings",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrDashboardWidgetsettings",
          "declaration": {
            "name": "OrDashboardWidgetsettings",
            "module": "../or-dashboard-builder/src/or-dashboard-widgetsettings.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-dashboard-widgetsettings",
          "declaration": {
            "name": "OrDashboardWidgetsettings",
            "module": "../or-dashboard-builder/src/or-dashboard-widgetsettings.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-dashboard-builder/src/style.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css` :host { --internal-or-asset-tree-header-color: var(--or-asset-tree-header-color, var(--or-app-color4, ${unsafeCSS(DefaultColor4)})); --internal-or-asset-tree-header-text-color: var(--or-asset-tree-header-text-color, var(--or-app-color7, ${unsafeCSS(DefaultColor1)})); --internal-or-asset-tree-header-menu-background-color: var(--or-asset-tree-header-menu-background-color, var(--internal-or-asset-tree-header-text-color)); --internal-or-asset-tree-header-menu-text-color: var(--or-asset-tree-header-menu-text-color, inherit); --internal-or-asset-tree-header-height: var(--or-asset-tree-header-height, 48px); --internal-or-asset-tree-background-color: var(--or-asset-tree-background-color, var(--or-app-color1, ${unsafeCSS(DefaultColor1)})); --internal-or-asset-tree-text-color: var(--or-asset-tree-text-color, inherit); --internal-or-asset-tree-item-height: var(--or-asset-tree-item-height, 24px); --internal-or-asset-tree-item-padding: var(--or-asset-tree-item-padding, 10px); --internal-or-asset-tree-selected-background-color: var(--or-asset-tree-selected-background-color, var(--or-app-color2, ${unsafeCSS(DefaultColor2)})); --internal-or-asset-tree-selected-color: var(--or-asset-tree-selected-color, var(--or-app-color4, ${unsafeCSS(DefaultColor4)})); --internal-or-asset-tree-button-color: var(--or-asset-tree-button-color, var(--or-app-color4, ${unsafeCSS(DefaultColor4)})); --internal-or-asset-tree-line-color: var(--or-asset-tree-line-color, var(--or-app-color5, ${unsafeCSS(DefaultColor5)})); display: flex; flex-direction: column; height: 100%; width: 100%; background-color: var(--internal-or-asset-tree-background-color); } @media only screen and (max-width: 640px){ .hideMobile { display: none !important; } } @media only screen and (min-width: 641px){ .showMobile { display: none !important; } } #container { display: flex; width: 100%; height: 100%; } #menu-header { background-color: var(--internal-or-asset-tree-header-color); display: flex; align-items: center; width: 100%; height: var(--internal-or-asset-tree-header-height); border-bottom: 1px solid var(--or-app-color5, ${unsafeCSS(DefaultColor5)}); z-index: 3; line-height: var(--internal-or-asset-tree-header-height); color: var(--internal-or-asset-tree-header-text-color); --or-icon-fill: var(--internal-or-asset-tree-header-text-color); } #title-container { flex: 1; flex-direction: row; text-transform: capitalize; padding-left: 14px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; } #title { font-weight: 500; font-size: 16px; } .expandableHeader { display: flex; align-items: center; padding: 12px; background: none; border-top: 1px solid var(--or-app-color5, ${unsafeCSS(DefaultColor5)}); border-right: none; border-bottom: none; border-left: none; border-radius: 0; width: 100%; cursor: pointer; font-weight: 700; line-height: 1em; color: var(--internal-or-asset-viewer-title-text-color); flex: 0 0 auto; } .expandableHeader > or-icon { --or-icon-height: 20px; --or-icon-width: 20px; } .panel-title { text-transform: uppercase; font-weight: bolder; line-height: 1em; color: var(--internal-or-asset-viewer-title-text-color); /*margin-bottom: 20px;*/ flex: 0 0 auto; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "../or-dashboard-builder/src/style.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-data-viewer/src/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrDataViewerRenderCompleteEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-data-viewer-render-complete-event\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-data-viewer/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrDataViewerConfigInvalidEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-data-viewer-config-invalid-event\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-data-viewer/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrDataViewer",
          "members": [
            {
              "kind": "field",
              "name": "DEFAULT_PANEL_TYPE",
              "type": {
                "text": "PanelType"
              },
              "privacy": "public",
              "static": true,
              "default": "\"chart\""
            },
            {
              "kind": "field",
              "name": "DEFAULT_CONFIG",
              "type": {
                "text": "DataViewerConfig"
              },
              "privacy": "public",
              "static": true,
              "default": "{ viewerStyles: { }, panels: { chart: { type: \"chart\", hideOnMobile: true, panelStyles: { gridColumn: \"1 / -1\" } }, kpi1: { type: \"kpi\", hideOnMobile: false }, kpi2: { type: \"kpi\", hideOnMobile: false }, kpi3: { type: \"kpi\", hideOnMobile: false }, kpi4: { type: \"kpi\", hideOnMobile: false }, kpi5: { type: \"kpi\", hideOnMobile: false }, kpi6: { type: \"kpi\", hideOnMobile: false }, kpi7: { type: \"kpi\", hideOnMobile: false }, kpi8: { type: \"kpi\", hideOnMobile: false }, chart2: { type: \"chart\", hideOnMobile: true, panelStyles: { gridColumn: \"1 / -1\" } }, chart3: { type: \"chart\", hideOnMobile: true, panelStyles: { gridColumn: \"1 / -1\" } } } }"
            },
            {
              "kind": "method",
              "name": "generateGrid",
              "privacy": "public",
              "static": true,
              "parameters": [
                {
                  "name": "shadowRoot",
                  "type": {
                    "text": "ShadowRoot | null"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "DataViewerConfig | undefined"
              },
              "privacy": "public",
              "attribute": "config"
            },
            {
              "kind": "field",
              "name": "_assets",
              "type": {
                "text": "Asset[] | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_loading",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "attribute": "_loading"
            },
            {
              "kind": "field",
              "name": "realm",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "realm"
            },
            {
              "kind": "field",
              "name": "_resizeHandler",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "refresh",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "getPanel",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "panelConfig",
                  "type": {
                    "text": "PanelConfig"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getPanelContent",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult | undefined"
                }
              },
              "parameters": [
                {
                  "name": "panelName",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "panelConfig",
                  "type": {
                    "text": "PanelConfig"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            }
          ],
          "events": [
            {
              "type": {
                "text": "OrDataViewerConfigInvalidEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "config",
              "type": {
                "text": "DataViewerConfig | undefined"
              },
              "fieldName": "config"
            },
            {
              "name": "_loading",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "_loading"
            },
            {
              "name": "realm",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "realm"
            }
          ],
          "mixins": [
            {
              "name": "translate(i18next)",
              "module": "../or-data-viewer/src/index.ts"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-data-viewer",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrDataViewerRenderCompleteEvent",
          "declaration": {
            "name": "OrDataViewerRenderCompleteEvent",
            "module": "../or-data-viewer/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrDataViewerConfigInvalidEvent",
          "declaration": {
            "name": "OrDataViewerConfigInvalidEvent",
            "module": "../or-data-viewer/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrDataViewer",
          "declaration": {
            "name": "OrDataViewer",
            "module": "../or-data-viewer/src/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-data-viewer",
          "declaration": {
            "name": "OrDataViewer",
            "module": "../or-data-viewer/src/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-data-viewer/src/style.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css` :host { --internal-or-asset-viewer-background-color: var(--or-asset-viewer-background-color, var(--or-app-color2, ${unsafeCSS(DefaultColor2)})); --internal-or-asset-viewer-panel-margin: var(--or-asset-viewer-panel-margin, 20px); --internal-or-asset-viewer-panel-padding: var(--or-asset-viewer-panel-padding, 24px); --internal-or-asset-viewer-text-color: var(--or-asset-viewer-text-color, var(--or-app-color3, ${unsafeCSS(DefaultColor3)})); --internal-or-asset-viewer-title-text-color: var(--or-asset-viewer-title-text-color, var(--or-app-color3, ${unsafeCSS(DefaultColor3)})); --internal-or-asset-viewer-panel-color: var(--or-asset-viewer-panel-color, var(--or-app-color1, ${unsafeCSS(DefaultColor1)})); --internal-or-asset-viewer-line-color: var(--or-asset-viewer-line-color, var(--or-app-color5, ${unsafeCSS(DefaultColor5)})); height: 100%; width: 100%; background-color: var(--internal-or-asset-viewer-background-color); } *[hidden] { display: none; } #container { width: 100%; box-sizing: border-box; display: grid; margin: auto; padding: 20px 20px; grid-gap: 10px; grid-template-columns: repeat(auto-fill, minmax(calc(25% - 8px), 1fr)); grid-auto-rows: 5px; -webkit-animation: fadein 0.3s; /* Safari, Chrome and Opera > 12.1 */ -moz-animation: fadein 0.3s; /* Firefox < 16 */ -ms-animation: fadein 0.3s; /* Internet Explorer */ -o-animation: fadein 0.3s; /* Opera < 12.1 */ animation: fadein 0.3s; } @keyframes fadein { from { opacity: 0; } to { opacity: 1; } } /* Firefox < 16 */ @-moz-keyframes fadein { from { opacity: 0; } to { opacity: 1; } } /* Safari, Chrome and Opera > 12.1 */ @-webkit-keyframes fadein { from { opacity: 0; } to { opacity: 1; } } /* Internet Explorer */ @-ms-keyframes fadein { from { opacity: 0; } to { opacity: 1; } } /* Opera < 12.1 */ @-o-keyframes fadein { from { opacity: 0; } to { opacity: 1; } } .panel { background-color: var(--internal-or-asset-viewer-panel-color); border: 1px solid #e5e5e5; border-radius: 5px; max-width: 100%; } .panel-content-wrapper { padding: var(--internal-or-asset-viewer-panel-padding); } .panel-content { display: flex; flex-wrap: wrap; } .panel-title { text-transform: uppercase; font-weight: bolder; line-height: 1em; color: var(--internal-or-asset-viewer-title-text-color); margin-bottom: 25px; flex: 0 0 auto; } .field { margin: 10px 0; width: 100%; flex: 0 0 auto; min-height: 50px; } .field > * { width: 100%; box-sizing: border-box; } .msg { display: flex; justify-content: center; align-items: center; text-align: center; height: 100%; } .back-navigation { display: none; cursor: pointer; } @media screen and (max-width: 1024px) { #container { grid-template-columns: repeat(auto-fill, minmax(calc(50% - 8px), 1fr)); } } @media screen and (max-width: 769px) { .back-navigation { display: block; } .mobileHidden { display: none; } #container { grid-auto-rows: auto; } .panel { border-radius: 0; border-right: none; border-left: none; } #chart-panel { grid-row-start: 1; } #container { grid-template-columns: 100% !important; padding: 20px 0; } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "../or-data-viewer/src/style.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-gauge/src/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "# Gauge\r\n### `<or-gauge>` - `OrGauge`\r\n\r\nGauge statistic component using the [GaugeJS](https://www.npmjs.com/package/gaugeJS) library.",
          "name": "OrGauge",
          "members": [
            {
              "kind": "field",
              "name": "attrRef",
              "type": {
                "text": "AttributeRef | undefined"
              },
              "privacy": "public",
              "attribute": "attrRef"
            },
            {
              "kind": "field",
              "name": "asset",
              "type": {
                "text": "Asset | undefined"
              },
              "privacy": "public",
              "attribute": "asset"
            },
            {
              "kind": "field",
              "name": "assetAttribute",
              "type": {
                "text": "[number, Attribute<any>] | undefined"
              },
              "privacy": "public",
              "attribute": "assetAttribute"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "decimals",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "0",
              "attribute": "decimals"
            },
            {
              "kind": "field",
              "name": "unit",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "unit"
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "attribute": "min"
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "attribute": "max"
            },
            {
              "kind": "field",
              "name": "thresholds",
              "type": {
                "text": "[number, string][] | undefined"
              },
              "privacy": "public",
              "attribute": "thresholds"
            },
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "OrGaugeConfig | undefined"
              },
              "privacy": "public",
              "readonly": true,
              "attribute": "config"
            },
            {
              "kind": "field",
              "name": "realm",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "realm"
            },
            {
              "kind": "field",
              "name": "loading",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_gaugeElem",
              "type": {
                "text": "HTMLCanvasElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_wrapperElem",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_detailsElem",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "gauge",
              "type": {
                "text": "Gauge | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "gaugeSize",
              "type": {
                "text": "{ width: number, height: number } | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "resizeObserver",
              "type": {
                "text": "ResizeObserver | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "setupGauge"
            },
            {
              "kind": "method",
              "name": "getGaugeWidth",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "gaugeSize",
                  "optional": true,
                  "type": {
                    "text": "{ width: number, height: number }"
                  }
                },
                {
                  "name": "includeLabelHeight",
                  "default": "true",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "shouldShowLabel",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "gaugeSize",
                  "type": {
                    "text": "{ width: number, height: number }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getLabelSize",
              "return": {
                "type": {
                  "text": "\"s\" | \"m\" | \"l\" | \"xl\""
                }
              },
              "parameters": [
                {
                  "name": "width",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "loadData",
              "parameters": [
                {
                  "name": "attrRef",
                  "type": {
                    "text": "AttributeRef"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getDefaultConfig",
              "return": {
                "type": {
                  "text": "OrGaugeConfig"
                }
              }
            }
          ],
          "attributes": [
            {
              "name": "attrRef",
              "type": {
                "text": "AttributeRef | undefined"
              },
              "fieldName": "attrRef"
            },
            {
              "name": "asset",
              "type": {
                "text": "Asset | undefined"
              },
              "fieldName": "asset"
            },
            {
              "name": "assetAttribute",
              "type": {
                "text": "[number, Attribute<any>] | undefined"
              },
              "fieldName": "assetAttribute"
            },
            {
              "name": "value",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "value"
            },
            {
              "name": "decimals",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "decimals"
            },
            {
              "name": "unit",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "unit"
            },
            {
              "name": "min",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "min"
            },
            {
              "name": "max",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "max"
            },
            {
              "name": "thresholds",
              "type": {
                "text": "[number, string][] | undefined"
              },
              "fieldName": "thresholds"
            },
            {
              "name": "config",
              "type": {
                "text": "OrGaugeConfig | undefined"
              },
              "readonly": true,
              "fieldName": "config"
            },
            {
              "name": "realm",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "realm"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-gauge",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrGauge",
          "declaration": {
            "name": "OrGauge",
            "module": "../or-gauge/src/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-gauge",
          "declaration": {
            "name": "OrGauge",
            "module": "../or-gauge/src/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-icon/src/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "IconSetAddedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-iconset-added\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-icon/src/index.ts"
          }
        },
        {
          "kind": "function",
          "name": "createSvgIconSet",
          "return": {
            "type": {
              "text": "IconSet"
            }
          },
          "parameters": [
            {
              "name": "size",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "icons",
              "type": {
                "text": "{[name: string]: string}"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "createMdiIconSet",
          "return": {
            "type": {
              "text": "IconSet"
            }
          },
          "parameters": [
            {
              "name": "managerUrl",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "IconSets",
          "default": "new ORIconSets()"
        },
        {
          "kind": "function",
          "name": "getAssetDescriptorIconTemplate",
          "return": {
            "type": {
              "text": "TemplateResult"
            }
          },
          "parameters": [
            {
              "name": "descriptor",
              "type": {
                "text": "AssetDescriptor | undefined"
              }
            },
            {
              "name": "fallbackColor",
              "optional": true,
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "name": "fallbackIcon",
              "optional": true,
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "name": "overrideColor",
              "optional": true,
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "name": "overrideIcon",
              "optional": true,
              "type": {
                "text": "string | undefined"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "# Icon\r\n### `<or-icon>` - `OrIcon`\r\n\r\nWeb Component for displaying an icon from a loaded iconset, like the [Material Design Icons](https://materialdesignicons.com) library.",
          "name": "OrIcon",
          "members": [
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "description": "Icon name as given by the Material Design Icons library",
              "attribute": "icon",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "_iconTemplate",
              "type": {
                "text": "TemplateResult | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_handler",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_updateIcon",
              "privacy": "protected"
            }
          ],
          "attributes": [
            {
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "description": "Icon name as given by the Material Design Icons library",
              "fieldName": "icon"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-icon",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrIconSet",
          "declaration": {
            "name": "OrIconSet",
            "module": "../or-icon/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "IconSetAddedEvent",
          "declaration": {
            "name": "IconSetAddedEvent",
            "module": "../or-icon/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "createSvgIconSet",
          "declaration": {
            "name": "createSvgIconSet",
            "module": "../or-icon/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "createMdiIconSet",
          "declaration": {
            "name": "createMdiIconSet",
            "module": "../or-icon/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "IconSets",
          "declaration": {
            "name": "IconSets",
            "module": "../or-icon/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "getAssetDescriptorIconTemplate",
          "declaration": {
            "name": "getAssetDescriptorIconTemplate",
            "module": "../or-icon/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrIcon",
          "declaration": {
            "name": "OrIcon",
            "module": "../or-icon/src/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-icon",
          "declaration": {
            "name": "OrIcon",
            "module": "../or-icon/src/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-icon/src/or-icon-set.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "orIconSet",
          "type": {
            "text": "object"
          },
          "default": "{ size: 24, icons: { \"logo\": \"<path style='pointer-events: var(--or-icon-pointer-events, none);' fill=\\\"#C4D600\\\" d=\\\"m11.96125,23.85096c-6.56773,0 -11.90971,-5.34202 -11.90971,-11.90862l2.49411,0c0,5.19176 4.22389,9.41568 9.41561,9.41568c5.19053,0 9.41561,-4.22392 9.41561,-9.41568c0,-5.19176 -4.22389,-9.41568 -9.41561,-9.41568l0,-2.49413c6.56655,0 11.90971,5.34439 11.90971,11.9098c0,6.5666 -5.34316,11.90862 -11.90971,11.90862l0,0z\\\" /><path fill=\\\"#4E9D2D\\\" d=\\\"m10.25094,20.38647c-2.26848,-0.47231 -4.21822,-1.80199 -5.48741,-3.74009s-1.70892,-4.25777 -1.23545,-6.52625c0.47347,-2.26965 1.80315,-4.21822 3.74242,-5.48857c1.93926,-1.27035 4.25661,-1.70892 6.52625,-1.23545c4.68471,0.97719 7.70121,5.5828 6.72286,10.26635l-2.39994,-0.49907c0.70149,-3.36085 -1.4623,-6.66585 -4.82431,-7.36734c-1.62866,-0.33969 -3.29105,-0.02559 -4.68238,0.88645c-1.39134,0.91088 -2.34526,2.3092 -2.68495,3.93786c-0.33853,1.62633 -0.02443,3.28988 0.88645,4.68122c0.91088,1.39134 2.3092,2.34526 3.93786,2.68379l-0.50139,2.4011l0,0z\\\"/><path fill=\\\"#1D5632\\\"d=\\\"m12.03064,17.49616c-0.09524,0 -0.19048,-0.00116 -0.28457,-0.00465c-1.49833,-0.0755 -2.87818,-0.72942 -3.88636,-1.84097c-1.00818,-1.11271 -1.52156,-2.54948 -1.44722,-4.05013l2.44378,0.12196c-0.04181,0.84557 0.24856,1.65745 0.81769,2.28466c0.56681,0.62721 1.34733,0.99656 2.1929,1.03838c0.84208,0.03833 1.65629,-0.2474 2.2835,-0.81653c0.62837,-0.56797 0.99656,-1.34617 1.03954,-2.19174c0.08711,-1.74573 -1.26371,-3.23708 -3.00943,-3.3242l0.12196,-2.44378c3.09422,0.15332 5.4869,2.79455 5.33358,5.88877c-0.07434,1.49949 -0.72942,2.87818 -1.84097,3.8852c-1.04186,0.94313 -2.36945,1.45303 -3.7644,1.45303l0,0z\\\"/>\", \"logo-plain\": \"m11.9925,23.91349c-6.58498,0 -11.94099,-5.35605 -11.94099,-11.9399l2.50066,0c0,5.20539 4.23498,9.44041 9.44033,9.44041c5.20416,0 9.44033,-4.23502 9.44033,-9.44041c0,-5.20539 -4.23498,-9.44041 -9.44033,-9.44041l0,-2.50068c6.5838,0 11.94099,5.35842 11.94099,11.94108c0,6.58385 -5.35719,11.9399 -11.94099,11.9399l0,0zm-1.80787,-3.27769c-2.31323,-0.48163 -4.30141,-1.83755 -5.59563,-3.81389s-1.74263,-4.34178 -1.25982,-6.65502c0.48281,-2.31443 1.83872,-4.30145 3.81623,-5.59686c1.97751,-1.29542 4.34056,-1.74264 6.65497,-1.25983c4.77711,0.99647 7.8531,5.69295 6.85545,10.46891l-2.44727,-0.50891c0.71532,-3.42716 -1.49114,-6.79738 -4.91946,-7.5127c-1.66078,-0.34639 -3.35596,-0.0261 -4.77474,0.90394c-1.41878,0.92886 -2.39152,2.35476 -2.73791,4.01555c-0.3452,1.65842 -0.02491,3.3548 0.90394,4.77359c0.92885,1.41879 2.35475,2.39154 4.01552,2.73675l-0.51128,2.44848l0,0zm1.81499,-2.92536c-0.09727,0 -0.19455,-0.00119 -0.29064,-0.00475c-1.53029,-0.07711 -2.93958,-0.74498 -3.96926,-1.88025c-1.02968,-1.13646 -1.55401,-2.60388 -1.47809,-4.13655l2.49591,0.12456c-0.04271,0.86361 0.25386,1.69282 0.83513,2.33341c0.5789,0.64059 1.37607,1.01783 2.23968,1.06053c0.86005,0.03915 1.69162,-0.25268 2.33221,-0.83395c0.64177,-0.58009 1.01782,-1.3749 1.06171,-2.23851c0.08897,-1.78298 -1.29066,-3.30616 -3.07362,-3.39513l0.12456,-2.49593c3.16022,0.15659 5.60394,2.85419 5.44735,6.01443c-0.07592,1.53149 -0.74498,2.9396 -1.88024,3.9681c-1.06408,0.96326 -2.41999,1.48403 -3.8447,1.48403l0,0z\", \"marker\": \"<ellipse fill=\\\"#000\\\" opacity=\\\"0.2\\\" ry=\\\"1.5\\\" rx=\\\"4\\\" cy=\\\"22.5\\\" cx=\\\"12\\\" /><path style='pointer-events: var(--or-icon-pointer-events, none);' d=\\\"m11.999999,0a8.437501,8.344057 0 0 1 8.437501,8.344057c0,6.500779 -5.798864,6.280799 -8.437501,14.412461c-2.638637,-8.131662 -8.437501,-7.911683 -8.437501,-14.412461a8.437501,8.344057 0 0 1 8.437501,-8.344057z\\\" />\" } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "orIconSet",
            "module": "../or-icon/src/or-icon-set.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-json-forms/src/base-element.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "BaseElement",
          "members": [
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "JsonFormsStateContext"
              },
              "privacy": "public",
              "attribute": "state"
            },
            {
              "kind": "field",
              "name": "uischema",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "attribute": "uischema"
            },
            {
              "kind": "field",
              "name": "schema",
              "type": {
                "text": "JsonSchema"
              },
              "privacy": "public",
              "attribute": "schema"
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "any"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "renderers",
              "type": {
                "text": "JsonFormsRendererRegistryEntry[] | undefined"
              },
              "privacy": "public",
              "attribute": "renderers"
            },
            {
              "kind": "field",
              "name": "cells",
              "type": {
                "text": "JsonFormsCellRendererRegistryEntry[] | undefined"
              },
              "privacy": "public",
              "attribute": "cells"
            },
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "any"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "uischemas",
              "type": {
                "text": "JsonFormsUISchemaRegistryEntry[] | undefined"
              },
              "privacy": "public",
              "attribute": "uischemas"
            },
            {
              "kind": "field",
              "name": "enabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "attribute": "enabled"
            },
            {
              "kind": "field",
              "name": "visible",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "attribute": "visible"
            },
            {
              "kind": "field",
              "name": "path",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "path"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "errors"
            },
            {
              "kind": "field",
              "name": "props",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "state",
              "type": {
                "text": "JsonFormsStateContext"
              },
              "fieldName": "state"
            },
            {
              "name": "uischema",
              "type": {
                "text": "T"
              },
              "fieldName": "uischema"
            },
            {
              "name": "schema",
              "type": {
                "text": "JsonSchema"
              },
              "fieldName": "schema"
            },
            {
              "name": "renderers",
              "type": {
                "text": "JsonFormsRendererRegistryEntry[] | undefined"
              },
              "fieldName": "renderers"
            },
            {
              "name": "cells",
              "type": {
                "text": "JsonFormsCellRendererRegistryEntry[] | undefined"
              },
              "fieldName": "cells"
            },
            {
              "name": "uischemas",
              "type": {
                "text": "JsonFormsUISchemaRegistryEntry[] | undefined"
              },
              "fieldName": "uischemas"
            },
            {
              "name": "enabled",
              "type": {
                "text": "boolean"
              },
              "fieldName": "enabled"
            },
            {
              "name": "visible",
              "type": {
                "text": "boolean"
              },
              "fieldName": "visible"
            },
            {
              "name": "path",
              "type": {
                "text": "string"
              },
              "fieldName": "path"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "fieldName": "label"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "fieldName": "required"
            },
            {
              "name": "errors",
              "type": {
                "text": "string"
              },
              "fieldName": "errors"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BaseElement",
          "declaration": {
            "name": "BaseElement",
            "module": "../or-json-forms/src/base-element.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-json-forms/src/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrJSONForms",
          "members": [
            {
              "kind": "field",
              "name": "uischema",
              "type": {
                "text": "UISchemaElement | undefined"
              },
              "privacy": "public",
              "attribute": "uischema"
            },
            {
              "kind": "field",
              "name": "schema",
              "type": {
                "text": "JsonSchema | undefined"
              },
              "privacy": "public",
              "attribute": "schema"
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "any"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "renderers",
              "type": {
                "text": "JsonFormsRendererRegistryEntry[] | undefined"
              },
              "privacy": "public",
              "default": "StandardRenderers",
              "attribute": "renderers"
            },
            {
              "kind": "field",
              "name": "cells",
              "type": {
                "text": "JsonFormsCellRendererRegistryEntry[] | undefined"
              },
              "privacy": "public",
              "attribute": "cells"
            },
            {
              "kind": "field",
              "name": "onChange",
              "type": {
                "text": "(dataAndErrors: {errors: ErrorObject[] | undefined, data: any}) => void | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "any"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "uischemas",
              "type": {
                "text": "JsonFormsUISchemaRegistryEntry[] | undefined"
              },
              "privacy": "public",
              "attribute": "uischemas"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "readonly"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "core",
              "type": {
                "text": "JsonFormsCore | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "contextValue",
              "type": {
                "text": "JsonFormsSubStates | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "previousData",
              "type": {
                "text": "any"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "previousErrors",
              "type": {
                "text": "ErrorObject[]"
              },
              "privacy": "protected",
              "default": "[]"
            },
            {
              "kind": "method",
              "name": "checkValidity",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "updateCore",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "coreAction",
                  "type": {
                    "text": "T"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "uischema",
              "type": {
                "text": "UISchemaElement | undefined"
              },
              "fieldName": "uischema"
            },
            {
              "name": "schema",
              "type": {
                "text": "JsonSchema | undefined"
              },
              "fieldName": "schema"
            },
            {
              "name": "renderers",
              "type": {
                "text": "JsonFormsRendererRegistryEntry[] | undefined"
              },
              "default": "StandardRenderers",
              "fieldName": "renderers"
            },
            {
              "name": "cells",
              "type": {
                "text": "JsonFormsCellRendererRegistryEntry[] | undefined"
              },
              "fieldName": "cells"
            },
            {
              "name": "uischemas",
              "type": {
                "text": "JsonFormsUISchemaRegistryEntry[] | undefined"
              },
              "fieldName": "uischemas"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "readonly"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "fieldName": "label"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-json-forms",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ErrorObject",
          "declaration": {
            "name": "ErrorObject",
            "module": "../or-json-forms/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "StandardRenderers",
          "declaration": {
            "name": "StandardRenderers",
            "module": "../or-json-forms/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "getTemplateWrapper",
          "declaration": {
            "name": "getTemplateWrapper",
            "module": "../or-json-forms/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "JsonFormsRendererRegistryEntry",
          "declaration": {
            "name": "JsonFormsRendererRegistryEntry",
            "module": "../or-json-forms/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "UISchemaElement",
          "declaration": {
            "name": "UISchemaElement",
            "module": "../or-json-forms/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrJSONForms",
          "declaration": {
            "name": "OrJSONForms",
            "module": "../or-json-forms/src/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-json-forms",
          "declaration": {
            "name": "OrJSONForms",
            "module": "../or-json-forms/src/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-json-forms/src/standard-renderers.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "isEnumArray",
          "type": {
            "text": "Tester"
          }
        },
        {
          "kind": "variable",
          "name": "verticalOrGroupLayoutTester",
          "type": {
            "text": "RankedTester"
          }
        },
        {
          "kind": "function",
          "name": "verticalLayoutRenderer",
          "parameters": [
            {
              "name": "state",
              "type": {
                "text": "JsonFormsStateContext"
              }
            },
            {
              "name": "props",
              "type": {
                "text": "OwnPropsOfJsonFormsRenderer & AdditionalProps"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "constTester",
          "type": {
            "text": "RankedTester"
          }
        },
        {
          "kind": "function",
          "name": "constRenderer",
          "parameters": [
            {
              "name": "state",
              "type": {
                "text": "JsonFormsStateContext"
              }
            },
            {
              "name": "props",
              "type": {
                "text": "OwnPropsOfJsonFormsRenderer"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "inputControlTester",
          "type": {
            "text": "RankedTester"
          }
        },
        {
          "kind": "function",
          "name": "inputControlRenderer",
          "parameters": [
            {
              "name": "state",
              "type": {
                "text": "JsonFormsStateContext"
              }
            },
            {
              "name": "props",
              "type": {
                "text": "ControlProps"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "objectControlTester",
          "type": {
            "text": "RankedTester"
          }
        },
        {
          "kind": "function",
          "name": "objectControlRenderer",
          "parameters": [
            {
              "name": "state",
              "type": {
                "text": "JsonFormsStateContext"
              }
            },
            {
              "name": "props",
              "type": {
                "text": "ControlProps & AdditionalProps"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "anyOfOneOfControlTester",
          "type": {
            "text": "RankedTester"
          }
        },
        {
          "kind": "function",
          "name": "anyOfOneOfControlRenderer",
          "parameters": [
            {
              "name": "state",
              "type": {
                "text": "JsonFormsStateContext"
              }
            },
            {
              "name": "props",
              "type": {
                "text": "ControlProps & AdditionalProps"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "allOfControlTester",
          "type": {
            "text": "RankedTester"
          }
        },
        {
          "kind": "function",
          "name": "allOfControlRenderer",
          "parameters": [
            {
              "name": "state",
              "type": {
                "text": "JsonFormsStateContext"
              }
            },
            {
              "name": "props",
              "type": {
                "text": "ControlProps & AdditionalProps"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "arrayControlTester",
          "type": {
            "text": "RankedTester"
          }
        },
        {
          "kind": "function",
          "name": "arrayControlRenderer",
          "parameters": [
            {
              "name": "state",
              "type": {
                "text": "JsonFormsStateContext"
              }
            },
            {
              "name": "props",
              "type": {
                "text": "ControlProps & AdditionalProps"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getTemplateWrapper",
          "return": {
            "type": {
              "text": "TemplateResult"
            }
          },
          "parameters": [
            {
              "name": "elementTemplate",
              "type": {
                "text": "TemplateResult"
              }
            },
            {
              "name": "deleteHandler",
              "optional": true,
              "type": {
                "text": "() => void"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "unknownTemplate"
        },
        {
          "kind": "variable",
          "name": "StandardRenderers",
          "type": {
            "text": "JsonFormsRendererRegistryEntry[]"
          },
          "default": "[ {tester: verticalOrGroupLayoutTester, renderer: verticalLayoutRenderer}, {tester: constTester, renderer: constRenderer}, {tester: inputControlTester, renderer: inputControlRenderer}, {tester: objectControlTester, renderer: objectControlRenderer}, {tester: arrayControlTester, renderer: arrayControlRenderer}, {tester: anyOfOneOfControlTester, renderer: anyOfOneOfControlRenderer}, {tester: allOfControlTester, renderer: allOfControlRenderer} ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isEnumArray",
          "declaration": {
            "name": "isEnumArray",
            "module": "../or-json-forms/src/standard-renderers.ts"
          }
        },
        {
          "kind": "js",
          "name": "verticalOrGroupLayoutTester",
          "declaration": {
            "name": "verticalOrGroupLayoutTester",
            "module": "../or-json-forms/src/standard-renderers.ts"
          }
        },
        {
          "kind": "js",
          "name": "verticalLayoutRenderer",
          "declaration": {
            "name": "verticalLayoutRenderer",
            "module": "../or-json-forms/src/standard-renderers.ts"
          }
        },
        {
          "kind": "js",
          "name": "constTester",
          "declaration": {
            "name": "constTester",
            "module": "../or-json-forms/src/standard-renderers.ts"
          }
        },
        {
          "kind": "js",
          "name": "constRenderer",
          "declaration": {
            "name": "constRenderer",
            "module": "../or-json-forms/src/standard-renderers.ts"
          }
        },
        {
          "kind": "js",
          "name": "inputControlTester",
          "declaration": {
            "name": "inputControlTester",
            "module": "../or-json-forms/src/standard-renderers.ts"
          }
        },
        {
          "kind": "js",
          "name": "inputControlRenderer",
          "declaration": {
            "name": "inputControlRenderer",
            "module": "../or-json-forms/src/standard-renderers.ts"
          }
        },
        {
          "kind": "js",
          "name": "objectControlTester",
          "declaration": {
            "name": "objectControlTester",
            "module": "../or-json-forms/src/standard-renderers.ts"
          }
        },
        {
          "kind": "js",
          "name": "objectControlRenderer",
          "declaration": {
            "name": "objectControlRenderer",
            "module": "../or-json-forms/src/standard-renderers.ts"
          }
        },
        {
          "kind": "js",
          "name": "anyOfOneOfControlTester",
          "declaration": {
            "name": "anyOfOneOfControlTester",
            "module": "../or-json-forms/src/standard-renderers.ts"
          }
        },
        {
          "kind": "js",
          "name": "anyOfOneOfControlRenderer",
          "declaration": {
            "name": "anyOfOneOfControlRenderer",
            "module": "../or-json-forms/src/standard-renderers.ts"
          }
        },
        {
          "kind": "js",
          "name": "allOfControlTester",
          "declaration": {
            "name": "allOfControlTester",
            "module": "../or-json-forms/src/standard-renderers.ts"
          }
        },
        {
          "kind": "js",
          "name": "allOfControlRenderer",
          "declaration": {
            "name": "allOfControlRenderer",
            "module": "../or-json-forms/src/standard-renderers.ts"
          }
        },
        {
          "kind": "js",
          "name": "arrayControlTester",
          "declaration": {
            "name": "arrayControlTester",
            "module": "../or-json-forms/src/standard-renderers.ts"
          }
        },
        {
          "kind": "js",
          "name": "arrayControlRenderer",
          "declaration": {
            "name": "arrayControlRenderer",
            "module": "../or-json-forms/src/standard-renderers.ts"
          }
        },
        {
          "kind": "js",
          "name": "getTemplateWrapper",
          "declaration": {
            "name": "getTemplateWrapper",
            "module": "../or-json-forms/src/standard-renderers.ts"
          }
        },
        {
          "kind": "js",
          "name": "unknownTemplate",
          "declaration": {
            "name": "unknownTemplate",
            "module": "../or-json-forms/src/standard-renderers.ts"
          }
        },
        {
          "kind": "js",
          "name": "StandardRenderers",
          "declaration": {
            "name": "StandardRenderers",
            "module": "../or-json-forms/src/standard-renderers.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-json-forms/src/styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "baseStyle",
          "default": "css` :host { flex: 1; } .item-container { display: flex; } .delete-container, .drag-container { width: 30px; display: flex; vertical-align: middle; } .item-container:hover .button-clear, .item-wrapper:hover .button-clear { visibility: visible; } .no-match-container { align-items: center; } .no-match-container > *:not(:last-child) { margin-right: 10px; } .button-clear { background: none; color: ${unsafeCSS(DefaultColor5)}; --or-icon-fill: ${unsafeCSS(DefaultColor5)}; visibility: hidden; display: inline-block; border: none; padding: 0 0 0 5px; cursor: pointer; } .button-clear:hover { --or-icon-fill: ${unsafeCSS(DefaultColor4)}; } .button-clear:focus { outline: 0; } .button-clear.hidden { visibility: hidden; } .any-of-picker { width: 100%; min-width: 200px; } #errors { color: red; margin-right: 10px; flex: 1; display: flex; align-items: center; } #errors > or-icon { margin-right: 5px; } `"
        },
        {
          "kind": "variable",
          "name": "panelStyle",
          "default": "css` #header-description { flex: 1; display: flex; flex-direction: row; } #type-label { border: 1px solid green; border-radius: 3px; padding: 3px; margin-left: 10px; } #header-buttons { flex: 0; } #content-wrapper { flex: 1; padding: 0 4px 14px 24px; } #content { display: flex; flex-direction: column; } #content > * { flex: 1; } .item-container + .item-container { padding-top: 10px; } #footer { margin-top: 10px; } `"
        },
        {
          "kind": "variable",
          "name": "addItemOrParameterDialogStyle",
          "default": "html` <style> .mdc-dialog__surface { width: 800px; overflow-x: visible !important; overflow-y: visible !important; } #dialog-content { border-color: var(--or-app-color5, ${unsafeCSS(DefaultColor5)}); border-top-width: 1px; border-top-style: solid; border-bottom-width: 1px; border-bottom-style: solid; padding: 0; } form { display: flex; height: 100%; } #type-list { overflow: auto; min-width: 150px; max-width: 300px; flex: 0 0 40%; border-right: 1px solid var(--or-app-color5, #CCC); } #parameter-list { display: block; } #parameter-title { text-transform: capitalize; color: var(--or-app-color3, ${unsafeCSS(DefaultColor3)}); font-size: 18px; font-weight: bold; } #parameter-desc { padding: 15px; flex: 1; display: flex; flex-direction: column; justify-content: flex-start; overflow: auto; } </style> `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "baseStyle",
          "declaration": {
            "name": "baseStyle",
            "module": "../or-json-forms/src/styles.ts"
          }
        },
        {
          "kind": "js",
          "name": "panelStyle",
          "declaration": {
            "name": "panelStyle",
            "module": "../or-json-forms/src/styles.ts"
          }
        },
        {
          "kind": "js",
          "name": "addItemOrParameterDialogStyle",
          "declaration": {
            "name": "addItemOrParameterDialogStyle",
            "module": "../or-json-forms/src/styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-json-forms/src/util.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "getTemplateFromProps",
          "return": {
            "type": {
              "text": "TemplateResult | undefined"
            }
          },
          "parameters": [
            {
              "name": "state",
              "type": {
                "text": "JsonFormsSubStates | undefined"
              }
            },
            {
              "name": "props",
              "type": {
                "text": "T | undefined"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getCombinatorInfos",
          "return": {
            "type": {
              "text": "CombinatorInfo[]"
            }
          },
          "parameters": [
            {
              "name": "schemas",
              "type": {
                "text": "JsonSchema[]"
              }
            },
            {
              "name": "rootSchema",
              "type": {
                "text": "JsonSchema"
              }
            }
          ],
          "description": "For a given anyOf schema array this will try and extract a common const property which can be used as a discriminator\r\nwhen creating instances"
        },
        {
          "kind": "function",
          "name": "getSchemaConst",
          "return": {
            "type": {
              "text": "any"
            }
          },
          "parameters": [
            {
              "name": "schema",
              "type": {
                "text": "JsonSchema"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getSchemaPicker",
          "return": {
            "type": {
              "text": "TemplateResult"
            }
          },
          "parameters": [
            {
              "name": "rootSchema",
              "type": {
                "text": "JsonSchema"
              }
            },
            {
              "name": "resolvedSchema",
              "type": {
                "text": "JsonSchema"
              }
            },
            {
              "name": "path",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "keyword",
              "type": {
                "text": "\"anyOf\" | \"oneOf\""
              }
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "selectedCallback",
              "type": {
                "text": "(selectedSchema: CombinatorInfo) => void"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "findSchemaTitleAndDescription",
          "return": {
            "type": {
              "text": "[string | undefined, string | undefined]"
            }
          },
          "parameters": [
            {
              "name": "schema",
              "type": {
                "text": "JsonSchema"
              }
            },
            {
              "name": "rootSchema",
              "type": {
                "text": "JsonSchema"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "mapStateToCombinatorRendererProps",
          "return": {
            "type": {
              "text": "StatePropsOfCombinator"
            }
          },
          "parameters": [
            {
              "name": "state",
              "type": {
                "text": "JsonFormsState"
              }
            },
            {
              "name": "ownProps",
              "type": {
                "text": "OwnPropsOfControl"
              }
            },
            {
              "name": "keyword",
              "type": {
                "text": "CombinatorKeyword"
              }
            }
          ],
          "description": "Copied from eclipse source code to inject global definitions into the validating schema otherwise AJV will fail\r\nto compile the schema - not perfect but works for our cases"
        },
        {
          "kind": "function",
          "name": "getLabel",
          "return": {
            "type": {
              "text": "string | undefined"
            }
          },
          "parameters": [
            {
              "name": "schema",
              "type": {
                "text": "JsonSchema"
              }
            },
            {
              "name": "rootSchema",
              "type": {
                "text": "JsonSchema"
              }
            },
            {
              "name": "uiElementLabel",
              "optional": true,
              "type": {
                "text": "string"
              }
            },
            {
              "name": "uiElementScope",
              "optional": true,
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "resolveSubSchemasRecursive",
          "return": {
            "type": {
              "text": "JsonSchema"
            }
          },
          "parameters": [
            {
              "name": "schema",
              "type": {
                "text": "JsonSchema"
              }
            },
            {
              "name": "rootSchema",
              "type": {
                "text": "JsonSchema"
              }
            },
            {
              "name": "keyword",
              "optional": true,
              "type": {
                "text": "CombinatorKeyword"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "controlWithoutLabel",
          "return": {
            "type": {
              "text": "ControlElement"
            }
          },
          "parameters": [
            {
              "name": "scope",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "showJsonEditor",
          "return": {
            "type": {
              "text": "void"
            }
          },
          "parameters": [
            {
              "name": "title",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            },
            {
              "name": "updateCallback",
              "type": {
                "text": "(newValue: string) => void"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getTemplateFromProps",
          "declaration": {
            "name": "getTemplateFromProps",
            "module": "../or-json-forms/src/util.ts"
          }
        },
        {
          "kind": "js",
          "name": "getCombinatorInfos",
          "declaration": {
            "name": "getCombinatorInfos",
            "module": "../or-json-forms/src/util.ts"
          }
        },
        {
          "kind": "js",
          "name": "getSchemaConst",
          "declaration": {
            "name": "getSchemaConst",
            "module": "../or-json-forms/src/util.ts"
          }
        },
        {
          "kind": "js",
          "name": "getSchemaPicker",
          "declaration": {
            "name": "getSchemaPicker",
            "module": "../or-json-forms/src/util.ts"
          }
        },
        {
          "kind": "js",
          "name": "findSchemaTitleAndDescription",
          "declaration": {
            "name": "findSchemaTitleAndDescription",
            "module": "../or-json-forms/src/util.ts"
          }
        },
        {
          "kind": "js",
          "name": "mapStateToCombinatorRendererProps",
          "declaration": {
            "name": "mapStateToCombinatorRendererProps",
            "module": "../or-json-forms/src/util.ts"
          }
        },
        {
          "kind": "js",
          "name": "getLabel",
          "declaration": {
            "name": "getLabel",
            "module": "../or-json-forms/src/util.ts"
          }
        },
        {
          "kind": "js",
          "name": "resolveSubSchemasRecursive",
          "declaration": {
            "name": "resolveSubSchemasRecursive",
            "module": "../or-json-forms/src/util.ts"
          }
        },
        {
          "kind": "js",
          "name": "controlWithoutLabel",
          "declaration": {
            "name": "controlWithoutLabel",
            "module": "../or-json-forms/src/util.ts"
          }
        },
        {
          "kind": "js",
          "name": "showJsonEditor",
          "declaration": {
            "name": "showJsonEditor",
            "module": "../or-json-forms/src/util.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-log-viewer/src/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrLogViewer",
          "members": [
            {
              "kind": "field",
              "name": "DEFAULT_TIMESTAMP_FORMAT",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "default": "\"L HH:mm:ss\""
            },
            {
              "kind": "field",
              "name": "DEFAULT_LIMIT",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "static": true,
              "default": "50"
            },
            {
              "kind": "field",
              "name": "DEFAULT_LEVEL",
              "privacy": "public",
              "static": true
            },
            {
              "kind": "field",
              "name": "DEFAULT_INTERVAL",
              "privacy": "public",
              "static": true
            },
            {
              "kind": "field",
              "name": "interval",
              "type": {
                "text": "Model.DatapointInterval | undefined"
              },
              "privacy": "public",
              "attribute": "interval"
            },
            {
              "kind": "field",
              "name": "timestamp",
              "type": {
                "text": "Date | undefined"
              },
              "privacy": "public",
              "attribute": "timestamp"
            },
            {
              "kind": "field",
              "name": "limit",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "attribute": "limit"
            },
            {
              "kind": "field",
              "name": "categories",
              "type": {
                "text": "Model.SyslogCategory[] | undefined"
              },
              "privacy": "public",
              "attribute": "categories"
            },
            {
              "kind": "field",
              "name": "filter",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "filter"
            },
            {
              "kind": "field",
              "name": "level",
              "type": {
                "text": "Model.SyslogLevel | undefined"
              },
              "privacy": "public",
              "attribute": "level"
            },
            {
              "kind": "field",
              "name": "live",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "live"
            },
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "ViewerConfig | undefined"
              },
              "privacy": "public",
              "attribute": "config"
            },
            {
              "kind": "field",
              "name": "_loading",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "attribute": "_loading"
            },
            {
              "kind": "field",
              "name": "_data",
              "type": {
                "text": "Model.SyslogEvent[] | undefined"
              },
              "privacy": "protected",
              "attribute": "_data"
            },
            {
              "kind": "field",
              "name": "_tableElem",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_table",
              "type": {
                "text": "MDCDataTable | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_eventSubscriptionId",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_refresh",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_pageCount",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_currentPage",
              "type": {
                "text": "number"
              },
              "privacy": "protected",
              "default": "1"
            },
            {
              "kind": "field",
              "name": "_pendingCategories",
              "type": {
                "text": "Model.SyslogCategory[] | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_getLimitOptions",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_getLevelOptions",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_getCategoryMenuItems",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "ListItem[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "getLimit",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_onCategoriesChanged",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "values",
                  "type": {
                    "text": "Model.SyslogCategory[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onCategoriesClosed",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_onLiveChanged",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "live",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onLimitChanged",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "limit",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onFilterChanged",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "filter",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onLevelChanged",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "level",
                  "type": {
                    "text": "Model.SyslogLevel"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getTable",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "_getIntervalOptions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "[string, string][]"
                }
              }
            },
            {
              "kind": "method",
              "name": "_loadData",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_getPageCount",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "number | undefined"
                }
              },
              "parameters": [
                {
                  "name": "response",
                  "type": {
                    "text": "GenericAxiosResponse<any>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_updatePage",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "forward",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_subscribeEvents",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_unsubscribeEvents",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_getFrom",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "number | undefined"
                }
              }
            },
            {
              "kind": "method",
              "name": "_calculateTimestamp",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Date | undefined"
                }
              },
              "parameters": [
                {
                  "name": "timestamp",
                  "type": {
                    "text": "Date"
                  }
                },
                {
                  "name": "forward",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onEvent",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Model.SyslogEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_eventMatchesLevel",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Model.SyslogEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_cleanup",
              "privacy": "protected"
            }
          ],
          "attributes": [
            {
              "name": "interval",
              "type": {
                "text": "Model.DatapointInterval | undefined"
              },
              "fieldName": "interval"
            },
            {
              "name": "timestamp",
              "type": {
                "text": "Date | undefined"
              },
              "fieldName": "timestamp"
            },
            {
              "name": "limit",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "limit"
            },
            {
              "name": "categories",
              "type": {
                "text": "Model.SyslogCategory[] | undefined"
              },
              "fieldName": "categories"
            },
            {
              "name": "filter",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "filter"
            },
            {
              "name": "level",
              "type": {
                "text": "Model.SyslogLevel | undefined"
              },
              "fieldName": "level"
            },
            {
              "name": "live",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "live"
            },
            {
              "name": "config",
              "type": {
                "text": "ViewerConfig | undefined"
              },
              "fieldName": "config"
            },
            {
              "name": "_loading",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "_loading"
            },
            {
              "name": "_data",
              "type": {
                "text": "Model.SyslogEvent[] | undefined"
              },
              "fieldName": "_data"
            }
          ],
          "mixins": [
            {
              "name": "translate(i18next)",
              "module": "../or-log-viewer/src/index.ts"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-log-viewer",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrLogViewer",
          "declaration": {
            "name": "OrLogViewer",
            "module": "../or-log-viewer/src/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-log-viewer",
          "declaration": {
            "name": "OrLogViewer",
            "module": "../or-log-viewer/src/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-map/src/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrMapLoadedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-map-loaded\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-map/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrMapClickedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-map-clicked\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-map/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrMapLongPressEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-map-long-press\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-map/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrMapGeocoderChangeEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-map-geocoder-change\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-map/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "CenterControl",
          "members": [
            {
              "kind": "field",
              "name": "map",
              "type": {
                "text": "MapGL | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "elem",
              "type": {
                "text": "HTMLElement | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "pos",
              "type": {
                "text": "LngLatLike | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "onAdd",
              "return": {
                "type": {
                  "text": "HTMLElement"
                }
              },
              "parameters": [
                {
                  "name": "map",
                  "type": {
                    "text": "MapGL"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onRemove",
              "parameters": [
                {
                  "name": "map",
                  "type": {
                    "text": "MapGL"
                  }
                }
              ]
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "CoordinatesControl",
          "members": [
            {
              "kind": "field",
              "name": "map",
              "type": {
                "text": "MapGL | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "elem",
              "type": {
                "text": "HTMLElement | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "OrMwcInput"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_readonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "!!(options && options.disabled)"
            },
            {
              "kind": "field",
              "name": "_value",
              "type": {
                "text": "any"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_valueChangedHandler",
              "type": {
                "text": "(value: LngLat | undefined) => void"
              },
              "privacy": "protected",
              "default": "valueChangedHandler"
            },
            {
              "kind": "method",
              "name": "onAdd",
              "return": {
                "type": {
                  "text": "HTMLElement"
                }
              },
              "parameters": [
                {
                  "name": "map",
                  "type": {
                    "text": "MapGL"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onRemove",
              "parameters": [
                {
                  "name": "map",
                  "type": {
                    "text": "MapGL"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "readonly",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "value",
              "privacy": "public"
            }
          ]
        },
        {
          "kind": "function",
          "name": "geoJsonPointInputTemplateProvider",
          "parameters": [
            {
              "name": "assetDescriptor"
            },
            {
              "name": "valueHolder"
            },
            {
              "name": "valueHolderDescriptor"
            },
            {
              "name": "valueDescriptor"
            },
            {
              "name": "valueChangeNotifier"
            },
            {
              "name": "options"
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrMap",
          "members": [
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "MapType"
              },
              "privacy": "public",
              "attribute": "type"
            },
            {
              "kind": "field",
              "name": "_markerStyles",
              "type": {
                "text": "string[]"
              },
              "privacy": "protected",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "center",
              "type": {
                "text": "LngLatLike | undefined"
              },
              "privacy": "public",
              "attribute": "center"
            },
            {
              "kind": "field",
              "name": "zoom",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "attribute": "zoom"
            },
            {
              "kind": "field",
              "name": "showGeoCodingControl",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "showGeoCodingControl"
            },
            {
              "kind": "field",
              "name": "showBoundaryBoxControl",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "showBoundaryBoxControl"
            },
            {
              "kind": "field",
              "name": "useZoomControl",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "attribute": "useZoomControl"
            },
            {
              "kind": "field",
              "name": "geoJson",
              "type": {
                "text": "GeoJsonConfig | undefined"
              },
              "privacy": "public",
              "attribute": "geoJson"
            },
            {
              "kind": "field",
              "name": "showGeoJson",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "attribute": "showGeoJson"
            },
            {
              "kind": "field",
              "name": "boundary",
              "type": {
                "text": "string[]"
              },
              "privacy": "public",
              "default": "[]",
              "attribute": "boundary"
            },
            {
              "kind": "field",
              "name": "controls",
              "type": {
                "text": "(IControl | [IControl, ControlPosition?])[] | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "_initCallback",
              "type": {
                "text": "EventCallback | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_map",
              "type": {
                "text": "MapWidget | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_loaded",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_observer",
              "type": {
                "text": "FlattenedNodesObserver | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_markers",
              "type": {
                "text": "OrMapMarker[]"
              },
              "privacy": "protected",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "_resizeObserver",
              "type": {
                "text": "ResizeObserver | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_mapContainer",
              "type": {
                "text": "HTMLElement | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_slotElement",
              "type": {
                "text": "HTMLSlotElement | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "markers",
              "type": {
                "text": "OrMapMarker[]"
              },
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "refresh",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "loadMap",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "resize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "flyTo",
              "privacy": "public",
              "parameters": [
                {
                  "name": "coordinates",
                  "optional": true,
                  "type": {
                    "text": "LngLatLike"
                  }
                },
                {
                  "name": "zoom",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onMarkerChangedEvent",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "evt",
                  "type": {
                    "text": "OrMapMarkerChangedEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_processNewMarkers",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "nodes",
                  "type": {
                    "text": "Element[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_processRemovedMarkers",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "nodes",
                  "type": {
                    "text": "Element[]"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "type",
              "type": {
                "text": "MapType"
              },
              "fieldName": "type"
            },
            {
              "name": "center",
              "type": {
                "text": "LngLatLike | undefined"
              },
              "fieldName": "center"
            },
            {
              "name": "zoom",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "zoom"
            },
            {
              "name": "showGeoCodingControl",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "showGeoCodingControl"
            },
            {
              "name": "showBoundaryBoxControl",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "showBoundaryBoxControl"
            },
            {
              "name": "useZoomControl",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "fieldName": "useZoomControl"
            },
            {
              "name": "geoJson",
              "type": {
                "text": "GeoJsonConfig | undefined"
              },
              "fieldName": "geoJson"
            },
            {
              "name": "showGeoJson",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "fieldName": "showGeoJson"
            },
            {
              "name": "boundary",
              "type": {
                "text": "string[]"
              },
              "default": "[]",
              "fieldName": "boundary"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-map",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Util",
          "declaration": {
            "name": "Util",
            "module": "../or-map/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "LngLatLike",
          "declaration": {
            "name": "LngLatLike",
            "module": "../or-map/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./markers/or-map-marker\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./markers/or-map-marker-asset\""
          }
        },
        {
          "kind": "js",
          "name": "IControl",
          "declaration": {
            "name": "IControl",
            "module": "\"maplibre-gl\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./or-map-asset-card\""
          }
        },
        {
          "kind": "js",
          "name": "OrMapLoadedEvent",
          "declaration": {
            "name": "OrMapLoadedEvent",
            "module": "../or-map/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrMapClickedEvent",
          "declaration": {
            "name": "OrMapClickedEvent",
            "module": "../or-map/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrMapLongPressEvent",
          "declaration": {
            "name": "OrMapLongPressEvent",
            "module": "../or-map/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrMapGeocoderChangeEvent",
          "declaration": {
            "name": "OrMapGeocoderChangeEvent",
            "module": "../or-map/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "CenterControl",
          "declaration": {
            "name": "CenterControl",
            "module": "../or-map/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "CoordinatesControl",
          "declaration": {
            "name": "CoordinatesControl",
            "module": "../or-map/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "geoJsonPointInputTemplateProvider",
          "declaration": {
            "name": "geoJsonPointInputTemplateProvider",
            "module": "../or-map/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrMap",
          "declaration": {
            "name": "OrMap",
            "module": "../or-map/src/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-map",
          "declaration": {
            "name": "OrMap",
            "module": "../or-map/src/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-map/src/mapwidget.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MapWidget",
          "members": [
            {
              "kind": "field",
              "name": "_mapJs",
              "type": {
                "text": "L.mapbox.Map | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_mapGl",
              "type": {
                "text": "MapGL | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_type",
              "type": {
                "text": "MapType"
              },
              "privacy": "protected",
              "default": "typeString"
            },
            {
              "kind": "field",
              "name": "_styleParent",
              "type": {
                "text": "Node"
              },
              "privacy": "protected",
              "default": "styleParent"
            },
            {
              "kind": "field",
              "name": "_mapContainer",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected",
              "default": "mapContainer"
            },
            {
              "kind": "field",
              "name": "_loaded",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_markersJs",
              "type": {
                "text": "Map<OrMapMarker, L.Marker>"
              },
              "privacy": "protected",
              "default": "new Map()"
            },
            {
              "kind": "field",
              "name": "_markersGl",
              "type": {
                "text": "Map<OrMapMarker, MarkerGL>"
              },
              "privacy": "protected",
              "default": "new Map()"
            },
            {
              "kind": "field",
              "name": "_geoJsonConfig",
              "type": {
                "text": "GeoJsonConfig | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_geoJsonSources",
              "type": {
                "text": "string[]"
              },
              "privacy": "protected",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "_geoJsonLayers",
              "type": {
                "text": "Map<string, any>"
              },
              "privacy": "protected",
              "default": "new Map()"
            },
            {
              "kind": "field",
              "name": "_viewSettings",
              "type": {
                "text": "ViewSettings | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_center",
              "type": {
                "text": "LngLatLike | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_zoom",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_showGeoCodingControl",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "showGeoCodingControl"
            },
            {
              "kind": "field",
              "name": "_showBoundaryBox",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "showBoundaryBox"
            },
            {
              "kind": "field",
              "name": "_useZoomControls",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "useZoomControls"
            },
            {
              "kind": "field",
              "name": "_showGeoJson",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "showGeoJson"
            },
            {
              "kind": "field",
              "name": "_controls",
              "type": {
                "text": "(IControl | [IControl, ControlPosition?])[] | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_clickHandlers",
              "type": {
                "text": "Map<OrMapMarker, (ev: MouseEvent) => void>"
              },
              "privacy": "protected",
              "default": "new Map()"
            },
            {
              "kind": "field",
              "name": "_geocoder",
              "type": {
                "text": "any | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "setCenter",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "center",
                  "optional": true,
                  "type": {
                    "text": "LngLatLike"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "flyTo",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "coordinates",
                  "optional": true,
                  "type": {
                    "text": "LngLatLike"
                  }
                },
                {
                  "name": "zoom",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "resize",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              }
            },
            {
              "kind": "method",
              "name": "setZoom",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "zoom",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setControls",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "controls",
                  "optional": true,
                  "type": {
                    "text": "(IControl | [IControl, ControlPosition?])[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setGeoJson",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "this"
                }
              },
              "parameters": [
                {
                  "name": "geoJsonConfig",
                  "optional": true,
                  "type": {
                    "text": "GeoJsonConfig"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "loadViewSettings",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "load",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "method",
              "name": "styleLoaded",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "method",
              "name": "unload",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "_onMapClick",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "lngLat",
                  "type": {
                    "text": "LngLat"
                  }
                },
                {
                  "name": "doubleClicked",
                  "default": "false",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "loadGeoJSON",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "geoJsonConfig",
                  "optional": true,
                  "type": {
                    "text": "GeoJsonConfig"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "groupSourcesByGeometryType",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Map<string, Feature[]> | undefined"
                }
              },
              "parameters": [
                {
                  "name": "sources",
                  "type": {
                    "text": "FeatureCollection"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "addGeoJSONSource",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "{ source: GeoJSONSourceSpecification, sourceId: string } | undefined"
                }
              },
              "parameters": [
                {
                  "name": "source",
                  "type": {
                    "text": "GeoJSONSourceSpecification"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "addGeoJSONLayer",
              "privacy": "public",
              "parameters": [
                {
                  "name": "typeString",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "sourceId",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "addMarker",
              "privacy": "public",
              "parameters": [
                {
                  "name": "marker",
                  "type": {
                    "text": "OrMapMarker"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "removeMarker",
              "privacy": "public",
              "parameters": [
                {
                  "name": "marker",
                  "type": {
                    "text": "OrMapMarker"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onMarkerChanged",
              "privacy": "public",
              "parameters": [
                {
                  "name": "marker",
                  "type": {
                    "text": "OrMapMarker"
                  }
                },
                {
                  "name": "prop",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_updateMarkerPosition",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "marker",
                  "type": {
                    "text": "OrMapMarker"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_updateMarkerElement",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "marker",
                  "type": {
                    "text": "OrMapMarker"
                  }
                },
                {
                  "name": "doAdd",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_removeMarkerRadius",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "marker",
                  "type": {
                    "text": "OrMapMarker"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_createMarkerRadius",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "marker",
                  "type": {
                    "text": "OrMapMarker"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "createBoundaryBox",
              "privacy": "public",
              "parameters": [
                {
                  "name": "boundsArray",
                  "default": "[]",
                  "type": {
                    "text": "string[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_addMarkerClickHandler",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "marker",
                  "type": {
                    "text": "OrMapMarker"
                  }
                },
                {
                  "name": "elem",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_removeMarkerClickHandler",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "marker",
                  "type": {
                    "text": "OrMapMarker"
                  }
                },
                {
                  "name": "elem",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_forwardGeocode",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_reverseGeocode",
              "privacy": "public",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "{lat: number, lon:number}"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_initLongPressEvent",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_onLongPress",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "lngLat",
                  "type": {
                    "text": "LngLat"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onGeocodeChange",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "geocode",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MapWidget",
          "declaration": {
            "name": "MapWidget",
            "module": "../or-map/src/mapwidget.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-map/src/or-map-asset-card.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrMapAssetCardLoadAssetEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-map-asset-card-load-asset\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-map/src/or-map-asset-card.ts"
          }
        },
        {
          "kind": "variable",
          "name": "DefaultConfig",
          "type": {
            "text": "MapAssetCardConfig"
          },
          "default": "{ default: { exclude: [\"notes\"] }, assetTypes: { } }"
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrMapAssetCard",
          "members": [
            {
              "kind": "field",
              "name": "assetId",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "assetId",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "asset",
              "type": {
                "text": "Asset | undefined"
              },
              "privacy": "public",
              "attribute": "asset"
            },
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "MapAssetCardConfig | undefined"
              },
              "privacy": "public",
              "attribute": "config"
            },
            {
              "kind": "field",
              "name": "markerconfig",
              "type": {
                "text": "MapMarkerAssetConfig | undefined"
              },
              "privacy": "public",
              "attribute": "markerconfig"
            },
            {
              "kind": "field",
              "name": "useAssetColor",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "attribute": "useAssetColor"
            },
            {
              "kind": "method",
              "name": "_onEvent",
              "privacy": "public",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "SharedEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getCardConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "MapAssetCardTypeConfig | undefined"
                }
              }
            },
            {
              "kind": "method",
              "name": "_loadAsset",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "assetId",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getIcon",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "string | undefined"
                }
              }
            },
            {
              "kind": "method",
              "name": "getColor",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "string | undefined"
                }
              }
            }
          ],
          "events": [
            {
              "name": "assetId",
              "type": {
                "text": "OrMapAssetCardLoadAssetEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "assetId",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "assetId"
            },
            {
              "name": "asset",
              "type": {
                "text": "Asset | undefined"
              },
              "fieldName": "asset"
            },
            {
              "name": "config",
              "type": {
                "text": "MapAssetCardConfig | undefined"
              },
              "fieldName": "config"
            },
            {
              "name": "markerconfig",
              "type": {
                "text": "MapMarkerAssetConfig | undefined"
              },
              "fieldName": "markerconfig"
            },
            {
              "name": "useAssetColor",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "fieldName": "useAssetColor"
            }
          ],
          "mixins": [
            {
              "name": "subscribe(manager)",
              "module": "../or-map/src/or-map-asset-card.ts"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-map-asset-card",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrMapAssetCardLoadAssetEvent",
          "declaration": {
            "name": "OrMapAssetCardLoadAssetEvent",
            "module": "../or-map/src/or-map-asset-card.ts"
          }
        },
        {
          "kind": "js",
          "name": "DefaultConfig",
          "declaration": {
            "name": "DefaultConfig",
            "module": "../or-map/src/or-map-asset-card.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrMapAssetCard",
          "declaration": {
            "name": "OrMapAssetCard",
            "module": "../or-map/src/or-map-asset-card.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-map-asset-card",
          "declaration": {
            "name": "OrMapAssetCard",
            "module": "../or-map/src/or-map-asset-card.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-map/src/style.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "markerColorVar",
          "type": {
            "text": "string"
          },
          "default": "\"--internal-or-map-marker-color\""
        },
        {
          "kind": "variable",
          "name": "markerActiveColorVar",
          "type": {
            "text": "string"
          },
          "default": "\"--internal-or-map-marker-active-color\""
        },
        {
          "kind": "variable",
          "name": "style",
          "default": "css` :host { --internal-or-map-width: var(--or-map-width, 100%); --internal-or-map-min-height: var(--or-map-min-height, 300px); --internal-or-map-marker-transform: var(--or-map-marker-transform, translate(-16px, -29px)); --internal-or-map-marker-width: var(--or-map-marker-width, 32px); --internal-or-map-marker-height: var(--or-map-marker-height, 32px); --internal-or-map-marker-color: var(--or-map-marker-color, var(--or-app-color4, ${unsafeCSS(DefaultColor4)})); --internal-or-map-marker-stroke: var(--or-map-marker-stroke, none); --internal-or-map-marker-icon-color: var(--or-map-marker-icon-color, var(--or-app-color1, ${unsafeCSS(DefaultColor1)})); --internal-or-map-marker-icon-stroke: var(--or-map-marker-icon-stroke, none); --internal-or-map-marker-icon-width: var(--or-map-marker-icon-width, 16px); --internal-or-map-marker-icon-height: var(--or-map-marker-icon-height, 16px); --internal-or-map-marker-icon-transform: var(--or-map-marker-icon-transform, translate(-50%, -14px)); --internal-or-map-marker-active-transform: var(--or-map-marker-active-transform, translate(-24px, -44px)); --internal-or-map-marker-active-width: var(--or-map-marker-active-width, 48px); --internal-or-map-marker-active-height: var(--or-map-marker-active-height, 48px); --internal-or-map-marker-active-color: var(--or-map-marker-active-color, var(--or-app-color4, ${unsafeCSS(DefaultColor4)})); --internal-or-map-marker-active-stroke: var(--or-map-marker-active-stroke, 2px); --internal-or-map-marker-icon-active-color: var(--or-map-marker-icon-active-color, var(--or-app-color1, ${unsafeCSS(DefaultColor1)})); --internal-or-map-marker-icon-active-stroke: var(--or-map-marker-icon-active-stroke, none); --internal-or-map-marker-icon-active-width: var(--or-map-marker-icon-active-width, 24px); --internal-or-map-marker-icon-active-height: var(--or-map-marker-icon-active-height, 24px); --internal-or-map-marker-icon-active-transform: var(--or-map-marker-icon-active-transform, translate(-50%, -20px)); display: block; overflow: hidden; min-height: var(--internal-or-map-min-height); width: var(--internal-or-map-width); } canvas { outline: none !important; } :host([hidden]) { display: none; } slot { display: none; } #container { position: relative; width: 100%; height: 100%; } #map { position: absolute; left: 0; right: 0; top: 0; bottom: 0; } .mapboxgl-ctrl-geocoder, .maplibregl-ctrl-geocoder--input { width: calc(100% - 20px) } .leaflet-marker-icon, .maplibregl-marker, .mapboxgl-marker { pointer-events: none !important; } .or-map-marker { position: absolute; /* This makes mapboxJS behave like mapboxGL */ } .or-map-marker.active { z-index: 1; } .marker-container { position: relative; cursor: pointer; transform: var(--internal-or-map-marker-transform); --or-icon-fill: var(--internal-or-map-marker-color); --or-icon-width: var(--internal-or-map-marker-width); --or-icon-height: var(--internal-or-map-marker-height); --or-icon-stroke: var(--internal-or-map-marker-stroke); } .or-map-marker.active .marker-container { transform: var(--internal-or-map-marker-active-transform); --or-icon-fill: var(--internal-or-map-marker-active-color); --or-icon-width: var(--internal-or-map-marker-active-width); --or-icon-height: var(--internal-or-map-marker-active-height); --or-icon-stroke: var(--internal-or-map-marker-active-stroke); } .or-map-marker.interactive .marker-container { pointer-events: all; } .or-map-marker-default.interactive .marker-container { pointer-events: none; --or-icon-pointer-events: visible; } .or-map-marker .marker-icon { position: absolute; left: 50%; top: 50%; z-index: 1000; --or-icon-fill: var(--internal-or-map-marker-icon-color); --or-icon-stroke: var(--internal-or-map-marker-icon-stroke); --or-icon-width: var(--internal-or-map-marker-icon-width); --or-icon-height: var(--internal-or-map-marker-icon-height); transform: var(--internal-or-map-marker-icon-transform); } .or-map-marker.active .marker-icon { transform: var(--internal-or-map-marker-icon-active-transform); --or-icon-fill: var(--internal-or-map-marker-icon-active-color); --or-icon-stroke: var(--internal-or-map-marker-icon-active-stroke); --or-icon-width: var(--internal-or-map-marker-icon-active-width); --or-icon-height: var(--internal-or-map-marker-icon-active-height); } #openremote { position: absolute; bottom: 25px; right: 5px; height: 20px; width: 20px; cursor: pointer; } #openremote img { height: 20px; width: 20px; } @media only screen and (max-width: 640px) { #openremote { bottom: 40px; right: 12px; } } `"
        },
        {
          "kind": "variable",
          "name": "mapAssetCardStyle",
          "default": "css` :host { --internal-or-map-asset-card-header-color: var(--or-map-asset-card-header-color, var(--or-app-color4, ${unsafeCSS(DefaultColor4)})); --internal-or-map-asset-card-header-text-color: var(--or-map-asset-card-header-text-color, var(--or-app-color1, ${unsafeCSS(DefaultColor1)})); --internal-or-map-asset-card-header-height: var(--or-map-asset-card-header-height, calc(${unsafeCSS(DefaultHeaderHeight)} - 10px)); --internal-or-map-asset-card-background-color: var(--or-map-asset-card-background-color, var(--or-app-color1, ${unsafeCSS(DefaultColor1)})); --internal-or-map-asset-card-background-text-color: var(--or-map-asset-card-background-text-color, var(--or-app-color3, ${unsafeCSS(DefaultColor3)})); --internal-or-map-asset-card-separator-color: var(--or-map-asset-card-separator-color, var(--or-app-color2, ${unsafeCSS(DefaultColor2)})); display: block; } #card-container { display: flex; flex-direction: column; height: 100%; background-color: var(--internal-or-map-asset-card-background-color); -webkit-box-shadow: 1px 1px 2px 0px rgba(0,0,0,0.28); -moz-box-shadow: 1px 1px 2px 0px rgba(0,0,0,0.28); box-shadow: 1px 1px 2px 0px rgba(0,0,0,0.28); } #header { height: var(--internal-or-map-asset-card-header-height); background-color: var(--internal-or-map-asset-card-header-color); line-height: var(--internal-or-map-asset-card-header-height); border-bottom: 1px solid ${unsafeCSS(DefaultColor5)}; text-align: center; color: var(--internal-or-map-asset-card-header-text-color); --or-icon-fill: var(--internal-or-map-asset-card-header-text-color); --or-icon-width: 20px; --or-icon-height: 20px; z-index: 99999; } #header > or-icon { margin-right: 5px; } #title { font-weight: 500; } #attribute-list { flex: 1; color: var(--internal-or-map-asset-card-background-text-color); padding: 10px 20px; overflow: auto; font-size: 14px; } ul { list-style-type: none; margin: 0; padding: 0; } li { display: flex; line-height: 30px; } li.highlighted { font-weight: bold; } .attribute-name { flex: 1; } .attribute-value { overflow: hidden; padding-left: 20px; text-align: right; } #footer { height: var(--internal-or-map-asset-card-header-height); border-top: 1px solid var(--internal-or-map-asset-card-separator-color); text-align: right; padding: 5px 12px; } @media only screen and (min-width: 40em){ #card-container { height: 400px; /* fallback for IE */ height: max-content; max-height: calc(100vh - 150px); min-height: 134px; } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "markerColorVar",
          "declaration": {
            "name": "markerColorVar",
            "module": "../or-map/src/style.ts"
          }
        },
        {
          "kind": "js",
          "name": "markerActiveColorVar",
          "declaration": {
            "name": "markerActiveColorVar",
            "module": "../or-map/src/style.ts"
          }
        },
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "../or-map/src/style.ts"
          }
        },
        {
          "kind": "js",
          "name": "mapAssetCardStyle",
          "declaration": {
            "name": "mapAssetCardStyle",
            "module": "../or-map/src/style.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-map/src/util.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "getLngLat",
          "return": {
            "type": {
              "text": "{ lng: number, lat: number } | undefined"
            }
          },
          "parameters": [
            {
              "name": "lngLatLike",
              "optional": true,
              "type": {
                "text": "LngLatLike | Asset | ValueHolder<any> | GeoJSONPoint"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getGeoJSONPoint",
          "return": {
            "type": {
              "text": "GeoJSONPoint | undefined"
            }
          },
          "parameters": [
            {
              "name": "lngLat",
              "type": {
                "text": "LngLatLike | undefined"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getLngLatBounds",
          "return": {
            "type": {
              "text": "LngLatBounds | undefined"
            }
          },
          "parameters": [
            {
              "name": "lngLatBoundsLike",
              "optional": true,
              "type": {
                "text": "LngLatBoundsLike"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getLatLngBounds",
          "return": {
            "type": {
              "text": "L.LatLngBounds | undefined"
            }
          },
          "parameters": [
            {
              "name": "lngLatBoundsLike",
              "optional": true,
              "type": {
                "text": "LngLatBoundsLike"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getMarkerIconAndColorFromAssetType",
          "return": {
            "type": {
              "text": "{icon: string, color: string | undefined | AttributeMarkerColoursRange[]} | undefined"
            }
          },
          "parameters": [
            {
              "name": "type",
              "type": {
                "text": "AssetDescriptor | string | undefined"
              }
            },
            {
              "name": "configOverrideSettings",
              "optional": true,
              "type": {
                "text": "OverrideConfigSettings"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getLngLat",
          "declaration": {
            "name": "getLngLat",
            "module": "../or-map/src/util.ts"
          }
        },
        {
          "kind": "js",
          "name": "getGeoJSONPoint",
          "declaration": {
            "name": "getGeoJSONPoint",
            "module": "../or-map/src/util.ts"
          }
        },
        {
          "kind": "js",
          "name": "getLngLatBounds",
          "declaration": {
            "name": "getLngLatBounds",
            "module": "../or-map/src/util.ts"
          }
        },
        {
          "kind": "js",
          "name": "getLatLngBounds",
          "declaration": {
            "name": "getLatLngBounds",
            "module": "../or-map/src/util.ts"
          }
        },
        {
          "kind": "js",
          "name": "getMarkerIconAndColorFromAssetType",
          "declaration": {
            "name": "getMarkerIconAndColorFromAssetType",
            "module": "../or-map/src/util.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-mobile-app/src/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "# Mobile App\r\n### `<or-mobile-app>` - `OrMobileApp`\r\n\r\nExtended class of OrApp that includes features useful for building smooth mobile apps. <br />\r\nThink of transitions or loaders between pages, additional caching functions, and additional states to obtain data from.",
          "name": "OrMobileApp",
          "members": [
            {
              "kind": "field",
              "name": "loadingPageProvider",
              "type": {
                "text": "PageProvider<any> | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_loadPage",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<Page<any>>"
                }
              },
              "parameters": [
                {
                  "name": "pageProvider",
                  "type": {
                    "text": "PageProvider<any>"
                  }
                },
                {
                  "name": "beforeLoad",
                  "optional": true,
                  "type": {
                    "text": "(page: Page<any>) => (Promise<void> | void)"
                  }
                },
                {
                  "name": "animate",
                  "default": "true"
                }
              ],
              "description": "Internal function used for initializing the page using a PageProvider function,\r\nAfter the web component is created, we will append it as a child to the HTML using the _mainElem container.",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "_unloadPage",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "page",
                  "optional": true,
                  "type": {
                    "text": "MobilePage<any>"
                  },
                  "description": "The {@link MobilePage}to unload\r\n     * "
                },
                {
                  "name": "animate",
                  "default": "true",
                  "description": "Whether to animate a fade out"
                }
              ],
              "description": "Unloads the page from the `<amin>` element.\r\nBy default, it unloads the existing / current MobilePage, and animates a fade out.",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "_applyLoadingPage",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "page",
                  "type": {
                    "text": "MobilePage<any>"
                  }
                },
                {
                  "name": "animate",
                  "default": "true"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_unloadLoadingPage",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "page",
                  "default": "this._mainElem.querySelector('#loading-page')",
                  "type": {
                    "text": "MobilePage<any> | undefined"
                  }
                },
                {
                  "name": "animate",
                  "default": "true"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_doEnterAnimation",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "page",
                  "type": {
                    "text": "MobilePage<any>"
                  }
                },
                {
                  "name": "animation",
                  "optional": true,
                  "type": {
                    "text": "MobilePageAnimation"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_doExitAnimation",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "page",
                  "type": {
                    "text": "MobilePage<any>"
                  }
                },
                {
                  "name": "animation",
                  "optional": true,
                  "type": {
                    "text": "MobilePageAnimation"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "OFFLINE_PAGE_ID",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "default": "\"offline-page\"",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "appConfig",
              "type": {
                "text": "AppConfig<S> | undefined"
              },
              "privacy": "public",
              "description": "App configuration JSON object to set up the pages, header items, and languages.\r\nYou can use the RealmAppConfig field to adjust these options per realm.",
              "attribute": "appConfig",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "appConfigProvider",
              "type": {
                "text": "(manager: Manager) => AppConfig<S> | undefined"
              },
              "privacy": "public",
              "description": "Callback function that overrides the appConfig attribute.\r\nThis is preferred sometimes to dynamically adjust the config.",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "managerConfig",
              "type": {
                "text": "ManagerConfig | undefined"
              },
              "privacy": "public",
              "description": "Manager config JSON object for adjusting deployment-targeted options such as managerUrl, realm, mapType, autoLogin etc.",
              "attribute": "managerConfig",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mainElem",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "_initialised",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "_page",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "_config",
              "type": {
                "text": "RealmAppConfig"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "_realm",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "_offline",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showOfflineFallback",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "_activeMenu",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "_onEvent",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "_onVisibilityChanged",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "_realms",
              "type": {
                "text": "Realm[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "_offlineFallbackDeferred",
              "type": {
                "text": "Util.Deferred<void> | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "_store",
              "type": {
                "text": "Store<S, AnyAction>"
              },
              "privacy": "protected",
              "default": "store",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "_storeUnsubscribe",
              "type": {
                "text": "Unsubscribe"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "getState",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "S"
                }
              },
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "_handleVisibilityChange",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "stateChanged",
              "privacy": "public",
              "parameters": [
                {
                  "name": "state",
                  "type": {
                    "text": "AppStateKeyed"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "_handleEvent",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "OREvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "_startOfflineFallbackTimer",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "force",
                  "default": "false"
                }
              ],
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "_completeOfflineFallbackTimer",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "aborted",
                  "default": "false"
                }
              ],
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "logout",
              "privacy": "public",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "setLanguage",
              "privacy": "public",
              "parameters": [
                {
                  "name": "lang",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "showLanguageModal",
              "privacy": "public",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "doAppConfigInit",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "doBasicLogin",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "PromiseLike<BasicLoginResult>"
                }
              },
              "parameters": [
                {
                  "name": "username",
                  "type": {
                    "text": "string | undefined"
                  }
                },
                {
                  "name": "password",
                  "type": {
                    "text": "string | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "updateWindowTitle",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "_getConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "RealmAppConfig"
                }
              },
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "DialogHostElement",
              "default": "this",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            }
          ],
          "superclass": {
            "name": "OrApp",
            "package": "@openremote/or-app"
          },
          "tagName": "or-mobile-app",
          "customElement": true,
          "attributes": [
            {
              "name": "appConfig",
              "type": {
                "text": "AppConfig<S> | undefined"
              },
              "description": "App configuration JSON object to set up the pages, header items, and languages.\r\nYou can use the RealmAppConfig field to adjust these options per realm.",
              "fieldName": "appConfig",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            },
            {
              "name": "managerConfig",
              "type": {
                "text": "ManagerConfig | undefined"
              },
              "description": "Manager config JSON object for adjusting deployment-targeted options such as managerUrl, realm, mapType, autoLogin etc.",
              "fieldName": "managerConfig",
              "inheritedFrom": {
                "name": "OrApp",
                "module": "../or-app/src/index.ts"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "doAnimation",
          "return": {
            "type": {
              "text": "Promise<void>"
            }
          },
          "parameters": [
            {
              "name": "elem",
              "type": {
                "text": "Element"
              }
            },
            {
              "name": "cssClass",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "timeout",
              "type": {
                "text": "number"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./loading-page\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./style\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./types\""
          }
        },
        {
          "kind": "js",
          "name": "OrMobileApp",
          "declaration": {
            "name": "OrMobileApp",
            "module": "../or-mobile-app/src/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-mobile-app",
          "declaration": {
            "name": "OrMobileApp",
            "module": "../or-mobile-app/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "doAnimation",
          "declaration": {
            "name": "doAnimation",
            "module": "../or-mobile-app/src/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-mobile-app/src/loading-page.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "loadingPageProvider",
          "parameters": [
            {
              "name": "store",
              "type": {
                "text": "Store<AppStateKeyed>"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "LoadingPage",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            },
            {
              "kind": "method",
              "name": "stateChanged",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "state",
                  "type": {
                    "text": "AppStateKeyed"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            },
            {
              "kind": "field",
              "name": "_store",
              "type": {
                "text": "Store<S, AnyAction>"
              },
              "privacy": "protected",
              "default": "store",
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            },
            {
              "kind": "field",
              "name": "_storeUnsubscribe",
              "type": {
                "text": "Unsubscribe"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            },
            {
              "kind": "field",
              "name": "onRefresh",
              "type": {
                "text": "() => void | undefined"
              },
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            },
            {
              "kind": "method",
              "name": "getState",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "S"
                }
              },
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            }
          ],
          "superclass": {
            "name": "Page",
            "package": "@openremote/or-app"
          },
          "tagName": "page-loading",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "loadingPageProvider",
          "declaration": {
            "name": "loadingPageProvider",
            "module": "../or-mobile-app/src/loading-page.ts"
          }
        },
        {
          "kind": "js",
          "name": "LoadingPage",
          "declaration": {
            "name": "LoadingPage",
            "module": "../or-mobile-app/src/loading-page.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "page-loading",
          "declaration": {
            "name": "LoadingPage",
            "module": "../or-mobile-app/src/loading-page.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-mobile-app/src/style.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "getAnimationStyles",
          "return": {
            "type": {
              "text": "CSSResult"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getAnimationStyles",
          "declaration": {
            "name": "getAnimationStyles",
            "module": "../or-mobile-app/src/style.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-mobile-app/src/types.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MobilePage",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            },
            {
              "kind": "method",
              "name": "getUpdateComplete",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<boolean>"
                }
              }
            },
            {
              "kind": "field",
              "name": "enterAnimation",
              "type": {
                "text": "MobilePageAnimation"
              },
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "exitAnimation",
              "type": {
                "text": "MobilePageAnimation"
              },
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_store",
              "type": {
                "text": "Store<S, AnyAction>"
              },
              "privacy": "protected",
              "default": "store",
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            },
            {
              "kind": "field",
              "name": "_storeUnsubscribe",
              "type": {
                "text": "Unsubscribe"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            },
            {
              "kind": "field",
              "name": "onRefresh",
              "type": {
                "text": "() => void | undefined"
              },
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            },
            {
              "kind": "method",
              "name": "getState",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "S"
                }
              },
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            },
            {
              "kind": "method",
              "name": "stateChanged",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "state",
                  "type": {
                    "text": "S"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Page",
                "module": "../or-app/src/types.ts"
              }
            }
          ],
          "superclass": {
            "name": "Page",
            "package": "@openremote/or-app"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MobilePage",
          "declaration": {
            "name": "MobilePage",
            "module": "../or-mobile-app/src/types.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-mwc-components/src/or-mwc-dialog.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcDialogOpenedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-mwc-dialog-opened\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-mwc-components/src/or-mwc-dialog.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcDialogClosedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-mwc-dialog-closed\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-mwc-components/src/or-mwc-dialog.ts"
          }
        },
        {
          "kind": "function",
          "name": "showErrorDialog",
          "parameters": [
            {
              "name": "errorMessage",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "hostElement",
              "optional": true,
              "type": {
                "text": "HTMLElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "showOkCancelDialog",
          "parameters": [
            {
              "name": "title",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "content",
              "type": {
                "text": "string | TemplateResult"
              }
            },
            {
              "name": "okText",
              "optional": true,
              "type": {
                "text": "string"
              }
            },
            {
              "name": "hostElement",
              "optional": true,
              "type": {
                "text": "HTMLElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "showOkDialog",
          "parameters": [
            {
              "name": "title",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "content",
              "type": {
                "text": "string | TemplateResult"
              }
            },
            {
              "name": "okText",
              "optional": true,
              "type": {
                "text": "string"
              }
            },
            {
              "name": "hostElement",
              "optional": true,
              "type": {
                "text": "HTMLElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "showDialog",
          "return": {
            "type": {
              "text": "T"
            }
          },
          "parameters": [
            {
              "name": "dialog",
              "type": {
                "text": "T"
              }
            },
            {
              "name": "hostElement",
              "optional": true,
              "type": {
                "text": "HTMLElement"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcDialog",
          "members": [
            {
              "kind": "field",
              "name": "DialogHostElement",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "public",
              "static": true,
              "description": "Can be set by apps to control where in the DOM dialogs are added"
            },
            {
              "kind": "field",
              "name": "heading",
              "type": {
                "text": "string | TemplateResult | undefined"
              },
              "privacy": "public",
              "attribute": "heading"
            },
            {
              "kind": "field",
              "name": "content",
              "type": {
                "text": "TemplateResult | (() => TemplateResult) | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "actions",
              "type": {
                "text": "DialogAction[] | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "dismissAction",
              "type": {
                "text": "DialogActionBase | null | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "avatar",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "attribute": "avatar"
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_mdcElem",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_mdcComponent",
              "type": {
                "text": "MDCDialog | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_popstateEventBind",
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "isOpen",
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "setOpen",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "OrMwcDialog"
                }
              },
              "parameters": [
                {
                  "name": "isOpen",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setHeading",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "OrMwcDialog"
                }
              },
              "parameters": [
                {
                  "name": "heading",
                  "type": {
                    "text": "TemplateResult | string | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setContent",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "OrMwcDialog"
                }
              },
              "parameters": [
                {
                  "name": "content",
                  "type": {
                    "text": "TemplateResult | (() => TemplateResult) | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setActions",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "OrMwcDialog"
                }
              },
              "parameters": [
                {
                  "name": "actions",
                  "type": {
                    "text": "DialogAction[] | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setDismissAction",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "OrMwcDialog"
                }
              },
              "parameters": [
                {
                  "name": "action",
                  "type": {
                    "text": "DialogActionBase | null | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setStyles",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "OrMwcDialog"
                }
              },
              "parameters": [
                {
                  "name": "styles",
                  "type": {
                    "text": "string | TemplateResult | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setAvatar",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "OrMwcDialog"
                }
              },
              "parameters": [
                {
                  "name": "avatar",
                  "type": {
                    "text": "boolean | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "open",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "close",
              "privacy": "public",
              "parameters": [
                {
                  "name": "action",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onDialogOpened",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_onDialogClosed",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "action",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onBrowserNavigate",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "PopStateEvent"
                  }
                }
              ],
              "description": "Function callback for when the browser window navigates to another place.\r\nWe attempt to close the dialog when this occurs."
            }
          ],
          "events": [
            {
              "type": {
                "text": "OrMwcDialogOpenedEvent"
              }
            },
            {
              "name": "action",
              "type": {
                "text": "OrMwcDialogClosedEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "heading",
              "type": {
                "text": "string | TemplateResult | undefined"
              },
              "fieldName": "heading"
            },
            {
              "name": "avatar",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "avatar"
            },
            {
              "name": "styles",
              "readonly": true,
              "fieldName": "styles"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-mwc-dialog",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrMwcDialogOpenedEvent",
          "declaration": {
            "name": "OrMwcDialogOpenedEvent",
            "module": "../or-mwc-components/src/or-mwc-dialog.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrMwcDialogClosedEvent",
          "declaration": {
            "name": "OrMwcDialogClosedEvent",
            "module": "../or-mwc-components/src/or-mwc-dialog.ts"
          }
        },
        {
          "kind": "js",
          "name": "showErrorDialog",
          "declaration": {
            "name": "showErrorDialog",
            "module": "../or-mwc-components/src/or-mwc-dialog.ts"
          }
        },
        {
          "kind": "js",
          "name": "showOkCancelDialog",
          "declaration": {
            "name": "showOkCancelDialog",
            "module": "../or-mwc-components/src/or-mwc-dialog.ts"
          }
        },
        {
          "kind": "js",
          "name": "showOkDialog",
          "declaration": {
            "name": "showOkDialog",
            "module": "../or-mwc-components/src/or-mwc-dialog.ts"
          }
        },
        {
          "kind": "js",
          "name": "showDialog",
          "declaration": {
            "name": "showDialog",
            "module": "../or-mwc-components/src/or-mwc-dialog.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrMwcDialog",
          "declaration": {
            "name": "OrMwcDialog",
            "module": "../or-mwc-components/src/or-mwc-dialog.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-mwc-dialog",
          "declaration": {
            "name": "OrMwcDialog",
            "module": "../or-mwc-components/src/or-mwc-dialog.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-mwc-components/src/or-mwc-drawer.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcDrawerChangedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-mwc-drawer-changed\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-mwc-components/src/or-mwc-drawer.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcDrawer",
          "members": [
            {
              "kind": "field",
              "name": "header",
              "type": {
                "text": "TemplateResult"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "dismissible",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "dismissible"
            },
            {
              "kind": "field",
              "name": "rightSided",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "rightSided"
            },
            {
              "kind": "field",
              "name": "transparent",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "transparent"
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "open"
            },
            {
              "kind": "field",
              "name": "appContent",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "topBar",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "drawerElement",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "drawer",
              "type": {
                "text": "MDCDrawer | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "toggle",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "dispatchChangedEvent",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "value",
              "type": {
                "text": "OrMwcDrawerChangedEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "dismissible",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "dismissible"
            },
            {
              "name": "rightSided",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "rightSided"
            },
            {
              "name": "transparent",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "transparent"
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "open"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-mwc-drawer",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrMwcDrawerChangedEvent",
          "declaration": {
            "name": "OrMwcDrawerChangedEvent",
            "module": "../or-mwc-components/src/or-mwc-drawer.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrMwcDrawer",
          "declaration": {
            "name": "OrMwcDrawer",
            "module": "../or-mwc-components/src/or-mwc-drawer.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-mwc-drawer",
          "declaration": {
            "name": "OrMwcDrawer",
            "module": "../or-mwc-components/src/or-mwc-drawer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-mwc-components/src/or-mwc-input.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrInputChangedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-mwc-input-changed\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-mwc-components/src/or-mwc-input.ts"
          }
        },
        {
          "kind": "function",
          "name": "getValueHolderInputTemplateProvider",
          "parameters": [
            {
              "name": "assetDescriptor"
            },
            {
              "name": "valueHolder"
            },
            {
              "name": "valueHolderDescriptor"
            },
            {
              "name": "valueDescriptor"
            },
            {
              "name": "valueChangeNotifier"
            },
            {
              "name": "options"
            }
          ]
        },
        {
          "kind": "class",
          "description": "Web Component for control elements using the Material Design specification. <br />\r\nIncludes input fields, buttons, switches, and more.",
          "name": "OrMwcInput",
          "cssProperties": [
            {
              "description": "Controls the color",
              "name": "--internal-or-mwc-input-color"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "attribute": "focused"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "any | undefined"
              },
              "privacy": "public",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "InputType | undefined"
              },
              "privacy": "public",
              "attribute": "type"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "String | undefined"
              },
              "privacy": "public",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "readonly"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "any | undefined"
              },
              "privacy": "public",
              "attribute": "max"
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "any | undefined"
              },
              "privacy": "public",
              "attribute": "min"
            },
            {
              "kind": "field",
              "name": "step",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "attribute": "step"
            },
            {
              "kind": "field",
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "checked"
            },
            {
              "kind": "field",
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "indeterminate"
            },
            {
              "kind": "field",
              "name": "maxLength",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "attribute": "maxLength"
            },
            {
              "kind": "field",
              "name": "minLength",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "attribute": "minLength"
            },
            {
              "kind": "field",
              "name": "rows",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "attribute": "rows"
            },
            {
              "kind": "field",
              "name": "cols",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "attribute": "cols"
            },
            {
              "kind": "field",
              "name": "multiple",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "multiple"
            },
            {
              "kind": "field",
              "name": "pattern",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "pattern"
            },
            {
              "kind": "field",
              "name": "placeHolder",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "placeHolder"
            },
            {
              "kind": "field",
              "name": "options",
              "type": {
                "text": "any[] | any | undefined"
              },
              "privacy": "public",
              "attribute": "options"
            },
            {
              "kind": "field",
              "name": "autoSelect",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "attribute": "autoSelect"
            },
            {
              "kind": "field",
              "name": "searchProvider",
              "type": {
                "text": "(search?: string) => Promise<[any, string][]> | undefined"
              },
              "privacy": "public",
              "attribute": "searchProvider"
            },
            {
              "kind": "field",
              "name": "searchLabel",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "\"search\"",
              "attribute": "searchLabel"
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "icon"
            },
            {
              "kind": "field",
              "name": "iconColor",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "iconColor"
            },
            {
              "kind": "field",
              "name": "iconOn",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "iconOn"
            },
            {
              "kind": "field",
              "name": "iconTrailing",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "iconTrailing"
            },
            {
              "kind": "field",
              "name": "compact",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "compact"
            },
            {
              "kind": "field",
              "name": "comfortable",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "comfortable"
            },
            {
              "kind": "field",
              "name": "raised",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "raised"
            },
            {
              "kind": "field",
              "name": "action",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "action"
            },
            {
              "kind": "field",
              "name": "unElevated",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "unElevated"
            },
            {
              "kind": "field",
              "name": "outlined",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "outlined"
            },
            {
              "kind": "field",
              "name": "rounded",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "rounded"
            },
            {
              "kind": "field",
              "name": "format",
              "type": {
                "text": "ValueFormat | undefined"
              },
              "privacy": "public",
              "attribute": "format"
            },
            {
              "kind": "field",
              "name": "disableSliderNumberInput",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "disableSliderNumberInput"
            },
            {
              "kind": "field",
              "name": "fullWidth",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "fullWidth"
            },
            {
              "kind": "field",
              "name": "helperText",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "helperText"
            },
            {
              "kind": "field",
              "name": "helperPersistent",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "helperPersistent"
            },
            {
              "kind": "field",
              "name": "validationMessage",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "validationMessage"
            },
            {
              "kind": "field",
              "name": "autoValidate",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "autoValidate"
            },
            {
              "kind": "field",
              "name": "charCounter",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "charCounter"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "continuous",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "continuous"
            },
            {
              "kind": "field",
              "name": "resizeVertical",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "resizeVertical"
            },
            {
              "kind": "field",
              "name": "nativeValue",
              "type": {
                "text": "any"
              },
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_mdcComponent",
              "type": {
                "text": "MDCComponent<any> | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_mdcComponent2",
              "type": {
                "text": "MDCComponent<any> | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_selectedIndex",
              "type": {
                "text": "number"
              },
              "privacy": "protected",
              "default": "-1"
            },
            {
              "kind": "field",
              "name": "_menuObserver",
              "type": {
                "text": "IntersectionObserver | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_tempValue",
              "type": {
                "text": "any"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "isUiValid",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "true"
            },
            {
              "kind": "field",
              "name": "searchableValue",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "errorMessage",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "focus",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "_getFormat",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "ValueFormat | undefined"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderOutlined",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "labelTemplate",
                  "type": {
                    "text": "TemplateResult | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setCustomValidity",
              "privacy": "public",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "checkValidity",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "reportValidity",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "onValueChange",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "elem",
                  "type": {
                    "text": "HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement | undefined"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "any | undefined"
                  }
                },
                {
                  "name": "enterPressed",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "valid",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "currentValue",
              "type": {
                "text": "any"
              },
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "resolveOptions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "[any, string][] | undefined"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "type": {
                    "text": "any[] | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getSelectedTextValue",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "[string, string][] | undefined"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "type": {
                "text": "OrInputChangedEvent"
              }
            },
            {
              "name": "newValue",
              "type": {
                "text": "OrInputChangedEvent"
              }
            },
            {
              "type": {
                "text": "OrInputChangedEvent"
              },
              "description": "Upon value change",
              "name": "or-mwc-input-changed"
            }
          ],
          "attributes": [
            {
              "name": "focused",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "focused"
            },
            {
              "name": "value",
              "type": {
                "text": "any | undefined"
              },
              "fieldName": "value"
            },
            {
              "name": "type",
              "type": {
                "text": "InputType | undefined"
              },
              "fieldName": "type"
            },
            {
              "name": "name",
              "type": {
                "text": "String | undefined"
              },
              "fieldName": "name"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "readonly"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required"
            },
            {
              "name": "max",
              "type": {
                "text": "any | undefined"
              },
              "fieldName": "max"
            },
            {
              "name": "min",
              "type": {
                "text": "any | undefined"
              },
              "fieldName": "min"
            },
            {
              "name": "step",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "step"
            },
            {
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "checked"
            },
            {
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "indeterminate"
            },
            {
              "name": "maxLength",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "maxLength"
            },
            {
              "name": "minLength",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "minLength"
            },
            {
              "name": "rows",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "rows"
            },
            {
              "name": "cols",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "cols"
            },
            {
              "name": "multiple",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "multiple"
            },
            {
              "name": "pattern",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "pattern"
            },
            {
              "name": "placeHolder",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "placeHolder"
            },
            {
              "name": "options",
              "type": {
                "text": "any[] | any | undefined"
              },
              "fieldName": "options"
            },
            {
              "name": "autoSelect",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "autoSelect"
            },
            {
              "name": "searchProvider",
              "type": {
                "text": "(search?: string) => Promise<[any, string][]> | undefined"
              },
              "fieldName": "searchProvider"
            },
            {
              "name": "searchLabel",
              "type": {
                "text": "string"
              },
              "default": "\"search\"",
              "fieldName": "searchLabel"
            },
            {
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "icon"
            },
            {
              "name": "iconColor",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "iconColor"
            },
            {
              "name": "iconOn",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "iconOn"
            },
            {
              "name": "iconTrailing",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "iconTrailing"
            },
            {
              "name": "compact",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "compact"
            },
            {
              "name": "comfortable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "comfortable"
            },
            {
              "name": "raised",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "raised"
            },
            {
              "name": "action",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "action"
            },
            {
              "name": "unElevated",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "unElevated"
            },
            {
              "name": "outlined",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "outlined"
            },
            {
              "name": "rounded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "rounded"
            },
            {
              "name": "format",
              "type": {
                "text": "ValueFormat | undefined"
              },
              "fieldName": "format"
            },
            {
              "name": "disableSliderNumberInput",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disableSliderNumberInput"
            },
            {
              "name": "fullWidth",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "fullWidth"
            },
            {
              "name": "helperText",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "helperText"
            },
            {
              "name": "helperPersistent",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "helperPersistent"
            },
            {
              "name": "validationMessage",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "validationMessage"
            },
            {
              "name": "autoValidate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "autoValidate"
            },
            {
              "name": "charCounter",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "charCounter"
            },
            {
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "label"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "continuous",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "continuous"
            },
            {
              "name": "resizeVertical",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "resizeVertical"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-mwc-input",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrInputChangedEvent",
          "declaration": {
            "name": "OrInputChangedEvent",
            "module": "../or-mwc-components/src/or-mwc-input.ts"
          }
        },
        {
          "kind": "js",
          "name": "getValueHolderInputTemplateProvider",
          "declaration": {
            "name": "getValueHolderInputTemplateProvider",
            "module": "../or-mwc-components/src/or-mwc-input.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrMwcInput",
          "declaration": {
            "name": "OrMwcInput",
            "module": "../or-mwc-components/src/or-mwc-input.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-mwc-input",
          "declaration": {
            "name": "OrMwcInput",
            "module": "../or-mwc-components/src/or-mwc-input.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-mwc-components/src/or-mwc-list.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcListChangedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-mwc-list-changed\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-mwc-components/src/or-mwc-list.ts"
          }
        },
        {
          "kind": "function",
          "name": "createListGroup",
          "parameters": [
            {
              "name": "lists",
              "type": {
                "text": "ListGroupItem[]"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getListTemplate",
          "return": {
            "type": {
              "text": "TemplateResult"
            }
          },
          "parameters": [
            {
              "name": "type",
              "type": {
                "text": "ListType"
              }
            },
            {
              "name": "content",
              "type": {
                "text": "TemplateResult"
              }
            },
            {
              "name": "isTwoLine",
              "optional": true,
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "role",
              "optional": true,
              "type": {
                "text": "string"
              }
            },
            {
              "name": "actionHandler",
              "optional": true,
              "type": {
                "text": "(ev: MDCListActionEvent) => void"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getItemTemplate",
          "return": {
            "type": {
              "text": "TemplateResult"
            }
          },
          "parameters": [
            {
              "name": "item",
              "type": {
                "text": "ListItem | null"
              }
            },
            {
              "name": "index",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "selectedValues",
              "type": {
                "text": "any[]"
              }
            },
            {
              "name": "type",
              "type": {
                "text": "ListType"
              }
            },
            {
              "name": "translate",
              "optional": true,
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "itemClickCallback",
              "optional": true,
              "type": {
                "text": "(e: MouseEvent, item: ListItem) => void"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcList",
          "members": [
            {
              "kind": "field",
              "name": "listItems",
              "type": {
                "text": "(ListItem | null)[] | undefined"
              },
              "privacy": "public",
              "attribute": "listItems"
            },
            {
              "kind": "field",
              "name": "values",
              "type": {
                "text": "string[] | string | undefined"
              },
              "privacy": "public",
              "attribute": "values"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "ListType"
              },
              "privacy": "public",
              "attribute": "type"
            },
            {
              "kind": "field",
              "name": "_wrapperElem",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_mdcElem",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_mdcComponent",
              "type": {
                "text": "MDCList | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "selectedItems",
              "type": {
                "text": "ListItem[]"
              },
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "setSelectedItems",
              "privacy": "public",
              "parameters": [
                {
                  "name": "items",
                  "type": {
                    "text": "ListItem | ListItem[] | string | string[] | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onSelected",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "MDCListActionEvent"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "type": {
                "text": "OrMwcListChangedEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "listItems",
              "type": {
                "text": "(ListItem | null)[] | undefined"
              },
              "fieldName": "listItems"
            },
            {
              "name": "values",
              "type": {
                "text": "string[] | string | undefined"
              },
              "fieldName": "values"
            },
            {
              "name": "type",
              "type": {
                "text": "ListType"
              },
              "fieldName": "type"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-mwc-list",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MDCListActionEvent",
          "declaration": {
            "name": "MDCListActionEvent",
            "module": "../or-mwc-components/src/or-mwc-list.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrMwcListChangedEvent",
          "declaration": {
            "name": "OrMwcListChangedEvent",
            "module": "../or-mwc-components/src/or-mwc-list.ts"
          }
        },
        {
          "kind": "js",
          "name": "createListGroup",
          "declaration": {
            "name": "createListGroup",
            "module": "../or-mwc-components/src/or-mwc-list.ts"
          }
        },
        {
          "kind": "js",
          "name": "getListTemplate",
          "declaration": {
            "name": "getListTemplate",
            "module": "../or-mwc-components/src/or-mwc-list.ts"
          }
        },
        {
          "kind": "js",
          "name": "getItemTemplate",
          "declaration": {
            "name": "getItemTemplate",
            "module": "../or-mwc-components/src/or-mwc-list.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrMwcList",
          "declaration": {
            "name": "OrMwcList",
            "module": "../or-mwc-components/src/or-mwc-list.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-mwc-list",
          "declaration": {
            "name": "OrMwcList",
            "module": "../or-mwc-components/src/or-mwc-list.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-mwc-components/src/or-mwc-menu.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcMenuChangedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-mwc-menu-changed\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-mwc-components/src/or-mwc-menu.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcMenuClosedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-mwc-menu-closed\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-mwc-components/src/or-mwc-menu.ts"
          }
        },
        {
          "kind": "function",
          "name": "getContentWithMenuTemplate",
          "return": {
            "type": {
              "text": "TemplateResult"
            }
          },
          "parameters": [
            {
              "name": "content",
              "type": {
                "text": "TemplateResult"
              }
            },
            {
              "name": "menuItems",
              "type": {
                "text": "(ListItem | ListItem[] | null)[]"
              }
            },
            {
              "name": "selectedValues",
              "type": {
                "text": "string[] | string | undefined"
              }
            },
            {
              "name": "valueChangedCallback",
              "type": {
                "text": "(values: string[] | string) => void"
              }
            },
            {
              "name": "closedCallback",
              "optional": true,
              "type": {
                "text": "() => void"
              }
            },
            {
              "name": "multiSelect",
              "default": "false"
            },
            {
              "name": "translateValues",
              "default": "true"
            },
            {
              "name": "midHeight",
              "default": "false"
            },
            {
              "name": "fullWidth",
              "default": "false"
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcMenu",
          "members": [
            {
              "kind": "field",
              "name": "menuItems",
              "type": {
                "text": "(ListItem | ListItem[] | null)[] | undefined"
              },
              "privacy": "public",
              "attribute": "menuItems"
            },
            {
              "kind": "field",
              "name": "values",
              "type": {
                "text": "any[] | any | undefined"
              },
              "privacy": "public",
              "attribute": "values"
            },
            {
              "kind": "field",
              "name": "multiSelect",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "attribute": "multiSelect"
            },
            {
              "kind": "field",
              "name": "visible",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "attribute": "visible"
            },
            {
              "kind": "field",
              "name": "translateValues",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "attribute": "translateValues"
            },
            {
              "kind": "field",
              "name": "midHeight",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "fullWidth",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "_wrapperElem",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_mdcElem",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_mdcComponent",
              "type": {
                "text": "MDCMenu | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "open",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "getItemsTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "parameters": [
                {
                  "name": "items",
                  "type": {
                    "text": "(ListItem | ListItem[] | null)[]"
                  }
                },
                {
                  "name": "translate",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onMenuClosed",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_itemClicked",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent"
                  }
                },
                {
                  "name": "item",
                  "type": {
                    "text": "ListItem"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "type": {
                "text": "OrMwcMenuClosedEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "menuItems",
              "type": {
                "text": "(ListItem | ListItem[] | null)[] | undefined"
              },
              "fieldName": "menuItems"
            },
            {
              "name": "values",
              "type": {
                "text": "any[] | any | undefined"
              },
              "fieldName": "values"
            },
            {
              "name": "multiSelect",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "multiSelect"
            },
            {
              "name": "visible",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "visible"
            },
            {
              "name": "translateValues",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "translateValues"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-mwc-menu",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrMwcMenuChangedEvent",
          "declaration": {
            "name": "OrMwcMenuChangedEvent",
            "module": "../or-mwc-components/src/or-mwc-menu.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrMwcMenuClosedEvent",
          "declaration": {
            "name": "OrMwcMenuClosedEvent",
            "module": "../or-mwc-components/src/or-mwc-menu.ts"
          }
        },
        {
          "kind": "js",
          "name": "getContentWithMenuTemplate",
          "declaration": {
            "name": "getContentWithMenuTemplate",
            "module": "../or-mwc-components/src/or-mwc-menu.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrMwcMenu",
          "declaration": {
            "name": "OrMwcMenu",
            "module": "../or-mwc-components/src/or-mwc-menu.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-mwc-menu",
          "declaration": {
            "name": "OrMwcMenu",
            "module": "../or-mwc-components/src/or-mwc-menu.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-mwc-components/src/or-mwc-snackbar.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcSnackbarChangedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-mwc-snackbar-changed\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-mwc-components/src/or-mwc-snackbar.ts"
          }
        },
        {
          "kind": "function",
          "name": "showSnackbar",
          "return": {
            "type": {
              "text": "OrMwcSnackbar"
            }
          },
          "parameters": [
            {
              "name": "hostElement",
              "type": {
                "text": "HTMLElement | undefined"
              }
            },
            {
              "name": "text",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "buttonText",
              "optional": true,
              "type": {
                "text": "string"
              }
            },
            {
              "name": "buttonAction",
              "optional": true,
              "type": {
                "text": "() => void"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcSnackbar",
          "members": [
            {
              "kind": "field",
              "name": "DialogHostElement",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "public",
              "static": true,
              "description": "Can be set by apps to control where in the DOM snackbars are added"
            },
            {
              "kind": "field",
              "name": "text",
              "type": {
                "text": "string"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "buttonText",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "buttonText"
            },
            {
              "kind": "field",
              "name": "buttonAction",
              "type": {
                "text": "() => void | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "timeout",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "attribute": "timeout"
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "_open"
            },
            {
              "kind": "field",
              "name": "_mdcElem",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_mdcComponent",
              "type": {
                "text": "MDCSnackbar | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "isOpen",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "open",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "close",
              "privacy": "public",
              "parameters": [
                {
                  "name": "action",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onClose",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "reason",
                  "type": {
                    "text": "string | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onOpen",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "dispatchChangedEvent",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "detail",
                  "type": {
                    "text": "OrMwcSnackbarChangedEventDetail"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "detail",
              "type": {
                "text": "OrMwcSnackbarChangedEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "buttonText",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "buttonText"
            },
            {
              "name": "timeout",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "timeout"
            },
            {
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "_open"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-mwc-snackbar",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrMwcSnackbarChangedEvent",
          "declaration": {
            "name": "OrMwcSnackbarChangedEvent",
            "module": "../or-mwc-components/src/or-mwc-snackbar.ts"
          }
        },
        {
          "kind": "js",
          "name": "showSnackbar",
          "declaration": {
            "name": "showSnackbar",
            "module": "../or-mwc-components/src/or-mwc-snackbar.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrMwcSnackbar",
          "declaration": {
            "name": "OrMwcSnackbar",
            "module": "../or-mwc-components/src/or-mwc-snackbar.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-mwc-snackbar",
          "declaration": {
            "name": "OrMwcSnackbar",
            "module": "../or-mwc-components/src/or-mwc-snackbar.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-mwc-components/src/or-mwc-table.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcTableRowClickEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-mwc-table-row-click\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-mwc-components/src/or-mwc-table.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcTableRowSelectEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-mwc-table-row-select\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-mwc-components/src/or-mwc-table.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcTable",
          "members": [
            {
              "kind": "field",
              "name": "columns",
              "type": {
                "text": "TableColumn[] | string[] | undefined"
              },
              "privacy": "public",
              "attribute": "columns"
            },
            {
              "kind": "field",
              "name": "columnsTemplate",
              "type": {
                "text": "TemplateResult | undefined"
              },
              "privacy": "protected",
              "attribute": "columnsTemplate"
            },
            {
              "kind": "field",
              "name": "rows",
              "type": {
                "text": "TableRow[] | string[][] | undefined"
              },
              "privacy": "public",
              "attribute": "rows"
            },
            {
              "kind": "field",
              "name": "rowsTemplate",
              "type": {
                "text": "TemplateResult | undefined"
              },
              "privacy": "protected",
              "attribute": "rowsTemplate"
            },
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "TableConfig"
              },
              "privacy": "protected",
              "default": "{ columnFilter: [], stickyFirstColumn: true, fullHeight: false, pagination: { enable: false } }",
              "attribute": "config"
            },
            {
              "kind": "field",
              "name": "paginationIndex",
              "type": {
                "text": "number"
              },
              "privacy": "protected",
              "default": "0",
              "attribute": "paginationIndex"
            },
            {
              "kind": "field",
              "name": "paginationSize",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "10",
              "attribute": "paginationSize"
            },
            {
              "kind": "field",
              "name": "_dataTable",
              "type": {
                "text": "MDCDataTable | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "sortDirection",
              "type": {
                "text": "'ASC' | 'DESC'"
              },
              "privacy": "protected",
              "default": "'ASC'",
              "attribute": "sortDirection"
            },
            {
              "kind": "field",
              "name": "sortIndex",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "protected",
              "default": "-1",
              "attribute": "sortIndex"
            },
            {
              "kind": "field",
              "name": "selectedRows",
              "type": {
                "text": "TableRow[] | string[][] | any[] | undefined"
              },
              "privacy": "public",
              "default": "[]",
              "attribute": "selectedRows"
            },
            {
              "kind": "method",
              "name": "getTableContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | string"
                }
              },
              "parameters": [
                {
                  "name": "content",
                  "type": {
                    "text": "TableContent"
                  }
                }
              ],
              "description": "Function that is responsible for formatting the table content.\r\nFor example; dates should be formatted differently than strings, numbers and HTML templates."
            },
            {
              "kind": "method",
              "name": "onRowClick",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "MouseEvent"
                  }
                },
                {
                  "name": "item",
                  "type": {
                    "text": "TableRow | string[]"
                  }
                }
              ],
              "description": "\"When user clicks on a row\", it dispatches an OrMwcTableRowClickEvent to the parent component / listeners."
            },
            {
              "kind": "method",
              "name": "onCheckChanged",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                },
                {
                  "name": "checked",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "type",
                  "type": {
                    "text": "\"all\" | \"single\""
                  }
                },
                {
                  "name": "item",
                  "optional": true,
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "description": "\"When user clicks on a checkbox\" when multiselect is enabled,\r\nit dispatches an OrMwcTableRowSelectEvent to the parent component / listeners."
            },
            {
              "kind": "method",
              "name": "onColumnSort",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "MouseEvent"
                  }
                },
                {
                  "name": "index",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "sortDirection",
                  "type": {
                    "text": "'ASC' | 'DESC'"
                  }
                }
              ],
              "description": "Event handling function for when users try to sort the rows within a column."
            },
            {
              "kind": "method",
              "name": "sortPrimitiveRows",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "rowA",
                  "type": {
                    "text": "string[] | number[]"
                  }
                },
                {
                  "name": "rowB",
                  "type": {
                    "text": "string[] | number[]"
                  }
                },
                {
                  "name": "cIndex",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "sortDirection",
                  "type": {
                    "text": "'ASC' | 'DESC'"
                  }
                }
              ],
              "description": "Sorts either numbers incrementally or strings alphabetically depending on the sorting direction."
            },
            {
              "kind": "method",
              "name": "sortObjectRows",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "rowA",
                  "type": {
                    "text": "TableRow"
                  }
                },
                {
                  "name": "rowB",
                  "type": {
                    "text": "TableRow"
                  }
                },
                {
                  "name": "cIndex",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "sortDirection",
                  "type": {
                    "text": "'ASC' | 'DESC'"
                  }
                }
              ],
              "description": "Function that handles several sorts of table content; from dates to HTML templates."
            },
            {
              "kind": "method",
              "name": "sortDateRows",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "dateA",
                  "type": {
                    "text": "Date"
                  }
                },
                {
                  "name": "dateB",
                  "type": {
                    "text": "Date"
                  }
                },
                {
                  "name": "cIndex",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "sortDirection",
                  "type": {
                    "text": "'ASC' | 'DESC'"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "sortTemplateRows",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "cellA",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "cellB",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "cIndex",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "sortDirection",
                  "type": {
                    "text": "'ASC' | 'DESC'"
                  }
                }
              ],
              "description": "Uses the TemplateResult content to identify and analyze the content.\r\nSee the documentation here; https://lit.dev/docs/v2/api/templates/#TemplateResult\r\nSometimes it cannot analyze the HTML; if so, it will retain the same order."
            },
            {
              "kind": "method",
              "name": "getSortHeader",
              "return": {
                "type": {
                  "text": "Promise<TemplateResult>"
                }
              },
              "parameters": [
                {
                  "name": "index",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "title",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "sortDirection",
                  "type": {
                    "text": "'ASC' | 'DESC'"
                  }
                },
                {
                  "name": "arrowOnLeft",
                  "default": "false"
                }
              ]
            },
            {
              "kind": "method",
              "name": "getPaginationControls",
              "return": {
                "type": {
                  "text": "Promise<TemplateResult>"
                }
              }
            },
            {
              "kind": "method",
              "name": "getRowCount",
              "return": {
                "type": {
                  "text": "Promise<number>"
                }
              },
              "parameters": [
                {
                  "name": "wait",
                  "default": "true",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "tableElem",
                  "optional": true,
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getTableElem",
              "return": {
                "type": {
                  "text": "Promise<HTMLElement | undefined>"
                }
              },
              "parameters": [
                {
                  "name": "wait",
                  "default": "false",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getColumnWidth",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "string | undefined"
                }
              },
              "parameters": [
                {
                  "name": "index",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "columns",
                  "optional": true,
                  "type": {
                    "text": "string[] | TableColumn[]"
                  }
                },
                {
                  "name": "tableWidthPx",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getMaxColumnWidth",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "string | undefined"
                }
              },
              "parameters": [
                {
                  "name": "index",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "columns",
                  "optional": true,
                  "type": {
                    "text": "string[] | TableColumn[]"
                  }
                },
                {
                  "name": "tableWidthPx",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "type": {
                "text": "OrMwcTableRowClickEvent"
              }
            },
            {
              "name": "index",
              "type": {
                "text": "OrMwcTableRowSelectEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "columns",
              "type": {
                "text": "TableColumn[] | string[] | undefined"
              },
              "fieldName": "columns"
            },
            {
              "name": "columnsTemplate",
              "type": {
                "text": "TemplateResult | undefined"
              },
              "fieldName": "columnsTemplate"
            },
            {
              "name": "rows",
              "type": {
                "text": "TableRow[] | string[][] | undefined"
              },
              "fieldName": "rows"
            },
            {
              "name": "rowsTemplate",
              "type": {
                "text": "TemplateResult | undefined"
              },
              "fieldName": "rowsTemplate"
            },
            {
              "name": "config",
              "type": {
                "text": "TableConfig"
              },
              "default": "{ columnFilter: [], stickyFirstColumn: true, fullHeight: false, pagination: { enable: false } }",
              "fieldName": "config"
            },
            {
              "name": "paginationIndex",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "paginationIndex"
            },
            {
              "name": "paginationSize",
              "type": {
                "text": "number"
              },
              "default": "10",
              "fieldName": "paginationSize"
            },
            {
              "name": "sortDirection",
              "type": {
                "text": "'ASC' | 'DESC'"
              },
              "default": "'ASC'",
              "fieldName": "sortDirection"
            },
            {
              "name": "sortIndex",
              "type": {
                "text": "number | undefined"
              },
              "default": "-1",
              "fieldName": "sortIndex"
            },
            {
              "name": "selectedRows",
              "type": {
                "text": "TableRow[] | string[][] | any[] | undefined"
              },
              "default": "[]",
              "fieldName": "selectedRows"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-mwc-table",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrMwcTableRowClickEvent",
          "declaration": {
            "name": "OrMwcTableRowClickEvent",
            "module": "../or-mwc-components/src/or-mwc-table.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrMwcTableRowSelectEvent",
          "declaration": {
            "name": "OrMwcTableRowSelectEvent",
            "module": "../or-mwc-components/src/or-mwc-table.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrMwcTable",
          "declaration": {
            "name": "OrMwcTable",
            "module": "../or-mwc-components/src/or-mwc-table.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-mwc-table",
          "declaration": {
            "name": "OrMwcTable",
            "module": "../or-mwc-components/src/or-mwc-table.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-mwc-components/src/or-mwc-tabs.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrMwcTabs",
          "members": [
            {
              "kind": "field",
              "name": "index",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "protected",
              "attribute": "index"
            },
            {
              "kind": "field",
              "name": "items",
              "type": {
                "text": "OrMwcTabItem[] | undefined"
              },
              "privacy": "protected",
              "attribute": "items"
            },
            {
              "kind": "field",
              "name": "iconPosition",
              "type": {
                "text": "\"left\" | \"top\" | undefined"
              },
              "privacy": "protected",
              "attribute": "iconPosition"
            },
            {
              "kind": "field",
              "name": "noScroll",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "protected",
              "attribute": "noScroll"
            },
            {
              "kind": "field",
              "name": "bgColor",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected",
              "attribute": "bgColor"
            },
            {
              "kind": "field",
              "name": "color",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected",
              "attribute": "color"
            },
            {
              "kind": "field",
              "name": "mdcTabBar",
              "type": {
                "text": "MDCTabBar | undefined"
              },
              "privacy": "private"
            }
          ],
          "events": [
            {
              "name": "activated",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "index",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "index"
            },
            {
              "name": "items",
              "type": {
                "text": "OrMwcTabItem[] | undefined"
              },
              "fieldName": "items"
            },
            {
              "name": "iconPosition",
              "type": {
                "text": "\"left\" | \"top\" | undefined"
              },
              "fieldName": "iconPosition"
            },
            {
              "name": "noScroll",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "noScroll"
            },
            {
              "name": "bgColor",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "bgColor"
            },
            {
              "name": "color",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "color"
            },
            {
              "name": "styles",
              "readonly": true,
              "fieldName": "styles"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-mwc-tabs",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrMwcTabs",
          "declaration": {
            "name": "OrMwcTabs",
            "module": "../or-mwc-components/src/or-mwc-tabs.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-mwc-tabs",
          "declaration": {
            "name": "OrMwcTabs",
            "module": "../or-mwc-components/src/or-mwc-tabs.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-mwc-components/src/style.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "progressCircular",
          "default": "css` /* https://codepen.io/finnhvman/pen/bmNdNr */ .pure-material-progress-circular { -webkit-appearance: none; -moz-appearance: none; appearance: none; box-sizing: border-box; border: none; border-radius: 50%; padding: 0.25em; width: 3em; height: 3em; color: var(--or-app-color4, ${unsafeCSS(DefaultColor4)}); background-color: transparent; font-size: 16px; overflow: hidden; } .pure-material-progress-circular::-webkit-progress-bar { background-color: transparent; } /* Indeterminate */ .pure-material-progress-circular:indeterminate { -webkit-mask-image: linear-gradient(transparent 50%, black 50%), linear-gradient(to right, transparent 50%, black 50%); mask-image: linear-gradient(transparent 50%, black 50%), linear-gradient(to right, transparent 50%, black 50%); animation: pure-material-progress-circular 6s infinite cubic-bezier(0.3, 0.6, 1, 1); } :-ms-lang(x), .pure-material-progress-circular:indeterminate { animation: none; } .pure-material-progress-circular:indeterminate::before, .pure-material-progress-circular:indeterminate::-webkit-progress-value { content: \"\"; display: block; box-sizing: border-box; margin-bottom: 0.25em; border: solid 0.25em transparent; border-top-color: currentColor; border-radius: 50%; width: 100% !important; height: 100%; background-color: transparent; animation: pure-material-progress-circular-pseudo 0.75s infinite linear alternate; } .pure-material-progress-circular:indeterminate::-moz-progress-bar { box-sizing: border-box; border: solid 0.25em transparent; border-top-color: currentColor; border-radius: 50%; width: 100%; height: 100%; background-color: transparent; animation: pure-material-progress-circular-pseudo 0.75s infinite linear alternate; } .pure-material-progress-circular:indeterminate::-ms-fill { animation-name: -ms-ring; } @keyframes pure-material-progress-circular { 0% { transform: rotate(0deg); } 12.5% { transform: rotate(180deg); animation-timing-function: linear; } 25% { transform: rotate(630deg); } 37.5% { transform: rotate(810deg); animation-timing-function: linear; } 50% { transform: rotate(1260deg); } 62.5% { transform: rotate(1440deg); animation-timing-function: linear; } 75% { transform: rotate(1890deg); } 87.5% { transform: rotate(2070deg); animation-timing-function: linear; } 100% { transform: rotate(2520deg); } } @keyframes pure-material-progress-circular-pseudo { 0% { transform: rotate(-30deg); } 29.4% { border-left-color: transparent; } 29.41% { border-left-color: currentColor; } 64.7% { border-bottom-color: transparent; } 64.71% { border-bottom-color: currentColor; } 100% { border-left-color: currentColor; border-bottom-color: currentColor; transform: rotate(225deg); } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "progressCircular",
          "declaration": {
            "name": "progressCircular",
            "module": "../or-mwc-components/src/style.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-rules/src/index.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "RuleViewInfoMap",
          "type": {
            "text": "{[key in RulesetLang]: RuleViewInfo}"
          },
          "default": "{ JSON: { viewTemplateProvider: (ruleset, config, readonly) => html`<or-rule-json-viewer id=\"rule-view\" .ruleset=\"${ruleset}\" .config=\"${config}\" .readonly=\"${readonly}\"></or-rule-json-viewer>`, }, FLOW: { viewTemplateProvider: (ruleset, config, readonly) => html`<flow-editor id=\"rule-view\" .ruleset=\"${ruleset}\" .readonly=\"${readonly}\"></flow-editor>` }, GROOVY: { viewTemplateProvider: (ruleset, config, readonly) => html` <or-rule-text-viewer id=\"rule-view\" .ruleset=\"${ruleset}\" .config=\"${config}\" .readonly=\"${readonly}\"></or-rule-text-viewer> `, viewRulesetTemplate: \"package demo.rules\\n\" + \"\\n\" + \"import org.openremote.manager.rules.RulesBuilder\\n\" + \"import org.openremote.model.notification.*\\n\" + \"import org.openremote.model.attribute.AttributeInfo\\n\" + \"import org.openremote.model.asset.Asset\\n\" + \"import org.openremote.model.asset.impl.*\\n\" + \"import org.openremote.model.query.*\\n\" + \"import org.openremote.model.query.filter.*\\n\" + \"import org.openremote.model.rules.Assets\\n\" + \"import org.openremote.model.rules.Notifications\\n\" + \"import org.openremote.model.rules.Users\\n\" + \"\\n\" + \"import java.util.logging.Logger\\n\" + \"import java.util.stream.Collectors\\n\" + \"\\n\" + \"Logger LOG = binding.LOG\\n\" + \"RulesBuilder rules = binding.rules\\n\" + \"Notifications notifications = binding.notifications\\n\" + \"Users users = binding.users\\n\" + \"Assets assets = binding.assets\\n\" + \"\\n\" + \"/*\\n\" + \"* A groovy rule is made up of a when closure (LHS) which must return a boolean indicating whether the then closure (RHS)\\n\" + \"* should be executed. The rule engine will periodically evaluate the when closure and if it evaluates to true then the\\n\" + \"* rule then closure will execute.\\n\" + \"*\\n\" + \"* NOTE: DO NOT MODIFY THE FACTS IN THE WHEN CLOSURE THIS SHOULD BE DONE IN THE THEN CLOSURE\\n\" + \"*\\n\" + \"* To avoid an infinite rule loop the when closure should not continually return true for subsequent executions\\n\" + \"* so either the then closure should perform an action that prevents the when closure from matching on subsequent\\n\" + \"* evaluations, or custom facts should be used, some ideas:\\n\" + \"*\\n\" + \"* - Change the value of an attribute being matched in the when closure (which will prevent it matching on subsequent evaluations)\\n\" + \"* - Insert a custom fact on first match and test this fact in the when closure to determine when the rule should match again (for\\n\" + \"* example if a rule should match whenever the asset state changes the asset state timestamp can be used)\\n\" + \"*/\\n\" + \"\\n\" + \"rules.add()\\n\" + \" .name(\\\"Example rule\\\")\\n\" + \" .when({\\n\" + \" facts ->\\n\" + \"\\n\" + \" // Find first matching asset state using an asset query\\n\" + \"\\n\" + \" facts.matchFirstAssetState(\\n\" + \"\\n\" + \" // Find asset state by asset type and attribute name\\n\" + \" new AssetQuery().types(ThingAsset).attributeNames(\\\"someAttribute\\\")\\n\" + \"\\n\" + \" // Find asset state by asset ID and attribute name\\n\" + \" //new AssetQuery().ids(\\\"7CaBoyiDhtdf2kn1Xso1w5\\\").attributeNames(\\\"someAttribute\\\")\\n\" + \"\\n\" + \" // Find asset state by asset type, attribute name and value string predicate\\n\" + \" //new AssetQuery().types(ThingAsset).attributes(\\n\" + \" // new AttributePredicate()\\n\" + \" // .name(\\\"someAttribute\\\")\\n\" + \" // .value(new StringPredicate()\\n\" + \" // .value(\\\"someValue\\\")\\n\" + \" // .match(AssetQuery.Match.EXACT)\\n\" + \" // .caseSensitive(true)))\\n\" + \"\\n\" + \" // Find asset state by asset type and location attribute predicate\\n\" + \" //new AssetQuery().types(ThingAsset).attributes(\\n\" + \" // new AttributePredicate()\\n\" + \" // .name(Asset.LOCATION)\\n\" + \" // .value(new RadialGeofencePredicate()\\n\" + \" // .radius(100)\\n\" + \" // .lat(50.0)\\n\" + \" // .lng(0.0)))\\n\" + \"\\n\" + \" ).map { assetState ->\\n\" + \"\\n\" + \" // Use logging to help with debugging if needed\" + \" //LOG.info(\\\"ATTRIBUTE FOUND\\\")\\n\" + \"\\n\" + \" // Check if this rule really should fire this time\\n\" + \" Optional<Long> lastFireTimestamp = facts.getOptional(\\\"someAttribute\\\")\\n\" + \" if (lastFireTimestamp.isPresent() && assetState.getTimestamp() <= lastFireTimestamp.get()) {\\n\" + \" return false\\n\" + \" }\\n\" + \"\\n\" + \" // OK to fire if we reach here\\n\" + \"\\n\" + \" // Compute and bind any facts required for the then closure\\n\" + \" facts.bind(\\\"assetState\\\", assetState)\\n\" + \" true\\n\" + \" }.orElseGet {\\n\" + \" // Asset state didn't match so clear out any custom facts to allow the rule to fire next time the when closure matches\\n\" + \" facts.remove(\\\"someAttribute\\\")\\n\" + \" false\\n\" + \" }\\n\" + \"\\n\" + \"})\\n\" + \" .then({\\n\" + \" facts ->\\n\" + \"\\n\" + \" // Extract any binded facts\\n\" + \" AttributeInfo assetState = facts.bound(\\\"assetState\\\")\\n\" + \"\\n\" + \" // Insert the custom fact to prevent rule loop\\n\" + \" facts.put(\\\"someAttribute\\\", assetState.getTimestamp())\\n\" + \"\\n\" + \" // Write to attributes\\n\" + \" def otherAttributeValue = null\\n\" + \" if (assetState.getValue().orElse{null} == \\\"Value 1\\\") {\\n\" + \" otherAttributeValue = \\\"Converted Value 1\\\"\\n\" + \" } else if (assetState.getValue().orElse{null} == \\\"Value 2\\\") {\\n\" + \" otherAttributeValue = \\\"Converted Value 2\\\"\\n\" + \" } else {\\n\" + \" otherAttributeValue = \\\"Unknown\\\"\\n\" + \" }\\n\" + \" assets.dispatch(assetState.id, \\\"otherAttribute\\\", otherAttributeValue)\\n\" + \"\\n\" + \" // Generate notifications (useful for rules that check if an attribute is out of range)\\n\" + \" //notifications.send(new Notification()\\n\" + \" // .setName(\\\"Attribute alert\\\")\\n\" + \" // .setMessage(new EmailNotificationMessage()\\n\" + \" // .setTo(\\\"no-reply@openremote.io\\\")\\n\" + \" // .setSubject(\\\"Attribute out of range: Attribute=${assetState.name} Asset ID=${assetState.id}\\\")\\n\" + \" // .setText(\\\"Some text body\\\")\\n\" + \" // .setHtml(\\\"<p>Or some HTML body</p>\\\")\\n\" + \" // )\\n\" + \" //)\\n\" + \"})\" }, JAVASCRIPT: { viewTemplateProvider: (ruleset, config, readonly) => html` <or-rule-text-viewer id=\"rule-view\" .ruleset=\"${ruleset}\" .config=\"${config}\" .readonly=\"${readonly}\"></or-rule-text-viewer> `, viewRulesetTemplate: \"rules = [ // An array of rules, add more objects to add more rules\\n\" + \" {\\n\" + \" name: \\\"Set bar to foo on someAttribute\\\",\\n\" + \" description: \\\"An example rule that sets 'bar' on someAttribute when it is 'foo'\\\",\\n\" + \" when: function(facts) {\\n\" + \" return facts.matchAssetState(\\n\" + \" new AssetQuery().types(AssetType.THING).attributeValue(\\\"someAttribute\\\", \\\"foo\\\")\\n\" + \" ).map(function(thing) {\\n\" + \" facts.bind(\\\"assetId\\\", thing.id);\\n\" + \" return true;\\n\" + \" }).orElse(false);\\n\" + \" },\\n\" + \" then: function(facts) {\\n\" + \" facts.updateAssetState(\\n\" + \" facts.bound(\\\"assetId\\\"), \\\"someAttribute\\\", \\\"bar\\\"\\n\" + \" );\\n\" + \" }\\n\" + \" }\\n\" + \"]\" } }"
        },
        {
          "kind": "function",
          "name": "getAssetTypeFromQuery",
          "return": {
            "type": {
              "text": "string | undefined"
            }
          },
          "parameters": [
            {
              "name": "query",
              "optional": true,
              "type": {
                "text": "AssetQuery"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getAssetIdsFromQuery",
          "parameters": [
            {
              "name": "query",
              "optional": true,
              "type": {
                "text": "AssetQuery"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getAssetTypes"
        },
        {
          "kind": "function",
          "name": "getAssetInfos",
          "return": {
            "type": {
              "text": "Promise<AssetTypeInfo[]>"
            }
          },
          "parameters": [
            {
              "name": "config",
              "type": {
                "text": "RulesConfig | undefined"
              }
            },
            {
              "name": "useActionConfig",
              "type": {
                "text": "boolean"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getAssetsByType",
          "return": {
            "type": {
              "text": "Promise<{ assets?: Asset[], loadedAssets?: Map<string, Asset[]>}>"
            }
          },
          "parameters": [
            {
              "name": "type",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "realm",
              "optional": true,
              "type": {
                "text": "string"
              }
            },
            {
              "name": "loadedAssets",
              "optional": true,
              "type": {
                "text": "Map<string, Asset[]>"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrRulesRuleChangedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-rules-rule-changed\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-rules/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrRulesRuleUnsupportedEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-rules-rule-unsupported\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-rules/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrRulesRequestSelectionEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-rules-request-selection\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-rules/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrRulesSelectionEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-rules-selection\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-rules/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrRulesRequestAddEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-rules-request-add\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-rules/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrRulesAddEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-rules-add\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-rules/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrRulesRequestDeleteEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-rules-request-delete\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-rules/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrRulesRequestSaveEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-rules-request-save\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-rules/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrRulesSaveEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-rules-save\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-rules/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrRulesDeleteEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-rules-delete\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-rules/src/index.ts"
          }
        },
        {
          "kind": "variable",
          "name": "style",
          "default": "css` :host { display: flex; height: 100%; width: 100%; --internal-or-rules-background-color: var(--or-rules-background-color, var(--or-app-color2, ${unsafeCSS(DefaultColor2)})); --internal-or-rules-text-color: var(--or-rules-text-color, inherit); --internal-or-rules-button-color: var(--or-rules-button-color, var(--or-app-color4, ${unsafeCSS(DefaultColor4)})); --internal-or-rules-invalid-color: var(--or-rules-invalid-color, var(--or-app-color6, ${unsafeCSS(DefaultColor6)})); --internal-or-rules-panel-color: var(--or-rules-panel-color, var(--or-app-color1, ${unsafeCSS(DefaultColor1)})); --internal-or-rules-line-color: var(--or-rules-line-color, var(--or-app-color5, ${unsafeCSS(DefaultColor5)})); --internal-or-rules-list-selected-color: var(--or-rules-list-selected-color, var(--or-app-color2, ${unsafeCSS(DefaultColor2)})); --internal-or-rules-list-text-color: var(--or-rules-list-text-color, var(--or-app-color3, ${unsafeCSS(DefaultColor3)})); --internal-or-rules-list-text-size: var(--or-rules-list-text-size, 15px); --internal-or-rules-list-header-height: var(--or-rules-list-header-height, 48px); --internal-or-rules-list-icon-color-error: var(--or-rules-list-icon-color-error, var(--or-app-color6, ${unsafeCSS(DefaultColor6)})); --internal-or-rules-list-icon-color-ok: var(--or-rules-list-icon-color-ok, var(--or-app-color5, ${unsafeCSS(DefaultColor5)})); --internal-or-rules-list-button-size: var(--or-rules-list-button-size, 24px); --internal-or-rules-header-background-color: var(--or-rules-header-background-color, var(--or-app-color3, ${unsafeCSS(DefaultColor3)})); --internal-or-rules-header-height: var(--or-rules-header-height, unset); --or-panel-background-color: var(--internal-or-rules-panel-color); } or-rule-list { min-width: 300px; width: 300px; z-index: 2; display: flex; flex-direction: column; background-color: var(--internal-or-rules-panel-color); color: var(--internal-or-rules-list-text-color); box-shadow: ${unsafeCSS(DefaultBoxShadow)}; } or-rule-viewer { z-index: 1; } `"
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrRules",
          "members": [
            {
              "kind": "field",
              "name": "DEFAULT_RULESET_NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "default": "\"\""
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "attribute": "readonly"
            },
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "RulesConfig | undefined"
              },
              "privacy": "public",
              "attribute": "config"
            },
            {
              "kind": "field",
              "name": "realm",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "realm"
            },
            {
              "kind": "field",
              "name": "language",
              "type": {
                "text": "RulesetLang | undefined"
              },
              "privacy": "public",
              "attribute": "language"
            },
            {
              "kind": "field",
              "name": "selectedIds",
              "type": {
                "text": "number[] | undefined"
              },
              "privacy": "public",
              "attribute": "selectedIds"
            },
            {
              "kind": "field",
              "name": "_isValidRule",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_rulesList",
              "type": {
                "text": "OrRuleList"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_viewer",
              "type": {
                "text": "OrRuleViewer"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "refresh",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "isReadonly",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "_confirmContinue",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "action",
                  "type": {
                    "text": "() => void"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onRuleSelectionRequested",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "OrRulesRequestSelectionEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onRuleSelectionChanged",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "OrRulesSelectionEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onRuleAdd",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "OrRulesAddEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onRuleSave",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "OrRulesSaveEvent"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "readonly",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "readonly"
            },
            {
              "name": "config",
              "type": {
                "text": "RulesConfig | undefined"
              },
              "fieldName": "config"
            },
            {
              "name": "realm",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "realm"
            },
            {
              "name": "language",
              "type": {
                "text": "RulesetLang | undefined"
              },
              "fieldName": "language"
            },
            {
              "name": "selectedIds",
              "type": {
                "text": "number[] | undefined"
              },
              "fieldName": "selectedIds"
            }
          ],
          "mixins": [
            {
              "name": "translate(i18next)",
              "module": "../or-rules/src/index.ts"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-rules",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "buttonStyle",
          "declaration": {
            "name": "buttonStyle",
            "module": "\"./style\""
          }
        },
        {
          "kind": "js",
          "name": "RuleViewInfoMap",
          "declaration": {
            "name": "RuleViewInfoMap",
            "module": "../or-rules/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "getAssetTypeFromQuery",
          "declaration": {
            "name": "getAssetTypeFromQuery",
            "module": "../or-rules/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "getAssetIdsFromQuery",
          "declaration": {
            "name": "getAssetIdsFromQuery",
            "module": "../or-rules/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "getAssetTypes",
          "declaration": {
            "name": "getAssetTypes",
            "module": "../or-rules/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "getAssetInfos",
          "declaration": {
            "name": "getAssetInfos",
            "module": "../or-rules/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "getAssetsByType",
          "declaration": {
            "name": "getAssetsByType",
            "module": "../or-rules/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrRulesRuleChangedEvent",
          "declaration": {
            "name": "OrRulesRuleChangedEvent",
            "module": "../or-rules/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrRulesRuleUnsupportedEvent",
          "declaration": {
            "name": "OrRulesRuleUnsupportedEvent",
            "module": "../or-rules/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrRulesRequestSelectionEvent",
          "declaration": {
            "name": "OrRulesRequestSelectionEvent",
            "module": "../or-rules/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrRulesSelectionEvent",
          "declaration": {
            "name": "OrRulesSelectionEvent",
            "module": "../or-rules/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrRulesRequestAddEvent",
          "declaration": {
            "name": "OrRulesRequestAddEvent",
            "module": "../or-rules/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrRulesAddEvent",
          "declaration": {
            "name": "OrRulesAddEvent",
            "module": "../or-rules/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrRulesRequestDeleteEvent",
          "declaration": {
            "name": "OrRulesRequestDeleteEvent",
            "module": "../or-rules/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrRulesRequestSaveEvent",
          "declaration": {
            "name": "OrRulesRequestSaveEvent",
            "module": "../or-rules/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrRulesSaveEvent",
          "declaration": {
            "name": "OrRulesSaveEvent",
            "module": "../or-rules/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrRulesDeleteEvent",
          "declaration": {
            "name": "OrRulesDeleteEvent",
            "module": "../or-rules/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "../or-rules/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrRules",
          "declaration": {
            "name": "OrRules",
            "module": "../or-rules/src/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-rules",
          "declaration": {
            "name": "OrRules",
            "module": "../or-rules/src/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-rules/src/or-rule-list.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrRuleList",
          "members": [
            {
              "kind": "field",
              "name": "DEFAULT_ALLOWED_LANGUAGES",
              "type": {
                "text": "array"
              },
              "privacy": "public",
              "static": true,
              "default": "[RulesetLang.JSON, RulesetLang.GROOVY, RulesetLang.JAVASCRIPT, RulesetLang.FLOW]"
            },
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "RulesConfig | undefined"
              },
              "privacy": "public",
              "attribute": "config"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "readonly"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "multiSelect",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "attribute": "multiSelect"
            },
            {
              "kind": "field",
              "name": "selectedIds",
              "type": {
                "text": "number[] | undefined"
              },
              "privacy": "public",
              "attribute": "selectedIds"
            },
            {
              "kind": "field",
              "name": "sortBy",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "sortBy"
            },
            {
              "kind": "field",
              "name": "language",
              "type": {
                "text": "RulesetLang | undefined"
              },
              "privacy": "public",
              "attribute": "language"
            },
            {
              "kind": "field",
              "name": "_nodes",
              "type": {
                "text": "RulesetNode[] | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_showLoading",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "true"
            },
            {
              "kind": "field",
              "name": "_globalRulesets",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "attribute": "_globalRulesets"
            },
            {
              "kind": "field",
              "name": "_selectedNodes",
              "type": {
                "text": "RulesetNode[]"
              },
              "privacy": "protected",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "_rulesetPromises",
              "type": {
                "text": "Map<string, Promise<any[]>>"
              },
              "privacy": "protected",
              "default": "new Map<string, Promise<any[]>>()"
            },
            {
              "kind": "field",
              "name": "_ready",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "method",
              "name": "refresh",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "_allowedLanguages",
              "type": {
                "text": "RulesetLang[] | undefined"
              },
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "_updateLanguage",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_onReady",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_isReadonly",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_nodeTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | string"
                }
              },
              "parameters": [
                {
                  "name": "node",
                  "type": {
                    "text": "RulesetNode"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getNodeStatusClasses",
              "privacy": "protected",
              "static": true,
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "ruleset",
                  "type": {
                    "text": "RulesetUnion"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_updateSelectedNodes",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_updateSort",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "nodes",
                  "type": {
                    "text": "RulesetNode[]"
                  }
                },
                {
                  "name": "sortFunction",
                  "type": {
                    "text": "(a: RulesetNode, b: RulesetNode) => number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onNodeClicked",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "evt",
                  "type": {
                    "text": "MouseEvent"
                  }
                },
                {
                  "name": "node",
                  "type": {
                    "text": "RulesetNode"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onCopyClicked",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_onAddClicked",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "lang",
                  "type": {
                    "text": "RulesetLang"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onDeleteClicked",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_doDelete",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_onSearchClicked",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_onSortClicked",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "sortBy",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getSortFunction",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "(a: RulesetNode, b: RulesetNode) => number"
                }
              }
            },
            {
              "kind": "method",
              "name": "_getRealm",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "string | undefined"
                }
              }
            },
            {
              "kind": "method",
              "name": "_loadRulesets",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_buildTreeNodes",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "rulesets",
                  "type": {
                    "text": "RealmRuleset[]"
                  }
                },
                {
                  "name": "sortFunction",
                  "type": {
                    "text": "(a: RulesetNode, b: RulesetNode) => number"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "type": {
                "text": "OrRulesSelectionEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "config",
              "type": {
                "text": "RulesConfig | undefined"
              },
              "fieldName": "config"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "readonly"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "multiSelect",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "fieldName": "multiSelect"
            },
            {
              "name": "selectedIds",
              "type": {
                "text": "number[] | undefined"
              },
              "fieldName": "selectedIds"
            },
            {
              "name": "sortBy",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "sortBy"
            },
            {
              "name": "language",
              "type": {
                "text": "RulesetLang | undefined"
              },
              "fieldName": "language"
            },
            {
              "name": "_globalRulesets",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "_globalRulesets"
            }
          ],
          "mixins": [
            {
              "name": "translate(i18next)",
              "module": "../or-rules/src/or-rule-list.ts"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-rule-list",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrRuleList",
          "declaration": {
            "name": "OrRuleList",
            "module": "../or-rules/src/or-rule-list.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-rule-list",
          "declaration": {
            "name": "OrRuleList",
            "module": "../or-rules/src/or-rule-list.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-rules/src/or-rule-text-viewer.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrRuleTextViewer",
          "members": [
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "RulesConfig | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "_ruleset",
              "type": {
                "text": "RulesetUnion"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_rules",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_aceEditor",
              "type": {
                "text": "Ref<OrAceEditor>"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "ruleset",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "_createRules",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "string"
                }
              }
            },
            {
              "kind": "method",
              "name": "_getMode",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_getRulesString",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_onEditorChanged",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "OrAceEditorChangedEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "beforeSave",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            }
          ],
          "events": [
            {
              "name": "valid",
              "type": {
                "text": "OrRulesRuleChangedEvent"
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-rule-text-viewer",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrRuleTextViewer",
          "declaration": {
            "name": "OrRuleTextViewer",
            "module": "../or-rules/src/or-rule-text-viewer.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-rule-text-viewer",
          "declaration": {
            "name": "OrRuleTextViewer",
            "module": "../or-rules/src/or-rule-text-viewer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-rules/src/or-rule-validity.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrRuleValidity",
          "members": [
            {
              "kind": "field",
              "name": "ruleset",
              "type": {
                "text": "RulesetUnion | undefined"
              },
              "privacy": "public",
              "attribute": "ruleset"
            },
            {
              "kind": "field",
              "name": "dialog",
              "type": {
                "text": "OrMwcDialog | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_validity",
              "type": {
                "text": "CalendarEvent | undefined"
              },
              "privacy": "protected",
              "attribute": "_validity"
            },
            {
              "kind": "field",
              "name": "_rrule",
              "type": {
                "text": "RRule | undefined"
              },
              "privacy": "protected",
              "attribute": "_rrule"
            },
            {
              "kind": "field",
              "name": "_dialog",
              "type": {
                "text": "OrMwcDialog | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "getWeekDay",
              "return": {
                "type": {
                  "text": "ByWeekday | undefined"
                }
              },
              "parameters": [
                {
                  "name": "weekday",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "isAllDay"
            },
            {
              "kind": "method",
              "name": "setRRuleValue",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "timeLabel"
            },
            {
              "kind": "method",
              "name": "setValidityType",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getValidityType"
            },
            {
              "kind": "method",
              "name": "showDialog",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "getDialogContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            }
          ],
          "events": [
            {
              "type": {
                "text": "OrRulesRuleChangedEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "ruleset",
              "type": {
                "text": "RulesetUnion | undefined"
              },
              "fieldName": "ruleset"
            },
            {
              "name": "_validity",
              "type": {
                "text": "CalendarEvent | undefined"
              },
              "fieldName": "_validity"
            },
            {
              "name": "_rrule",
              "type": {
                "text": "RRule | undefined"
              },
              "fieldName": "_rrule"
            }
          ],
          "mixins": [
            {
              "name": "translate(i18next)",
              "module": "../or-rules/src/or-rule-validity.ts"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-rule-validity",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrRuleValidity",
          "declaration": {
            "name": "OrRuleValidity",
            "module": "../or-rules/src/or-rule-validity.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-rule-validity",
          "declaration": {
            "name": "OrRuleValidity",
            "module": "../or-rules/src/or-rule-validity.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-rules/src/or-rule-viewer.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css` :host { display: block; height: 100%; width: 100%; overflow-y: auto; } or-rule-validity { margin-left: 10px; margin-right: 20px; } .wrapper { display: flex; flex-direction: column; align-items: center; height: 100%; } #main-wrapper.saving { opacity: 0.5; pointer-events: none; } #rule-name { max-width: 400px; flex: 1 1 0; display: flex; } #rule-header { display: flex; align-items: center; width: 100%; box-sizing: border-box; min-height: var(--internal-or-rules-header-height); height: var(--internal-or-rules-header-height); z-index: 7; padding: 15px 20px; --or-icon-fill: var(--internal-or-rules-panel-color); } #rule-header-controls { margin-left: auto; display: flex; align-items: center; } #rule-id { margin-left: 10px; font-size: small; } #active-wrapper { display: flex; align-items: center; } #rule-view { flex-grow: 1; background-color: var(--internal-or-rules-background-color); } .iconfill-gray { margin-left: 10px; --or-icon-fill: var(--internal-or-rules-list-icon-color-ok); } .iconfill-red { margin-left: 10px; --or-icon-fill: var(--internal-or-rules-list-icon-color-error); } `"
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrRuleViewer",
          "members": [
            {
              "kind": "field",
              "name": "ruleset",
              "type": {
                "text": "RulesetUnion | undefined"
              },
              "privacy": "public",
              "attribute": "ruleset"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "readonly"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "RulesConfig | undefined"
              },
              "privacy": "public",
              "attribute": "config"
            },
            {
              "kind": "field",
              "name": "modified",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_ruleValid",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_supported",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "true"
            },
            {
              "kind": "field",
              "name": "view",
              "type": {
                "text": "RuleView | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "wrapperElem",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "saveBtnElem",
              "type": {
                "text": "OrMwcInput"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_focusName",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "valid",
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "_isReadonly",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_cannotSave",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_changeName",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onRuleChanged",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "OrRulesRuleChangedEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onSaveClicked",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_doSave",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_onRuleUnsupported",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_toggleEnabled",
              "privacy": "protected"
            }
          ],
          "events": [
            {
              "type": {
                "text": "OrRulesSaveEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "ruleset",
              "type": {
                "text": "RulesetUnion | undefined"
              },
              "fieldName": "ruleset"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "readonly"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "config",
              "type": {
                "text": "RulesConfig | undefined"
              },
              "fieldName": "config"
            }
          ],
          "mixins": [
            {
              "name": "translate(i18next)",
              "module": "../or-rules/src/or-rule-viewer.ts"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-rule-viewer",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "../or-rules/src/or-rule-viewer.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrRuleViewer",
          "declaration": {
            "name": "OrRuleViewer",
            "module": "../or-rules/src/or-rule-viewer.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-rule-viewer",
          "declaration": {
            "name": "OrRuleViewer",
            "module": "../or-rules/src/or-rule-viewer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-rules/src/style.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "invalidStyle",
          "default": "css` *:invalid { border-bottom: 2px solid var(--internal-or-rules-invalid-color); } `"
        },
        {
          "kind": "variable",
          "name": "buttonStyle",
          "default": "css` .button-clear { background: none; color: ${unsafeCSS(DefaultColor5)}; --or-icon-fill: ${unsafeCSS(DefaultColor5)}; visibility: hidden; display: inline-block; border: none; padding: 0; cursor: pointer; } .button-clear:hover { --or-icon-fill: var(--internal-or-rules-button-color); } .button-clear:focus { outline: 0; } .button-clear.hidden { visibility: hidden; } .plus-button { --or-icon-fill: var(--internal-or-rules-button-color); } .add-button { display: inline-block; font-weight: bold; font-size: 15px; line-height: 24px; } .add-buttons-container { display: flex; flex-direction: column; margin-top: 10px; margin-bottom: -10px; padding-top: 5px; border-top-width: 1px; border-top-style: solid; border-color: var(--internal-or-rules-line-color); } .add-buttons-container.hidden { border: none; margin: 0; padding: 0; } .add-buttons-container > button { display: inline-flex; } .add-buttons-container > button > or-icon { margin-right: 5px; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "invalidStyle",
          "declaration": {
            "name": "invalidStyle",
            "module": "../or-rules/src/style.ts"
          }
        },
        {
          "kind": "js",
          "name": "buttonStyle",
          "declaration": {
            "name": "buttonStyle",
            "module": "../or-rules/src/style.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-smart-notify/src/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrSmartNotify",
          "members": [
            {
              "kind": "field",
              "name": "onChange",
              "type": {
                "text": "any"
              },
              "privacy": "private",
              "attribute": "onChange"
            },
            {
              "kind": "field",
              "name": "isVisible",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "attribute": "isVisible"
            },
            {
              "kind": "field",
              "name": "isActive",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "attribute": "isActive"
            },
            {
              "kind": "field",
              "name": "isDisabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "attribute": "isDisabled"
            },
            {
              "kind": "field",
              "name": "smartNotify",
              "type": {
                "text": "any"
              },
              "privacy": "private",
              "default": "{}",
              "attribute": "smartNotify"
            },
            {
              "kind": "field",
              "name": "currentTime",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "\"-\"",
              "attribute": "currentTime"
            },
            {
              "kind": "method",
              "name": "getSmartNotify",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "checkSmartNotifyMarkers",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "setSmartNotify",
              "privacy": "public",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "close",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "toggleVisibility",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "onChange",
              "type": {
                "text": "any"
              },
              "fieldName": "onChange"
            },
            {
              "name": "isVisible",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "isVisible"
            },
            {
              "name": "isActive",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "isActive"
            },
            {
              "name": "isDisabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "isDisabled"
            },
            {
              "name": "smartNotify",
              "type": {
                "text": "any"
              },
              "default": "{}",
              "fieldName": "smartNotify"
            },
            {
              "name": "currentTime",
              "type": {
                "text": "string"
              },
              "default": "\"-\"",
              "fieldName": "currentTime"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-smart-notify",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "or-smart-notify",
          "declaration": {
            "name": "OrSmartNotify",
            "module": "../or-smart-notify/src/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-survey/src/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrComputeGridEvent",
          "members": [
            {
              "kind": "field",
              "name": "NAME",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"or-asset-viewer-compute-grid-event\""
            }
          ],
          "superclass": {
            "name": "CustomEvent",
            "module": "../or-survey/src/index.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "OrSurvey",
          "members": [
            {
              "kind": "field",
              "name": "survey",
              "type": {
                "text": "Asset | undefined"
              },
              "privacy": "public",
              "attribute": "survey"
            },
            {
              "kind": "field",
              "name": "surveyId",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "surveyId"
            },
            {
              "kind": "field",
              "name": "isAddingQuestion",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "attribute": "isAddingQuestion"
            },
            {
              "kind": "field",
              "name": "hasIntroQuestion",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "attribute": "hasIntroQuestion"
            },
            {
              "kind": "field",
              "name": "question",
              "type": {
                "text": "Asset | undefined"
              },
              "privacy": "public",
              "attribute": "question"
            },
            {
              "kind": "field",
              "name": "surveyAnswers",
              "type": {
                "text": "SurveyAnswers | undefined"
              },
              "privacy": "public",
              "attribute": "surveyAnswers"
            },
            {
              "kind": "field",
              "name": "questions",
              "type": {
                "text": "Asset[] | undefined"
              },
              "privacy": "public",
              "default": "[]",
              "attribute": "questions"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "questionIndex",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "questionIndexLabel",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "nextButtonLabel",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "saveanswers",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "attribute": "saveanswers"
            },
            {
              "kind": "field",
              "name": "completed",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "completed"
            },
            {
              "kind": "field",
              "name": "hasSubmission",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "attribute": "hasSubmission"
            },
            {
              "kind": "field",
              "name": "previousButton",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "attribute": "previousButton"
            },
            {
              "kind": "field",
              "name": "nextButton",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "public",
              "attribute": "nextButton"
            },
            {
              "kind": "field",
              "name": "questionAnimation",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "_initCallback",
              "type": {
                "text": "EventCallback | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "checkAssetPeriode",
              "parameters": [
                {
                  "name": "asset",
                  "type": {
                    "text": "Asset"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getInputType",
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "string|undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getType",
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "string|undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "checkButtons"
            },
            {
              "kind": "method",
              "name": "nextQuestion"
            },
            {
              "kind": "method",
              "name": "resetSurvey"
            },
            {
              "kind": "method",
              "name": "previousQuestion"
            },
            {
              "kind": "method",
              "name": "onAnswer",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                },
                {
                  "name": "answer",
                  "type": {
                    "text": "AnswerOption"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getSurvey"
            }
          ],
          "events": [
            {
              "type": {
                "text": "OrComputeGridEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "survey",
              "type": {
                "text": "Asset | undefined"
              },
              "fieldName": "survey"
            },
            {
              "name": "surveyId",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "surveyId"
            },
            {
              "name": "isAddingQuestion",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "isAddingQuestion"
            },
            {
              "name": "hasIntroQuestion",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "hasIntroQuestion"
            },
            {
              "name": "question",
              "type": {
                "text": "Asset | undefined"
              },
              "fieldName": "question"
            },
            {
              "name": "surveyAnswers",
              "type": {
                "text": "SurveyAnswers | undefined"
              },
              "fieldName": "surveyAnswers"
            },
            {
              "name": "questions",
              "type": {
                "text": "Asset[] | undefined"
              },
              "default": "[]",
              "fieldName": "questions"
            },
            {
              "name": "saveanswers",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "saveanswers"
            },
            {
              "name": "completed",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "fieldName": "completed"
            },
            {
              "name": "hasSubmission",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "hasSubmission"
            },
            {
              "name": "previousButton",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "previousButton"
            },
            {
              "name": "nextButton",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "nextButton"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-survey",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OrComputeGridEvent",
          "declaration": {
            "name": "OrComputeGridEvent",
            "module": "../or-survey/src/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-survey",
          "declaration": {
            "name": "OrSurvey",
            "module": "../or-survey/src/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-survey/src/style.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "surveySectionStyle",
          "default": "html` <style> :host { display: flex; flex-direction: column; --internal-or-survey-color-button: var(--or-survey-color-button, var(--or-app-color1, ${unsafeCSS(DefaultColor1)})); --internal-or-survey-color-button-color: var(--or-survey-color-button-icon, #FFFFFF); --internal-or-survey-color-lightgrey: var(--or-survey-color, var(--or-app-color1, ${unsafeCSS(DefaultColor1)})); --internal-or-survey-color-grey: var(--or-survey-color, var(--or-app-color1, ${unsafeCSS(DefaultColor1)})); --internal-or-survey-color: var(--or-survey-color1, var(--or-app-color1, ${unsafeCSS(DefaultColor1)})); --internal-or-survey-color2: var(--or-survey-color2, var(--or-app-color2, ${unsafeCSS(DefaultColor2)})); --internal-or-survey-color3: var(--or-survey-color3, var(--or-app-color3, ${unsafeCSS(DefaultColor3)})); --internal-or-survey-color4: var(--or-survey-color4, var(--or-app-color4, ${unsafeCSS(DefaultColor4)})); --internal-or-survey-color5: var(--or-survey-color5, var(--or-app-color5, ${unsafeCSS(DefaultColor5)})); --internal-or-survey-color6: var(--or-survey-color6, var(--or-app-color6, ${unsafeCSS(DefaultColor6)})); --internal-or-survey-color7: var(--or-survey-color7, var(--or-app-color7, ${unsafeCSS(DefaultColor7)})); } .shadow { -webkit-box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.21); -moz-box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.21); box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.21); } .layout.horizontal { display: flex; flex-direction: row; } .layout.vertical { display: flex; flex-direction: column; } .center { justify-content: center; align-items: center; } .t-center { text-align: center; } .flex-grow { flex: 1 1 0; } :host input { margin-bottom: 20px; } label { font-size: 14px; background-color: var(--internal-or-survey-color-grey); } button { font-size: 14px; height: 40px; background-color: var(--internal-or-survey-color-button); margin-left: auto; color: #FFF; font-weight: bold; cursor: pointer; padding: 0 20px; border-width: initial; border-style: none; border-color: initial; border-image: initial; border-radius: 5px; } .square-button { padding: 10px; background-color: var(--internal-or-survey-color-lightgrey); } .square-button or-icon { --or-icon-height: 16px; --or-icon-width: 16px; --or-icon-fill: var(--internal-or-survey-color-grey); } .square-button:hover { background-color: var(--internal-or-survey-color2); } .square-button:hover or-icon { --or-icon-fill: #FFFFFF; } .button-text { font-weight: bold; color: var(--internal-or-survey-color2); margin-bottom: 20px; } .button-text or-icon { --or-icon-height: 20px; --or-icon-width: 20px; } a { cursor: pointer; } or-icon { --or-icon-width: 24px; --or-icon-height: 24px; --or-icon-fill: var(--internal-or-survey-color-grey); } button or-icon { --or-icon-fill: #FFF; } a:hover > or-icon { --or-icon-fill: var(--internal-or-survey-color2); } .option-item .draggable, .option-item .delete-button { opacity: 0; } .option-item { margin: 0 -30px; padding: 0 30px; } .indented { margin-left: 40px; } .add-answer-option { margin-left: 70px; } .option-item:hover { background-color: #f2f2f2; } .option-item:hover .draggable, .option-item:hover .delete-button { opacity: 1; } .draggable-container { position: relative; } .question-item { position: relative; width: 100%; display: grid; align-items: center; box-sizing: border-box; user-select: none; transition: none; z-index: 1; background: white; font-family: sans-serif; } .question-item.nudgeDown:not(.dragged) { transform: translate3d(0, 48px, 0); } .question-item.nudgeUp:not(.dragged) { transform: translate3d(0, -48px, 0); } .question-item.dragged { box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23); transition: none; } .dragging > .question-item:not(.dragged) { transition: transform 0.2s ease-out; } .draggable { cursor: pointer; position: absolute; left: -24px; z-index: 1; } .draggable or-icon { margin-top: 10px; --or-icon-fill: var(--app-grey-color); } input { padding: 5px 0 8px; margin-bottom: 30px; color: #333333; font-size: 16px; border-color: #f2f2f2; } input[disabled] { background-color: var(--app-lightgrey-color); color: var(--app-grey-color); } label { color: #808080; font-size: 12px; font-weight: bold; } </style> `"
        },
        {
          "kind": "variable",
          "name": "surveyLayoutStyle",
          "default": "html` <style> :host { width: 100%; background-color: #FFFFFF; } #surveyQuestions { width: 100%; overflow: hidden; } button-default > *:focus { background-color: transparent } p { text-align: center; } input { display: none; } input.text-input { display: block; } .answer-card { flex: 1; flex-grow: 1; flex-basis: 0; } .answer-card { background-color: var(--internal-or-survey-color1, #F3C11F); margin-left: 5px; border: 3px solid white; box-sizing: border-box; -moz-box-sizing: border-box; -webkit-box-sizing: border-box; } .answer-card:first-child { margin-left: 0; } .answer-card:nth-of-type(1), .answer-card:nth-of-type(5), .answer-card:nth-of-type(9){ background-color: var(--internal-or-survey-color1, #F3C11F); } .answer-card:nth-of-type(2), .answer-card:nth-of-type(6), .answer-card:nth-of-type(10){ background-color: var(--internal-or-survey-color2, #4A99BA); } .answer-card:nth-of-type(3), .answer-card:nth-of-type(7), .answer-card:nth-of-type(11){ background-color: var(--internal-or-survey-color3, #23B099); } .answer-card:nth-of-type(4), .answer-card:nth-of-type(8), .answer-card:nth-of-type(12){ background-color: var(--internal-or-survey-color4, #EA8D31); } .answer-card.rating { border: none; background-color: transparent; } .answer-card.rating label { border-radius: 50%; background-color: var(--or-survey-color-button, #e32527); line-height: 30px; width: 30px; height: 30px; padding: 10px; } button { cursor: pointer; visibility: hidden; position: relative; -moz-appearance: none; -webkit-appearance: none; -moz-border-radius: 2px; -webkit-border-radius: 2px; border-radius: 2px; font-family: Arial, \"Open Sans\", sans-serif; text-align: center; border: 0; color: #fff; text-decoration: none; padding: .625rem calc(2.5rem + 10px) .625rem 1.25rem; background-color: var(--or-survey-color-button, #e32527); font-size: 18px; font-weight: 300; } button or-icon { margin-right: 20px; } button[visible] { visibility: visible; } button.previous { padding: .625rem 1.25rem .625rem calc(2.5rem + 10px); } button.previous .icon { width: 2.5rem; fill: var(--internal-or-survey-color-button-color); color: var(--internal-or-survey-color-button-color); position: absolute; left: 0; top: 0; height: 20px; padding: 10px 0; } button.next .icon { width: 2.5rem; fill: var(--internal-or-survey-color-button-color); color: var(--internal-or-survey-color-button-color); position: absolute; right: 0; top: 0; height: 20px; padding: 10px 0; } input { margin: 0 0 20px; padding: 8px; } input + label { font-size: 18px; color: #FFFFFF; display: block; text-align: center; opacity: 0.87; margin: 10px; padding: 40px; height: calc(100% - 60px); cursor: pointer; -ms-transform: scale(0.8); -webkit-transform: scale(0.8); transform: scale(0.8); -webkit-transition: transform 0.15s; -moz-transition: transform 0.15s; -o-transition: transform 0.15s; transition: transform 0.15s; background-color: transparent; } input + label:hover { opacity: 1; -ms-transform: scale(1); -webkit-transform: scale(1); transform: scale(1); } input[type=\"checkbox\"]:checked + label, input[type=\"radio\"]:checked + label { opacity: 1; -ms-transform: scale(1); -webkit-transform: scale(1); transform: scale(1); }, input[type=\"radio\"]:checked + label, input[type=\"checkbox\"]:checked { border: 3px solid white; } textarea { flex-grow: 1; border: 1px solid var(--or-app-color3); height: 4em; line-height: 16px; } .answer-icon { width: 20px; height: 20px; display: block; margin: auto; font-size: 16px; line-height: 20px; font-weight: bold; border: 3px solid var(--app-white); border-radius: 5px; margin-bottom: 5px; } #survey-container { -ms-flex-pack: center; -webkit-justify-content: center; justify-content: center; } .answer-card { width: 25%; min-width: 25%; max-width: 25%; flex-grow: 1; flex-basis: auto; margin-left: 0px; } @media (max-width: 1480px) { .answer-card { width: 50%; min-width: 50%; max-width: 50%; flex-grow: 1; flex-basis: auto; margin-left: 0px; } } input + label { padding: 20px; } .answer-card.rating { width: 20%; min-width: 20%; max-width: 20%; } textarea { height: 4em; line-height: 16px; } #survey-container.moveIn { -webkit-animation: moveIn .6s 1 forwards; animation: moveIn .6s 1 forwards; } #survey-container.moveOut { -webkit-animation: moveOut .6s 1 forwards; animation: moveOut .6s 1 forwards; } @-webkit-keyframes moveIn { 0% { -webkit-transform: translate(100%); -moz-transform: translate(100%); -ms-transform: translate(100%); -o-transform: translate(100%); transform: translate(100%); } 100% { -webkit-transform: translate(0%); -moz-transform: translate(0%); -ms-transform: translate(0%); -o-transform: translate(0%); transform: translate(0%); } } @keyframes moveIn { 0% { -webkit-transform: translate(100%); -moz-transform: translate(100%); -ms-transform: translate(100%); -o-transform: translate(100%); transform: translate(100%); } 100% { -webkit-transform: translate(0%); -moz-transform: translate(0%); -ms-transform: translate(0%); -o-transform: translate(0%); transform: translate(0%); } } @-webkit-keyframes moveOut { 0% { -webkit-transform: translate(-100%); -moz-transform: translate(-100%); -ms-transform: translate(-100%); -o-transform: translate(-100%); transform: translate(-100%); } 100% { -webkit-transform: translate(0%); -moz-transform: translate(0%); -ms-transform: translate(0%); -o-transform: translate(0%); transform: translate(0%); } } @keyframes moveOut { 0% { -webkit-transform: translate(-100%); -moz-transform: translate(-100%); -ms-transform: translate(-100%); -o-transform: translate(-100%); transform: translate(-100%); } 100% { -webkit-transform: translate(0%); -moz-transform: translate(0%); -ms-transform: translate(0%); -o-transform: translate(0%); transform: translate(0%); } } @media (max-width: 769px) { input[type=\"color\"], input[type=\"date\"], input[type=\"datetime\"], input[type=\"datetime-local\"], input[type=\"email\"], input[type=\"month\"], input[type=\"number\"], input[type=\"password\"], input[type=\"search\"], input[type=\"tel\"], input[type=\"text\"], input[type=\"time\"], input[type=\"url\"], input[type=\"week\"], select:focus, textarea { font-size: 16px; } } </style> `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "surveySectionStyle",
          "declaration": {
            "name": "surveySectionStyle",
            "module": "../or-survey/src/style.ts"
          }
        },
        {
          "kind": "js",
          "name": "surveyLayoutStyle",
          "declaration": {
            "name": "surveyLayoutStyle",
            "module": "../or-survey/src/style.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-survey-results/src/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrSurveyResults",
          "members": [
            {
              "kind": "field",
              "name": "survey",
              "type": {
                "text": "Asset | undefined"
              },
              "privacy": "public",
              "attribute": "survey"
            },
            {
              "kind": "field",
              "name": "questions",
              "type": {
                "text": "Asset[] | undefined"
              },
              "privacy": "public",
              "attribute": "questions"
            },
            {
              "kind": "field",
              "name": "surveyId",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "surveyId"
            },
            {
              "kind": "field",
              "name": "activeResult",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "attribute": "activeResult"
            },
            {
              "kind": "field",
              "name": "maxAmount",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "attribute": "maxAmount"
            },
            {
              "kind": "method",
              "name": "getSurvey"
            },
            {
              "kind": "method",
              "name": "computeHeight",
              "parameters": [
                {
                  "name": "barAmount",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "computeResults",
              "parameters": [
                {
                  "name": "results",
                  "type": {
                    "text": "ProcessedResult[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "changeActiveResult",
              "parameters": [
                {
                  "name": "index",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "survey",
              "type": {
                "text": "Asset | undefined"
              },
              "fieldName": "survey"
            },
            {
              "name": "questions",
              "type": {
                "text": "Asset[] | undefined"
              },
              "fieldName": "questions"
            },
            {
              "name": "surveyId",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "surveyId"
            },
            {
              "name": "activeResult",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "activeResult"
            },
            {
              "name": "maxAmount",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "maxAmount"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-survey-results",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "or-survey-results",
          "declaration": {
            "name": "OrSurveyResults",
            "module": "../or-survey-results/src/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-survey-results/src/style.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "surveyResultStyle",
          "default": "html` <style> :host { width: 100%; background-color: #FFFFFF; --internal-or-survey-results-max-width: var(--or-survey-results-max-width, none); } .flex { -ms-flex: 1 1 0.000000001px; -webkit-flex: 1; flex: 1; -webkit-flex-basis: 0.000000001px; flex-basis: 0.000000001px; } .layout.horizontal, .layout.vertical { display: -ms-flexbox; display: -webkit-flex; display: flex; } .layout.horizontal { -ms-flex-direction: row; -webkit-flex-direction: row; flex-direction: row; } .layout.vertical { -ms-flex-direction: column; -webkit-flex-direction: column; flex-direction: column; } .button-default { cursor: pointer; margin: auto 1px; background-color: #EF9091; padding: 10px 20px; border-radius: 0; color: #FFFFFF; } .button-default.active { background-color: var(--or-survey-color-button, var(--app-primary-color)) } .bar span { background-color: #F3C11F; } .bar:nth-child(2n+2) span { background-color: #4A99BA; } .bar:nth-child(3n+3) span { background-color: #23B099; } .bar:nth-child(4n+4) span { background-color: #EA8D31; } .bar:nth-child(5n+5) span { background-color: #e32527; } .label { } .label-x { display: block; margin: 0 10px; } #chart-container { padding-top: 20px; margin: auto; width: 100%; max-width: var(--internal-or-survey-results-max-width); overflow-x: scroll; } .chart { display: table; table-layout: fixed; width: 200px; height: 300px; margin: 0 auto; border-right: 1px solid grey; } .bar { position: relative; vertical-align: bottom; height: 300px; width: 25px; float: left; } .bar span { box-sizing: border-box; -moz-box-sizing: border-box; -webkit-box-sizing: border-box; position: absolute; bottom: 0; display: block; min-height: 5px; height: 50%; width: 90%; animation: draw 1s ease-in-out; -moz-transition: height 1s ease-in-out; -webkit-transition: height 1s ease-in-out; -o-transition: height 1s ease-in-out; transition: height 1s ease-in-out; } .bar span label { z-index: 1; position: absolute; left: 0; right: 0; top: 50%; width: 150px; padding: 5px 1em 0; display: none; } .bar:hover span label { display: block; } .labels .label { padding-top: 20px; border-top: 1px solid var(--app-darkgrey); min-width: 200px; margin-bottom: 20px; } .labels .label:first-child { margin-left: 46px; } .label-y { position: relative; margin-right: 10px; font-size: 14px; border-top: 1px solid grey; } .label-y:after { display: block; content: ''; position: absolute; } .border-right { border-right: 1px solid var(--app-darkgrey); margin-right: 10px; } .bar-top-label { text-align: center; position: relative; margin-top: -16px; line-height: 12px; font-size: 11px; } @keyframes draw { 0% { height: 0; } } </style> `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "surveyResultStyle",
          "declaration": {
            "name": "surveyResultStyle",
            "module": "../or-survey-results/src/style.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-thermostat/src/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrThermostat",
          "members": [
            {
              "kind": "field",
              "name": "_drawerOpened",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "attribute": "_drawerOpened"
            },
            {
              "kind": "field",
              "name": "assetId",
              "privacy": "private",
              "default": "undefined",
              "attribute": "assetId"
            },
            {
              "kind": "field",
              "name": "label",
              "privacy": "private",
              "default": "undefined",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "_connected",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_subscriptionId",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "private",
              "default": "undefined"
            },
            {
              "kind": "field",
              "name": "_displayedLabel",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "private",
              "default": "undefined"
            },
            {
              "kind": "field",
              "name": "_currentTemperature",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "_targetTemperature",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "method",
              "name": "subscribe"
            },
            {
              "kind": "method",
              "name": "unsubscribe"
            },
            {
              "kind": "field",
              "name": "displayedLabel",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "currentTemperature",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "targetTemperature",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "_drawerOpened",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "_drawerOpened"
            },
            {
              "name": "assetId",
              "default": "undefined",
              "fieldName": "assetId"
            },
            {
              "name": "label",
              "default": "undefined",
              "fieldName": "label"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-thermostat",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "or-thermostat",
          "declaration": {
            "name": "OrThermostat",
            "module": "../or-thermostat/src/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-timeline/src/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OrTimeline",
          "members": [
            {
              "kind": "field",
              "name": "current",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "0",
              "attribute": "current"
            },
            {
              "kind": "field",
              "name": "onChange",
              "type": {
                "text": "any"
              },
              "privacy": "public",
              "attribute": "onChange"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "0",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "maxRange",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "360",
              "attribute": "maxRange"
            },
            {
              "kind": "field",
              "name": "minRange",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "0",
              "attribute": "minRange"
            },
            {
              "kind": "field",
              "name": "step",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "5",
              "attribute": "step"
            },
            {
              "kind": "method",
              "name": "moveBubble",
              "privacy": "public",
              "parameters": [
                {
                  "name": "e",
                  "default": "null",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "value",
                  "default": "null",
                  "type": {
                    "text": "string|null"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "valueChange",
              "privacy": "public",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "current",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "current"
            },
            {
              "name": "onChange",
              "type": {
                "text": "any"
              },
              "fieldName": "onChange"
            },
            {
              "name": "value",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "value"
            },
            {
              "name": "maxRange",
              "type": {
                "text": "number"
              },
              "default": "360",
              "fieldName": "maxRange"
            },
            {
              "name": "minRange",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "minRange"
            },
            {
              "name": "step",
              "type": {
                "text": "number"
              },
              "default": "5",
              "fieldName": "step"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-timeline",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "or-timeline",
          "declaration": {
            "name": "OrTimeline",
            "module": "../or-timeline/src/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-translate/src/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "# Translate\r\n### `<or-translate>` - `OrTranslate`\r\n\r\nUtility component that dynamically translates the value attribute using the [i18next](https://www.i18next.com) library. <br />\r\nUseful throughout web apps, as it automatically responds to language changes.\r\n\r\nBased on the selected language in cache, it will look up the `/locales` folder with the `or.json` file, and translate by key. <br />\r\nLocation of the translation folder;\r\n- **OR Manager:** `/manager/src/web/shared/locales/<lang>/app.json`\r\n- **Custom projects:** `/ui/app/<your app>/locales/<lang>/app.json`\r\n\r\nThe HTML content is a simple text, with no <span> or similar wrapper.",
          "name": "OrTranslate",
          "members": [
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "options",
              "type": {
                "text": "TOptions<InitOptions> | undefined"
              },
              "privacy": "public",
              "attribute": "options"
            },
            {
              "kind": "method",
              "name": "_getTranslatedValue",
              "privacy": "protected"
            }
          ],
          "attributes": [
            {
              "name": "value",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "value"
            },
            {
              "name": "options",
              "type": {
                "text": "TOptions<InitOptions> | undefined"
              },
              "fieldName": "options"
            }
          ],
          "mixins": [
            {
              "name": "translate(i18next)",
              "module": "../or-translate/src/index.ts"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "or-translate",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "i18next",
          "declaration": {
            "name": "i18next",
            "module": "../or-translate/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "translate",
          "declaration": {
            "name": "translate",
            "module": "../or-translate/src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrTranslate",
          "declaration": {
            "name": "OrTranslate",
            "module": "../or-translate/src/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "or-translate",
          "declaration": {
            "name": "OrTranslate",
            "module": "../or-translate/src/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "../or-translate/src/translate-mixin.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "translate",
          "parameters": [
            {
              "name": "i18next",
              "type": {
                "text": "i18n"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "translate",
          "declaration": {
            "name": "translate",
            "module": "../or-translate/src/translate-mixin.ts"
          }
        }
      ]
    }
  ]
}
