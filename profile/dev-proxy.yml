# OpenRemote v3
#
# Profile for running the reverse proxy on https://localhost/ with the manager backend mapped to the host machine on
# localhost:8080 and the keycloak backend mapped to the host machine on localhost:8081
#
# Your changes will be visible live on browser reload or after restart:
#
# - Run the manager in an IDE with the following required environment variables:
#       OR_WEBSERVER_LISTEN_HOST=0.0.0.0
#
# Please see deploy.yml for configuration details for each service.
#
volumes:
  postgresql-data:

services:

  proxy:
    extends:
      file: deploy.yml
      service: proxy
    environment:
      MANAGER_HOST: 'host.docker.internal'
      # Uncomment to use sish in development
      #SISH_HOST: sish
      #SISH_PORT: 8090

  keycloak:
    extends:
      file: deploy.yml
      service: keycloak
    #volumes:
    #   Map custom themes
    #  - ../deployment:/deployment
    # Access directly if needed on localhost
    ports:
      - "8081:8080"
    # Following options are useful for tunnelling functionality do not use on public instance
    environment:
      KEYCLOAK_ISSUER_BASE_URI: https://localhost/auth
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME:
    depends_on:
      postgresql:
        condition: service_healthy

  postgresql:
    extends:
      file: deploy.yml
      service: postgresql
    volumes:
      - ../tmp:/storage
    # Access directly if needed on localhost
    ports:
      - "5432:5432"

# Uncomment to use sish in development tunnels won't be usable without wildcard dns but the start/stop tunnel logic can be tested
#  sish:
#    image: antoniomika/sish:latest
#    depends_on:
#      - proxy
#    healthcheck:
#      test: ["CMD", "/app/app", "-v"]
#    ports:
#      - "2222:2222"
#      - "9000-9002:9000-9002"
#    command: |
#      --ssh-address=:2222
#      --http-address=:8090
#      --https=false
#      --verify-ssl=false
#      --idle-connection=false
#      --port-bind-range="9000-9002"
#      --bind-random-ports=false
#      --bind-random-subdomains=false
#      --force-requested-subdomains=true
#    restart: always
