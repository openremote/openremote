# OpenRemote v3
#
# This is the base configuration profile. Note that you must extend this configuration to complete
# it with service dependencies and volume mappings, see docker-compose.yml for a usable complete
#  configuration.
#
# This file contains a description of all the environment variables available for each service
# including their default values. These can be overridden in many ways, shell environment variable,
# env file, extending/merging this compose file, etc.
#
# Here's a list of commonly customised environment variables:
#
# OR_ADMIN_PASSWORD
# OR_HOSTNAME
# OR_EMAIL_HOST
# OR_EMAIL_USER
# OR_EMAIL_PASSWORD
# OR_EMAIL_FROM
# OR_EMAIL_ADMIN
# OR_IDENTITY_PROVIDER
#
version: '2.4'

volumes:
#  postgresql-data: # Needed if you want to persist postgres data outside of container
  manager-data: # A storage volume for file persistence in the manager (can be used by services and protocols)
  proxy-data: #Needed to persist SSL certificates to avoid excessive requests to Letsencrypt

services:

  # Reverse proxy which auto-generates any Internet Assigned Numbers Authority TLD subdomain SSL certificates using
  # Lets Encrypt the domain name to generate a certificate for should be specified using DOMAINNAME (single domain name)
  # or DOMAINNAMES (multiple comma separated list of domain names). The proxy will fallback to self-signed certificate
  # for any requests for which a certificate doesn't exist. Custom certificates can be volume mapped into
  # /etc/haproxy/certs (note custom certificates must include the full chain including the private key). Can also volume
  # map a custom proxy config file.
  proxy:
    image: openremote/proxy:${PROXY_VERSION:-latest}
    restart: always
#    volumes:
#      - proxy-data:/deployment
    environment:

      # It is important that all services have the same timezone and are time synchronized.
      # Bearer tokens are only valid for minutes, and authentication fails if Keycloak drifts.
      TZ: ${TZ:-Europe/Amsterdam}

      # File to which entrypoint logs are written in addition to std out
      LOGFILE: ${PROXY_LOGFILE:-/var/log/proxy.log}

      # Customize proxy log, defaults to 'notice', requests are logged at 'info'.
      # Available levels are: emerg, alert, crit, err, warning, notice, info, debug
      PROXY_LOGLEVEL: ${PROXY_LOGLEVEL:-info}

      # IANA TLD subdomain for which an SSL certificate should be requested (leave blank for private/externally
      # generated certificates).
      DOMAINNAME: ${OR_HOSTNAME:-localhost}

      # IANA TLD comma separated subdomains for which an SSL certificates should be requested (leave blank for
      # private/externally generated certificates); this is an alternative to DOMAINNAME for multiple domains.
      DOMAINNAMES: ${OR_ADDITIONAL_HOSTNAMES:-}

      # USE A CUSTOM PROXY CONFIG - COPY FROM https://raw.githubusercontent.com/openremote/proxy/main/haproxy.cfg
      HAPROXY_CONFIG: ${HAPROXY_CONFIG:-/etc/haproxy/haproxy.cfg}

      # Email address for SSL certificate issuance and expiration notifications.
      LE_EMAIL: ${OR_EMAIL_ADMIN:-}

      # Enable --staging will manage fake certificates, so avoid hitting the rate limits of Let's Encrypt
      # when testing (this is important, you are limited to 5 duplicate certificates per week!)
      # e.g. '--staging'
      LE_EXTRA_ARGS: ${PROXY_EXTRA_ARGS:-}

      # The proxy supports up to 10 custom redirects from hostname to any path on the
      # manager service.
      # e.g. PROXY_HOST_REDIRECT_1_NAME: www.my-console-master.tld
      #      PROXY_HOST_REDIRECT_1_TARGET: /console/master
      PROXY_HOST_REDIRECT_1_NAME:
      PROXY_HOST_REDIRECT_1_TARGET:
      PROXY_HOST_REDIRECT_2_NAME:
      PROXY_HOST_REDIRECT_2_TARGET:
      PROXY_HOST_REDIRECT_3_NAME:
      PROXY_HOST_REDIRECT_3_TARGET:
      PROXY_HOST_REDIRECT_4_NAME:
      PROXY_HOST_REDIRECT_4_TARGET:
      PROXY_HOST_REDIRECT_5_NAME:
      PROXY_HOST_REDIRECT_5_TARGET:
      PROXY_HOST_REDIRECT_6_NAME:
      PROXY_HOST_REDIRECT_6_TARGET:
      PROXY_HOST_REDIRECT_7_NAME:
      PROXY_HOST_REDIRECT_7_TARGET:
      PROXY_HOST_REDIRECT_8_NAME:
      PROXY_HOST_REDIRECT_8_TARGET:
      PROXY_HOST_REDIRECT_9_NAME:
      PROXY_HOST_REDIRECT_9_TARGET:
      PROXY_HOST_REDIRECT_10_NAME:
      PROXY_HOST_REDIRECT_10_TARGET:

    # Expose public services (web server, MQTT broker)
    ports:
      - "80:80" # HTTP for letsencrypt cert generation and in general it redirects to 443 for HTTPS
      - "${OR_SSL_PORT:-443}:443" # HTTPS /auth directs to keycloak and other paths direct to manager
      - "8883:8883" # MQTTS
      - "127.0.0.1:8404:8404" # Localhost metrics access

  # The OpenRemote Manager
  manager:
    image: openremote/manager:${MANAGER_VERSION:-latest}
    #    privileged: true # Needed for dbus access when using Bluetooth
    restart: always
    # Map any custom content into the /deployment dir:
    #   /deployment/manager/app - contains custom web content
    #   /deployment/manager/extensions - contains JARS to be loaded on the classpath
    #   /deployment/manager/provisioning - contains JSON files for provisioning the system
    #   /deployment/map/mapdata.mbtiles - map tile data
    #   /deployment/map/mapsettings.json - map styling
    volumes:
      - manager-data:/storage
    #  - deployment-data:/deployment
    #  - postgresql-data:/postgres
    #  - /var/run/dbus:/var/run/dbus # EXPOSE DBUS
    # Expose any devices required by agents
    #devices:
    #  - /dev/ttyACM0
    #ports:
    #  - "8080:8080" # Web server port
    #  - "8000:8000" # Remote debugging port - NOT FOR PRODUCTION USE!!!
    #  - "8085:8085" # JMX port - FOR DIAGNOSTICS ONLY!!!
    #  - "127.0.0.1:8405:8405" # Localhost metrics access
    logging:
      options:
        # Use very little logging for container STDOUT, this is
        # quick to view and download with Docker remote client
        # and `docker logs -f`. If you want to tail the whole
        # and larger, rotated file log, use instead:
        #
        # docker exec -it openremote_manager_1 tail -f /deployment/openremote.log.0
        #
        max-size: "1m"
    environment:

      # It is important that all services have the same timezone and are time synchronized.
      # Bearer tokens are only valid for minutes, and authentication fails if Keycloak drifts
      TZ: ${TZ:-Europe/Amsterdam}

      # The password for the super user (admin) of the master realm (must match keycloak password if using
      # the keycloak identity provider).
      OR_ADMIN_PASSWORD: ${OR_ADMIN_PASSWORD:-secret}

      # This value is passed to SetupTasks can be used to determine what assets etc. should be setup for this deployment
      # the available values and general use of this is dependent on the actual SetupTasks available in the instance
      # being deployed some basic recommendations are 'production', 'staging'
      OR_SETUP_TYPE: ${OR_SETUP_TYPE}

      # The public HOSTNAME and SSL PORT of this manager
      OR_SSL_PORT: ${OR_SSL_PORT:--1}
      OR_HOSTNAME: ${OR_HOSTNAME:-localhost}

      # Additional hostnames that should be allowed to access the auth server
      OR_ADDITIONAL_HOSTNAMES: ${OR_ADDITIONAL_HOSTNAMES:-}

      # Configure Email, SMTP server to send password reset emails etc.
      OR_EMAIL_HOST:
      OR_EMAIL_USER:
      OR_EMAIL_PASSWORD:
      OR_EMAIL_PORT: ${OR_EMAIL_PORT}
      OR_EMAIL_TLS: ${OR_EMAIL_TLS}
      OR_EMAIL_X_HEADERS: ${OR_EMAIL_X_HEADERS:-} # Headers to set on all outbound emails
      OR_EMAIL_PROTOCOL: ${OR_EMAIL_PROTOCOL} # smtp or smtps for SSL (if TLS not set or is true then smtp is assumed)

      # Where to send admin emails to
      OR_EMAIL_ADMIN: ${OR_EMAIL_ADMIN}

      # From address for emails sent by the system
      OR_EMAIL_FROM: ${OR_EMAIL_FROM}

      # Console applications can register for push notifications through FCM.
      OR_FIREBASE_CONFIG_FILE: ${OR_FIREBASE_CONFIG_FILE:-/deployment/manager/fcm.json}

      # Developer mode (see code for usages of OR_DEV_MODE flag)
      OR_DEV_MODE: ${OR_DEV_MODE:-false}

      # !! WARNING: This will wipe your database !!
      # Force a full clean and setup on startup irrespective of whether there is existing data
      # Default behaviour is false unless OR_DEV_MODE = true or openremote database doesn't already exist
      OR_SETUP_RUN_ON_RESTART: ${OR_SETUP_RUN_ON_RESTART:-false}

      # Manager web server interface binding; default: 0.0.0.0
      OR_WEBSERVER_LISTEN_HOST: ${OR_WEBSERVER_LISTEN_HOST:-0.0.0.0}

      # Manager web server port (default: 8080)
      OR_WEBSERVER_LISTEN_PORT: ${OR_WEBSERVER_LISTEN_PORT:-8080}

      # Comma separated list of manager web server CORS allowed origins (can be a prefix, exact match or wildcard *)
      # These are in addition to the OR_HOSTNAME and OR_ADDITIONAL_HOSTNAMES which are implicitly allowed
      OR_WEBSERVER_ALLOWED_ORIGINS: ${OR_WEBSERVER_ALLOWED_ORIGINS:-}

      # Dump web server requests to logs; default: false
      OR_WEBSERVER_DUMP_REQUESTS: ${OR_WEBSERVER_DUMP_REQUESTS:-}

      # Manager web server maximum worker thread count; default: Processor core count or 10
      OR_WEBSERVER_WORKER_THREADS_MAX: ${OR_WEBSERVER_WORKER_THREADS_MAX:-}

      # Manager web server maximum IO thread count; default: Processor core count or 2
      OR_WEBSERVER_IO_THREADS_MAX: ${OR_WEBSERVER_IO_THREADS_MAX:-}

      # Database settings
      OR_DB_VENDOR: ${OR_DB_VENDOR:-postgres}
      OR_DB_HOST: ${OR_DB_HOST:-postgresql}
      OR_DB_PORT: ${OR_DB_PORT:-5432}
      OR_DB_NAME: ${OR_DB_NAME:-openremote}
      OR_DB_SCHEMA: ${OR_DB_SCHEMA:-openremote}
      OR_DB_USER: ${OR_DB_USER:-postgres}
      OR_DB_PASSWORD: ${OR_DB_PASSWORD:-postgres}
      OR_DB_MIN_POOL_SIZE: ${OR_DB_MIN_POOL_SIZE:-5}
      OR_DB_MAX_POOL_SIZE: ${OR_DB_MAX_POOL_SIZE:-20}
      OR_DB_CONNECTION_TIMEOUT_SECONDS: ${OR_DB_CONNECTION_TIMEOUT_SECONDS:-300}
      # Allow migration scripts to be applied out of order (see flyway DB docs)
      OR_DB_FLYWAY_OUT_OF_ORDER: ${OR_DB_FLYWAY_OUT_OF_ORDER}

      # The service-internal host name and port of the keycloak identity provider; defaults:
      OR_KEYCLOAK_HOST: ${OR_KEYCLOAK_HOST:-keycloak}
      OR_KEYCLOAK_PORT: ${OR_KEYCLOAK_PORT:-8080}
      OR_KEYCLOAK_PATH: ${OR_KEYCLOAK_PATH:-auth}

      # Keycloak public URI (only set this if keycloak is not on the same base URI as the manager i.e. not accessible at /auth)
      OR_KEYCLOAK_PUBLIC_URI:

      # Location of built in web content.
      OR_APP_DOCROOT: ${OR_APP_DOCROOT:-/opt/web}

      # Location of the custom web content.
      OR_CUSTOM_APP_DOCROOT: ${OR_CUSTOM_APP_DOCROOT:-/deployment/manager/app}

      # Location for the provisioning files
      OR_PROVISIONING_DOCROOT: ${OR_PROVISIONING_DOCROOT:-/deployment/manager/provisioning}

      # Redirect path when root URI is requested
      OR_ROOT_REDIRECT_PATH: ${OR_ROOT_REDIRECT_PATH:-/manager}

      # Map related settings.
      # Provide a path to the map tiles database file (see https://openmaptiles.com/).
      OR_MAP_TILES_PATH: ${OR_MAP_TILES_PATH:-/deployment/map/mapdata.mbtiles}

      # Override the map settings such as center location and zoom when opening the
      # manager's map, as well as other style details and colours.
      OR_MAP_SETTINGS_PATH: ${OR_MAP_SETTINGS_PATH:-/deployment/map/mapsettings.json}

      # Set the tileserver host name and port; the manager will reverse proxy to this server
      # to provide raster map tiles to frontend apps
      OR_MAP_TILESERVER_HOST:
      OR_MAP_TILESERVER_PORT: ${OR_MAP_TILESERVER_PORT:-8082}
      OR_MAP_TILESERVER_REQUEST_TIMEOUT: ${OR_MAP_TILESERVER_REQUEST_TIMEOUT:-10000}

      # Override logging.properties with a file of your choice; if not set then defaults
      # to embedded logging.properties or logging-dev.properties (if OR_DEV_MODE=true)
      OR_LOGGING_CONFIG_FILE:

      # The number of threads and therefore background tasks that can be executed at the same
      # time. Used by scheduled, usually short-lived and non-blocking tasks, such as protocols
      # polling a remote service at regular interval, or the internal checks for expired client
      # subscriptions on the event bus (default depends on detected CPU cores). Also used by
      # the rules engine.
      OR_SCHEDULED_TASKS_THREADS_MAX: ${OR_SCHEDULED_TASKS_THREADS_MAX:-4}

      # When asset attributes are enabled for rule events, each value update will be a temporary
      # fact in rules. You can set the global default expiration time span used when no other
      # attribute-level configuration exists. Default is 1 hour.
      OR_RULE_EVENT_EXPIRES: ${OR_RULE_EVENT_EXPIRES:-PT1H}

      # The identity provider implementation to use for managing user identities, roles, and
      # access authorization. The default is 'keycloak' which requires a separate service but
      # provides full multi-tenancy identity, role permissions, and user session timeouts.
      # The 'basic' provider supports only superusers and their text passwords, managed in a
      # simple database table, and always requires a new login when a page is reloaded.
      OR_IDENTITY_PROVIDER: ${OR_IDENTITY_PROVIDER:-keycloak}

      # For the Keycloak identity provider, you may configure session timeouts of frontend apps. This
      # will only be applied on newly created realms, or once on the master realm when clean setup runs.

      # Validity of non-offline refresh tokens, force login when expired on web app, default is 1 day.
      OR_IDENTITY_SESSION_MAX_MINUTES: ${OR_IDENTITY_SESSION_MAX_MINUTES:-1440}

      # Validity of offline refresh tokens, force login on native console app, default is 5 years.
      # Note that production offline tokens should be valid for months or years: When the offline token
      # expires, the native console app can no longer contact the service in the background (e.g. when
      # processing push notifications) and will therefore fail silently until the user logs in again.
      OR_IDENTITY_SESSION_OFFLINE_TIMEOUT_MINUTES: ${OR_IDENTITY_SESSION_OFFLINE_TIMEOUT_MINUTES:-2628000}

      # Enable/disable Prometheus metrics collection
      #OR_METRICS_ENABLED: ${OR_METRICS_ENABLED:-true}
      # Web server port used to host metrics endpoint
      #OR_METRICS_PORT: ${OR_METRICS_PORT:-8405}

      # Set the number of concurrent attribute event processors (defaults to number of CPU cores)
      OR_ATTRIBUTE_EVENT_THREADS:

      # Configure the default max age for data points stored in the database (individual attributes can use a custom
      # value by using the DATA_POINTS_MAX_AGE_DAYS AssetMeta item).
      # OR_DATA_POINTS_MAX_AGE_DAYS: 30

      # App id for the API of OpenWeather: https://openweathermap.org
      # OR_OPEN_WEATHER_API_APP_ID

      # API key for the API of ForecastSolar: https://forecast.solar
      # OR_FORECAST_SOLAR_API_KEY

      # Custom JVM options (override default manager options)
  #OR_JAVA_OPTS: ${OR_JAVA_OPTS:--Xms500m -Xmx2g
  #  -XX:NativeMemoryTracking=summary
  #  -Xlog:all=warning:stdout:uptime,level,tags
  #  -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/dump.hprof}
  #
  # THE FOLLOWING OPTIONS CAN BE USED TO ENABLE JMX; PORT MUST ALSO BE EXPOSED
  # ACCESS SHOULD BE RESTRICTED BY FIREWALL TO SPECIFIC IPs FOR DIAGNOSTIC PURPOSES
  #
  #JAVA_TOOL_OPTIONS: -Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.port=8085 -Dcom.sun.management.jmxremote.rmi.port=8085 -Djava.rmi.server.hostname=${OR_HOSTNAME:-localhost}
  #
  # Custom JVM tool options (for remote debugging)
  #JAVA_TOOL_OPTIONS: '-agentlib:jdwp=transport=dt_socket,address=0.0.0.0:8000,server=y,suspend=n'

  # Keycloak identity provider
  keycloak:
    image: openremote/keycloak:${KEYCLOAK_VERSION:-latest}
    restart: always
    # Map any custom themes into the /deployment/keycloak/themes dir:
    #volumes:
      # Map custom themes
      # - ../deployment:/deployment
      # - deployment-data:/deployment
    #ports:
    #  - "8081:8080" # Web server port
    environment:

      # It is important that all services are time synchronized. Bearer tokens are
      # only valid for minutes, and authentication fails if Keycloak drifts
      TZ: ${TZ:-Europe/Amsterdam}

      # Switch to debug to diagnose Keycloak problems; default:
      KC_LOG_LEVEL: ${KC_LOG_LEVEL:-info}

      # Configure how Keycloak connects to the database
      KC_DB_URL_HOST: ${KC_DB_URL_HOST:-postgresql}
      KC_DB_URL_PORT: ${KC_DB_URL_PORT:-5432}
      KC_DB_URL_DATABASE: ${KC_DB_URL_DATABASE:-openremote}
      KC_DB_SCHEMA: ${KC_DB_SCHEMA:-public}
      KC_DB_USERNAME: ${KC_DB_USERNAME:-postgres}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD:-postgres}
      # Configure web server
      KC_HOSTNAME: ${OR_HOSTNAME:-localhost}
      KC_HOSTNAME_PORT: ${OR_SSL_PORT:--1}
      #KC_HOSTNAME_PATH: ${KC_HOSTNAME_PATH:-auth}
      #KC_HOSTNAME_ADMIN: ${KC_HOSTNAME_ADMIN:-}
      #KC_HTTP_ENABLED: ${KC_HTTP_ENABLED:-true}
      #KC_PROXY_HEADERS: ${KC_PROXY_HEADERS:-xforwarded}
      #KC_PROXY: ${KC_PROXY:-edge}
      # Configure main user credentials (only on first startup)
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-secret}
      # Custom startup options (see keycloak documentation)
      KEYCLOAK_START_COMMAND: ${KEYCLOAK_START_COMMAND:-start}
      KEYCLOAK_START_OPTS: ${KEYCLOAK_START_OPTS:-}
      # Default themes to use
      KEYCLOAK_DEFAULT_THEME: ${KEYCLOAK_DEFAULT_THEME:-openremote}
      KEYCLOAK_ACCOUNT_THEME: ${KEYCLOAK_ACCOUNT_THEME:-openremote}
      KEYCLOAK_WELCOME_THEME: ${KEYCLOAK_WELCOME_THEME:-keycloak}
      # Use the following to set the issuer to a fixed value (useful when accessing a private instance via a tunnel)
      # Should also set KC_HOSTNAME to blank, KC_HOSTNAME_STRICT to false and if the keycloak instance is publicly
      # exposed then the proxy should be configured to validate the host header to prevent abuse
      #KEYCLOAK_ISSUER_BASE_URI: 'https://192.168.1.2/auth'

      # Custom JVM options (increase heap size if required)
      JAVA_OPTS: ${KEYCLOAK_JAVA_OPTS:-}

  # PostgreSQL DBMS
  postgresql:
    image: openremote/postgresql:${POSTGRESQL_VERSION:-latest}
    restart: always
    # Shared memory should be increased for any reasonable DB size this should be increased further
    shm_size: 128mb
    # Docker volume for persistent storage of DB; can alternatively map to host
    volumes:
      # Needs to be available on the same path as the manager for data exports to work
      - manager-data:/storage
#      - postgresql-data:/var/lib/postgresql/data
    #ports:
    #  - "5432:5432" # DB server
    environment:

      # It is important that all services have the same timezone and are time synchronized.
      # Bearer tokens are only valid for minutes, and authentication fails if Keycloak drifts.
      TZ: ${TZ:-Europe/Amsterdam}
      PGTZ: ${PGTZ:-Europe/Amsterdam}

      # Database settings
      POSTGRES_DB: ${OR_DB_NAME:-openremote}
      POSTGRES_USER: ${OR_DB_USER:-postgres}
      POSTGRES_PASSWORD: ${OR_DB_PASSWORD:-postgres}

      # When a newer POSTGRESQL image is used with a higher OR_REINDEX_COUNTER and PGDATA is
      # preserved then the container will REINDEX the DB automatically unless the following
      # is set to false
      #OR_DISABLE_REINDEX=${OR_DISABLE_REINDEX:-false}

  # Map tile server
  tileserver:
    image: openremote/tileserver:${TILESERVER_VERSION:-latest}
    restart: always
    #ports:
    #  - "8082:80" # Web server port
